!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon6
ALT	kern/console.c	220;"	d	file:
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARRAYSIZE	user/testbss.c	5;"	d	file:
ARRAY_SIZE	inc/types.h	70;"	d
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/badsegment.asm	/^#define ASM 1$/;"	d
ASM	obj/user/breakpoint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/buggyhello2.asm	/^#define ASM 1$/;"	d
ASM	obj/user/divzero.asm	/^#define ASM 1$/;"	d
ASM	obj/user/dumbfork.asm	/^#define ASM 1$/;"	d
ASM	obj/user/evilhello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/fairness.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultalloc.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultallocbad.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultbadhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultdie.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultevilhandler.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultnostack.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultread.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultreadkernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultregs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwrite.asm	/^#define ASM 1$/;"	d
ASM	obj/user/faultwritekernel.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpongs.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/sendpage.asm	/^#define ASM 1$/;"	d
ASM	obj/user/softint.asm	/^#define ASM 1$/;"	d
ASM	obj/user/spin.asm	/^#define ASM 1$/;"	d
ASM	obj/user/stresssched.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testbss.asm	/^#define ASM 1$/;"	d
ASM	obj/user/yield.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
BCAST	kern/lapic.c	28;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUSY	kern/lapic.c	30;"	d	file:
C	kern/console.c	287;"	d	file:
CAPSLOCK	kern/console.c	222;"	d	file:
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -g -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHECK	user/faultregs.c	43;"	d	file:
CHECK	user/faultregs.c	65;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CMDBUF_SIZE	kern/monitor.c	17;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	28;"	d	file:
COM_DLL	kern/console.c	32;"	d	file:
COM_DLM	kern/console.c	33;"	d	file:
COM_FCR	kern/console.c	37;"	d	file:
COM_IER	kern/console.c	34;"	d	file:
COM_IER_RDI	kern/console.c	35;"	d	file:
COM_IIR	kern/console.c	36;"	d	file:
COM_LCR	kern/console.c	38;"	d	file:
COM_LCR_DLAB	kern/console.c	39;"	d	file:
COM_LCR_WLEN8	kern/console.c	40;"	d	file:
COM_LSR	kern/console.c	45;"	d	file:
COM_LSR_DATA	kern/console.c	46;"	d	file:
COM_LSR_TSRE	kern/console.c	48;"	d	file:
COM_LSR_TXRDY	kern/console.c	47;"	d	file:
COM_MCR	kern/console.c	41;"	d	file:
COM_MCR_DTR	kern/console.c	43;"	d	file:
COM_MCR_OUT2	kern/console.c	44;"	d	file:
COM_MCR_RTS	kern/console.c	42;"	d	file:
COM_RX	kern/console.c	30;"	d	file:
COM_TX	kern/console.c	31;"	d	file:
CONSBUFSIZE	kern/console.c	390;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_HALTED	kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon5
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon5
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon5
CR0_AM	inc/mmu.h	86;"	d
CR0_CD	inc/mmu.h	88;"	d
CR0_EM	inc/mmu.h	81;"	d
CR0_ET	inc/mmu.h	83;"	d
CR0_MP	inc/mmu.h	80;"	d
CR0_NE	inc/mmu.h	84;"	d
CR0_NW	inc/mmu.h	87;"	d
CR0_PE	inc/mmu.h	79;"	d
CR0_PG	inc/mmu.h	89;"	d
CR0_TS	inc/mmu.h	82;"	d
CR0_WP	inc/mmu.h	85;"	d
CR4_DE	inc/mmu.h	94;"	d
CR4_MCE	inc/mmu.h	92;"	d
CR4_PCE	inc/mmu.h	91;"	d
CR4_PSE	inc/mmu.h	93;"	d
CR4_PVI	inc/mmu.h	96;"	d
CR4_TSD	inc/mmu.h	95;"	d
CR4_VME	inc/mmu.h	97;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	219;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
CpuInfo	kern/cpu.h	/^struct CpuInfo {$/;"	s
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/breakpoint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/buggyhello2.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/dumbfork.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/evilhello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/fairness.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultalloc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultallocbad.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultbadhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultdie.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultevilhandler.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultnostack.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultregs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwrite.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultwritekernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpongs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sendpage.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/stresssched.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/console.c	226;"	d	file:
ELFHDR	boot/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	53;"	d
ELF_PROG_LOAD	inc/elf.h	49;"	d
ELF_SHN_UNDEF	inc/elf.h	63;"	d
ELF_SHT_NULL	inc/elf.h	57;"	d
ELF_SHT_PROGBITS	inc/elf.h	58;"	d
ELF_SHT_STRTAB	inc/elf.h	60;"	d
ELF_SHT_SYMTAB	inc/elf.h	59;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENVGENSHIFT	kern/env.c	22;"	d	file:
ENVX	inc/env.h	30;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon3
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon3
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon3
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon3
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon3
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
EOI	kern/lapic.c	17;"	d	file:
ERROR	kern/lapic.c	39;"	d	file:
ESR	kern/lapic.c	20;"	d	file:
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon4
E_EOF	inc/error.h	/^	E_EOF		,	\/\/ Unexpected end of file$/;"	e	enum:__anon4
E_FAULT	inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon4
E_INVAL	inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon4
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon4
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon4
E_NO_MEM	inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon4
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon4
Eipdebuginfo	kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
FEC_PR	inc/mmu.h	123;"	d
FEC_U	inc/mmu.h	125;"	d
FEC_WR	inc/mmu.h	124;"	d
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	117;"	d
FL_AF	inc/mmu.h	102;"	d
FL_CF	inc/mmu.h	100;"	d
FL_DF	inc/mmu.h	107;"	d
FL_ID	inc/mmu.h	120;"	d
FL_IF	inc/mmu.h	106;"	d
FL_IOPL_0	inc/mmu.h	110;"	d
FL_IOPL_1	inc/mmu.h	111;"	d
FL_IOPL_2	inc/mmu.h	112;"	d
FL_IOPL_3	inc/mmu.h	113;"	d
FL_IOPL_MASK	inc/mmu.h	109;"	d
FL_NT	inc/mmu.h	114;"	d
FL_OF	inc/mmu.h	108;"	d
FL_PF	inc/mmu.h	101;"	d
FL_RF	inc/mmu.h	115;"	d
FL_SF	inc/mmu.h	104;"	d
FL_TF	inc/mmu.h	105;"	d
FL_VIF	inc/mmu.h	118;"	d
FL_VIP	inc/mmu.h	119;"	d
FL_VM	inc/mmu.h	116;"	d
FL_ZF	inc/mmu.h	103;"	d
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	16;"	d
GD_KT	inc/memlayout.h	15;"	d
GD_TSS0	inc/memlayout.h	19;"	d
GD_UD	inc/memlayout.h	18;"	d
GD_UT	inc/memlayout.h	17;"	d
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INIT	kern/lapic.c	22;"	d	file:
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	38;"	d
KADDR	obj/kern/kernel.asm	/^#define KADDR(pa) _kaddr(__FILE__, __LINE__, pa)$/;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=4$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_i386$/;"	m
LEVEL	kern/lapic.c	27;"	d	file:
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LOAD_REGS	user/faultregs.c	23;"	d	file:
LOG2NENV	inc/env.h	28;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	218;"	d	file:
MAXARGS	obj/kern/kernel.asm	/^#define MAXARGS 16$/;"	d
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon4
MAX_IRQS	kern/picirq.h	9;"	d
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MIN	inc/types.h	43;"	d
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	142;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPIOINTR	obj/kern/kernel.asm	/^#define MPIOINTR  0x03  \/\/ One per bus interrupt source$/;"	d
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPLINTR	obj/kern/kernel.asm	/^#define MPLINTR   0x04  \/\/ One per system interrupt source$/;"	d
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCPU	kern/cpu.h	11;"	d
NENV	inc/env.h	29;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NO	kern/console.c	216;"	d	file:
NPDENTRIES	inc/mmu.h	45;"	d
NPTENTRIES	inc/mmu.h	46;"	d
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon2
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NUMLOCK	kern/console.c	223;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_EXT16HI	kern/kclock.h	24;"	d
NVRAM_EXT16LO	kern/kclock.h	23;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	84;"	d
O_CREAT	inc/lib.h	86;"	d
O_EXCL	inc/lib.h	88;"	d
O_MKDIR	inc/lib.h	89;"	d
O_RDONLY	inc/lib.h	81;"	d
O_RDWR	inc/lib.h	83;"	d
O_TRUNC	inc/lib.h	87;"	d
O_WRONLY	inc/lib.h	82;"	d
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Oct 12 17:19:29 EDT 2016$/;"	m
PADDR	kern/pmap.h	26;"	d
PADDR	obj/kern/kernel.asm	/^#define PADDR(kva) _paddr(__FILE__, __LINE__, kva)$/;"	d
PCINT	kern/lapic.c	36;"	d	file:
PDX	inc/mmu.h	33;"	d
PDXSHIFT	inc/mmu.h	55;"	d
PENTIUM	kern/pmap.c	14;"	d	file:
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PFTEMP	inc/memlayout.h	137;"	d
PGADDR	inc/mmu.h	42;"	d
PGNUM	inc/mmu.h	30;"	d
PGOFF	inc/mmu.h	39;"	d
PGSHIFT	inc/mmu.h	49;"	d
PGSIZE	inc/mmu.h	48;"	d
PTE_A	inc/mmu.h	63;"	d
PTE_ADDR	inc/mmu.h	76;"	d
PTE_AVAIL	inc/mmu.h	70;"	d
PTE_COW	lib/fork.c	8;"	d	file:
PTE_D	inc/mmu.h	64;"	d
PTE_G	inc/mmu.h	66;"	d
PTE_P	inc/mmu.h	58;"	d
PTE_PCD	inc/mmu.h	62;"	d
PTE_PS	inc/mmu.h	65;"	d
PTE_PWT	inc/mmu.h	61;"	d
PTE_SHARE	inc/lib.h	74;"	d
PTE_SYSCALL	inc/mmu.h	73;"	d
PTE_U	inc/mmu.h	60;"	d
PTE_W	inc/mmu.h	59;"	d
PTSHIFT	inc/mmu.h	52;"	d
PTSIZE	inc/mmu.h	51;"	d
PTX	inc/mmu.h	36;"	d
PTXSHIFT	inc/mmu.h	54;"	d
PageInfo	inc/memlayout.h	/^struct PageInfo {$/;"	s
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu >\/dev\/null 2>&1; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -drive file=$(OBJDIR)\/kern\/kernel.img,index=0,media=disk,format=raw -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	inc/types.h	64;"	d
Runner	gradelib.py	/^class Runner():$/;"	c
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	224;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SEG	inc/mmu.h	142;"	d
SEG	inc/mmu.h	172;"	d
SEG16	inc/mmu.h	176;"	d
SEG_FAULT	inc/mmu.h	170;"	d
SEG_NULL	inc/mmu.h	139;"	d
SEG_NULL	inc/mmu.h	168;"	d
SETCALLGATE	inc/mmu.h	296;"	d
SETGATE	inc/mmu.h	282;"	d
SHIFT	kern/console.c	218;"	d	file:
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STA_A	inc/mmu.h	189;"	d
STA_C	inc/mmu.h	186;"	d
STA_E	inc/mmu.h	185;"	d
STA_R	inc/mmu.h	188;"	d
STA_W	inc/mmu.h	187;"	d
STA_X	inc/mmu.h	184;"	d
STS_CG16	inc/mmu.h	195;"	d
STS_CG32	inc/mmu.h	201;"	d
STS_IG16	inc/mmu.h	197;"	d
STS_IG32	inc/mmu.h	202;"	d
STS_LDT	inc/mmu.h	193;"	d
STS_T16A	inc/mmu.h	192;"	d
STS_T16B	inc/mmu.h	194;"	d
STS_T32A	inc/mmu.h	199;"	d
STS_T32B	inc/mmu.h	200;"	d
STS_TG	inc/mmu.h	196;"	d
STS_TG16	inc/mmu.h	198;"	d
STS_TG32	inc/mmu.h	203;"	d
SVR	kern/lapic.c	18;"	d	file:
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon2
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon2
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon2
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon2
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon2
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon2
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon2
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon2
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon2
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon2
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon2
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon2
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon2
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TDCR	kern/lapic.c	43;"	d	file:
TEMP_ADDR	obj/user/sendpage.asm	/^#define TEMP_ADDR	((char*)0xa00000)$/;"	d
TEMP_ADDR	user/sendpage.c	9;"	d	file:
TEMP_ADDR_CHILD	obj/user/sendpage.asm	/^#define TEMP_ADDR_CHILD	((char*)0xb00000)$/;"	d
TEMP_ADDR_CHILD	user/sendpage.c	10;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TICR	kern/lapic.c	41;"	d	file:
TIMER	kern/lapic.c	33;"	d	file:
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
UENVS	inc/memlayout.h	116;"	d
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UPAGES	inc/memlayout.h	114;"	d
UPSTREAM	GNUmakefile	/^UPSTREAM := $(shell git remote -v | grep "pdos.csail.mit.edu\/6.828\/2016\/jos.git (fetch)" | awk '{split($$0,a," "); print a[1]}')$/;"	m
USED	inc/lib.h	21;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs$/;"	m
USTABDATA	inc/memlayout.h	139;"	d
USTACKTOP	inc/memlayout.h	128;"	d
UTEMP	inc/memlayout.h	134;"	d
UTEXT	inc/memlayout.h	131;"	d
UTOP	inc/memlayout.h	123;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	112;"	d
UXSTACKTOP	inc/memlayout.h	125;"	d
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VER	kern/lapic.c	15;"	d	file:
WEBSUB	GNUmakefile	/^WEBSUB := https:\/\/6828.scripts.mit.edu\/2016\/handin.py$/;"	m
WHITESPACE	kern/monitor.c	217;"	d	file:
WHITESPACE	obj/kern/kernel.asm	/^#define WHITESPACE "\\t\\r\\n "$/;"	d
X1	kern/lapic.c	34;"	d	file:
_CONSOLE_H_	kern/console.h	4;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
_alltraps	kern/trapentry.S	/^ _alltraps:$/;"	l
_alltraps	obj/kern/kernel.asm	/^ _alltraps:$/;"	l
_kaddr	kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f
_paddr	kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/user/faultalloc.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultallocbad.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultdie.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultnostack.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/faultregs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/faultnostack.asm	/^_pgfault_upcall:$/;"	l
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/breakpoint.asm	/^_start:$/;"	l
_start	obj/user/buggyhello.asm	/^_start:$/;"	l
_start	obj/user/buggyhello2.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/dumbfork.asm	/^_start:$/;"	l
_start	obj/user/evilhello.asm	/^_start:$/;"	l
_start	obj/user/fairness.asm	/^_start:$/;"	l
_start	obj/user/faultalloc.asm	/^_start:$/;"	l
_start	obj/user/faultallocbad.asm	/^_start:$/;"	l
_start	obj/user/faultbadhandler.asm	/^_start:$/;"	l
_start	obj/user/faultdie.asm	/^_start:$/;"	l
_start	obj/user/faultevilhandler.asm	/^_start:$/;"	l
_start	obj/user/faultnostack.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/faultregs.asm	/^_start:$/;"	l
_start	obj/user/faultwrite.asm	/^_start:$/;"	l
_start	obj/user/faultwritekernel.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/pingpongs.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/sendpage.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/stresssched.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/badsegment.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/breakpoint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/breakpoint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/buggyhello2.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/buggyhello2.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/divzero.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/dumbfork.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/dumbfork.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/evilhello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/evilhello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/fairness.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/fairness.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultalloc.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultalloc.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultallocbad.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultallocbad.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultbadhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultdie.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultdie.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultevilhandler.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultnostack.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultnostack.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultread.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultregs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultregs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwrite.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwrite.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/faultwritekernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpongs.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpongs.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/sendpage.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/sendpage.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/softint.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/spin.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/stresssched.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/stresssched.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testbss.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/yield.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^		altflag = 0;$/;"	d
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/user/badsegment.asm	/^args_exist:$/;"	l
args_exist	obj/user/breakpoint.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/buggyhello2.asm	/^args_exist:$/;"	l
args_exist	obj/user/divzero.asm	/^args_exist:$/;"	l
args_exist	obj/user/dumbfork.asm	/^args_exist:$/;"	l
args_exist	obj/user/evilhello.asm	/^args_exist:$/;"	l
args_exist	obj/user/fairness.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultalloc.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultallocbad.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultbadhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultdie.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultevilhandler.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultnostack.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultread.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultreadkernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultregs.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwrite.asm	/^args_exist:$/;"	l
args_exist	obj/user/faultwritekernel.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpongs.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/sendpage.asm	/^args_exist:$/;"	l
args_exist	obj/user/softint.asm	/^args_exist:$/;"	l
args_exist	obj/user/spin.asm	/^args_exist:$/;"	l
args_exist	obj/user/stresssched.asm	/^args_exist:$/;"	l
args_exist	obj/user/testbss.asm	/^args_exist:$/;"	l
args_exist	obj/user/yield.asm	/^args_exist:$/;"	l
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = 8;$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 10;$/;"	d
base	obj/user/badsegment.asm	/^			base = 16;$/;"	d
base	obj/user/badsegment.asm	/^			base = 8;$/;"	d
base	obj/user/badsegment.asm	/^		base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 10;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 16;$/;"	d
base	obj/user/breakpoint.asm	/^			base = 8;$/;"	d
base	obj/user/breakpoint.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello.asm	/^		base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 10;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 16;$/;"	d
base	obj/user/buggyhello2.asm	/^			base = 8;$/;"	d
base	obj/user/buggyhello2.asm	/^		base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 10;$/;"	d
base	obj/user/divzero.asm	/^			base = 16;$/;"	d
base	obj/user/divzero.asm	/^			base = 8;$/;"	d
base	obj/user/divzero.asm	/^		base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 10;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 16;$/;"	d
base	obj/user/dumbfork.asm	/^			base = 8;$/;"	d
base	obj/user/dumbfork.asm	/^		base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 10;$/;"	d
base	obj/user/evilhello.asm	/^			base = 16;$/;"	d
base	obj/user/evilhello.asm	/^			base = 8;$/;"	d
base	obj/user/evilhello.asm	/^		base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 10;$/;"	d
base	obj/user/fairness.asm	/^			base = 16;$/;"	d
base	obj/user/fairness.asm	/^			base = 8;$/;"	d
base	obj/user/fairness.asm	/^		base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 10;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 16;$/;"	d
base	obj/user/faultalloc.asm	/^			base = 8;$/;"	d
base	obj/user/faultalloc.asm	/^		base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 10;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 16;$/;"	d
base	obj/user/faultallocbad.asm	/^			base = 8;$/;"	d
base	obj/user/faultallocbad.asm	/^		base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultbadhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultbadhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 10;$/;"	d
base	obj/user/faultdie.asm	/^			base = 16;$/;"	d
base	obj/user/faultdie.asm	/^			base = 8;$/;"	d
base	obj/user/faultdie.asm	/^		base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 10;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 16;$/;"	d
base	obj/user/faultevilhandler.asm	/^			base = 8;$/;"	d
base	obj/user/faultevilhandler.asm	/^		base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 10;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 16;$/;"	d
base	obj/user/faultnostack.asm	/^			base = 8;$/;"	d
base	obj/user/faultnostack.asm	/^		base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 10;$/;"	d
base	obj/user/faultread.asm	/^			base = 16;$/;"	d
base	obj/user/faultread.asm	/^			base = 8;$/;"	d
base	obj/user/faultread.asm	/^		base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^		base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 10;$/;"	d
base	obj/user/faultregs.asm	/^			base = 16;$/;"	d
base	obj/user/faultregs.asm	/^			base = 8;$/;"	d
base	obj/user/faultregs.asm	/^		base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 10;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 16;$/;"	d
base	obj/user/faultwrite.asm	/^			base = 8;$/;"	d
base	obj/user/faultwrite.asm	/^		base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 10;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 16;$/;"	d
base	obj/user/faultwritekernel.asm	/^			base = 8;$/;"	d
base	obj/user/faultwritekernel.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^			base = 8;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^			base = 8;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^			base = 8;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^			base = 8;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 10;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 16;$/;"	d
base	obj/user/pingpongs.asm	/^			base = 8;$/;"	d
base	obj/user/pingpongs.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^			base = 8;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 10;$/;"	d
base	obj/user/sendpage.asm	/^			base = 16;$/;"	d
base	obj/user/sendpage.asm	/^			base = 8;$/;"	d
base	obj/user/sendpage.asm	/^		base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 10;$/;"	d
base	obj/user/softint.asm	/^			base = 16;$/;"	d
base	obj/user/softint.asm	/^			base = 8;$/;"	d
base	obj/user/softint.asm	/^		base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 10;$/;"	d
base	obj/user/spin.asm	/^			base = 16;$/;"	d
base	obj/user/spin.asm	/^			base = 8;$/;"	d
base	obj/user/spin.asm	/^		base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 10;$/;"	d
base	obj/user/stresssched.asm	/^			base = 16;$/;"	d
base	obj/user/stresssched.asm	/^			base = 8;$/;"	d
base	obj/user/stresssched.asm	/^		base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 10;$/;"	d
base	obj/user/testbss.asm	/^			base = 16;$/;"	d
base	obj/user/testbss.asm	/^			base = 8;$/;"	d
base	obj/user/testbss.asm	/^		base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 10;$/;"	d
base	obj/user/yield.asm	/^			base = 16;$/;"	d
base	obj/user/yield.asm	/^			base = 8;$/;"	d
base	obj/user/yield.asm	/^		base = 10;$/;"	d
basemem	obj/kern/kernel.asm	/^	basemem = nvram_read(NVRAM_BASELO);$/;"	d
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/user/badsegment.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/breakpoint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/buggyhello2.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/divzero.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/dumbfork.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/evilhello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/fairness.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultalloc.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultallocbad.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultbadhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultdie.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultevilhandler.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultnostack.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultread.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultreadkernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultregs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwrite.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/faultwritekernel.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpongs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/sendpage.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/softint.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/spin.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/stresssched.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testbss.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/yield.asm	/^		binaryname = argv[0];$/;"	d
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_map_region	kern/pmap.c	/^boot_map_region(pde_t *pgdir, uintptr_t va, size_t size, physaddr_t pa, int perm)$/;"	f	file:
bootcpu	kern/mpconfig.c	/^struct CpuInfo *bootcpu;$/;"	v	typeref:struct:CpuInfo
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon7	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/user/badsegment.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/breakpoint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/buggyhello2.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/divzero.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/dumbfork.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/evilhello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/fairness.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultalloc.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultallocbad.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultbadhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultdie.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultevilhandler.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultnostack.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultread.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultreadkernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultregs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwrite.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/faultwritekernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpongs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/sendpage.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/softint.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/spin.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/stresssched.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testbss.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/yield.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/breakpoint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/buggyhello2.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/dumbfork.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/evilhello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/fairness.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultalloc.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultallocbad.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultbadhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultdie.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultevilhandler.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultnostack.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultregs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwrite.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/faultwritekernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpongs.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/sendpage.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/stresssched.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^				ch = *fmt;$/;"	d
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/breakpoint.asm	/^char *$/;"	l
char	obj/user/buggyhello.asm	/^char *$/;"	l
char	obj/user/buggyhello2.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/dumbfork.asm	/^char *$/;"	l
char	obj/user/evilhello.asm	/^char *$/;"	l
char	obj/user/fairness.asm	/^char *$/;"	l
char	obj/user/faultalloc.asm	/^char *$/;"	l
char	obj/user/faultallocbad.asm	/^char *$/;"	l
char	obj/user/faultbadhandler.asm	/^char *$/;"	l
char	obj/user/faultdie.asm	/^char *$/;"	l
char	obj/user/faultevilhandler.asm	/^char *$/;"	l
char	obj/user/faultnostack.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/faultregs.asm	/^char *$/;"	l
char	obj/user/faultwrite.asm	/^char *$/;"	l
char	obj/user/faultwritekernel.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/pingpongs.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/sendpage.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/stresssched.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_kern_pgdir	kern/pmap.c	/^check_kern_pgdir(void)$/;"	f	file:
check_page	kern/pmap.c	/^check_page(void)$/;"	f	file:
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_installed_pgdir	kern/pmap.c	/^check_page_installed_pgdir(void)$/;"	f	file:
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_va2pa	kern/pmap.c	/^check_va2pa(pde_t *pgdir, uintptr_t va)$/;"	f	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/breakpoint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/buggyhello2.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/dumbfork.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/evilhello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/fairness.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultalloc.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultallocbad.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultbadhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultdie.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultevilhandler.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultnostack.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultregs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwrite.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/faultwritekernel.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/pingpongs.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/sendpage.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/stresssched.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^	cnt = vcprintf(fmt, ap);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
color	gradelib.py	/^def color(name, text):$/;"	f
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon7	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/user/badsegment.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/badsegment.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/breakpoint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/breakpoint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/buggyhello2.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/buggyhello2.asm	/^const char *hello = "hello, world\\n";$/;"	l
const	obj/user/buggyhello2.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/divzero.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/divzero.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/dumbfork.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/dumbfork.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/evilhello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/evilhello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/fairness.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/fairness.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultalloc.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultalloc.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultallocbad.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultallocbad.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultbadhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultbadhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultdie.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultdie.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultevilhandler.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultevilhandler.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultnostack.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultnostack.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultread.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultread.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultreadkernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultreadkernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultregs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultregs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwrite.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwrite.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/faultwritekernel.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/faultwritekernel.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpongs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpongs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/sendpage.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/sendpage.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/softint.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/softint.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/spin.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/spin.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/stresssched.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/stresssched.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testbss.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testbss.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/yield.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/yield.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct CpuInfo cpus[NCPU];$/;"	v	typeref:struct:CpuInfo
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
cr0	obj/kern/kernel.asm	/^	cr0 = rcr0();$/;"	d
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
cur_idx	obj/kern/kernel.asm	/^		cur_idx = (init_idx + i) % NENV;$/;"	d
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/user/badsegment.asm	/^	d = dst;$/;"	d
d	obj/user/breakpoint.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello.asm	/^	d = dst;$/;"	d
d	obj/user/buggyhello2.asm	/^	d = dst;$/;"	d
d	obj/user/divzero.asm	/^	d = dst;$/;"	d
d	obj/user/dumbfork.asm	/^	d = dst;$/;"	d
d	obj/user/evilhello.asm	/^	d = dst;$/;"	d
d	obj/user/fairness.asm	/^	d = dst;$/;"	d
d	obj/user/faultalloc.asm	/^	d = dst;$/;"	d
d	obj/user/faultallocbad.asm	/^	d = dst;$/;"	d
d	obj/user/faultbadhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultdie.asm	/^	d = dst;$/;"	d
d	obj/user/faultevilhandler.asm	/^	d = dst;$/;"	d
d	obj/user/faultnostack.asm	/^	d = dst;$/;"	d
d	obj/user/faultread.asm	/^	d = dst;$/;"	d
d	obj/user/faultreadkernel.asm	/^	d = dst;$/;"	d
d	obj/user/faultregs.asm	/^	d = dst;$/;"	d
d	obj/user/faultwrite.asm	/^	d = dst;$/;"	d
d	obj/user/faultwritekernel.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/pingpongs.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/sendpage.asm	/^	d = dst;$/;"	d
d	obj/user/softint.asm	/^	d = dst;$/;"	d
d	obj/user/spin.asm	/^	d = dst;$/;"	d
d	obj/user/stresssched.asm	/^	d = dst;$/;"	d
d	obj/user/testbss.asm	/^	d = dst;$/;"	d
d	obj/user/yield.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debuginfo_eip	kern/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct Eipdebuginfo *info)$/;"	f
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/user/badsegment.asm	/^		default:$/;"	l
default	obj/user/breakpoint.asm	/^		default:$/;"	l
default	obj/user/buggyhello.asm	/^		default:$/;"	l
default	obj/user/buggyhello2.asm	/^		default:$/;"	l
default	obj/user/divzero.asm	/^		default:$/;"	l
default	obj/user/dumbfork.asm	/^		default:$/;"	l
default	obj/user/evilhello.asm	/^		default:$/;"	l
default	obj/user/fairness.asm	/^		default:$/;"	l
default	obj/user/faultalloc.asm	/^		default:$/;"	l
default	obj/user/faultallocbad.asm	/^		default:$/;"	l
default	obj/user/faultbadhandler.asm	/^		default:$/;"	l
default	obj/user/faultdie.asm	/^		default:$/;"	l
default	obj/user/faultevilhandler.asm	/^		default:$/;"	l
default	obj/user/faultnostack.asm	/^		default:$/;"	l
default	obj/user/faultread.asm	/^		default:$/;"	l
default	obj/user/faultreadkernel.asm	/^		default:$/;"	l
default	obj/user/faultregs.asm	/^		default:$/;"	l
default	obj/user/faultwrite.asm	/^		default:$/;"	l
default	obj/user/faultwritekernel.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/pingpongs.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/sendpage.asm	/^		default:$/;"	l
default	obj/user/softint.asm	/^		default:$/;"	l
default	obj/user/spin.asm	/^		default:$/;"	l
default	obj/user/stresssched.asm	/^		default:$/;"	l
default	obj/user/testbss.asm	/^		default:$/;"	l
default	obj/user/yield.asm	/^		default:$/;"	l
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/breakpoint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/buggyhello2.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/dumbfork.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/evilhello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/fairness.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultalloc.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultallocbad.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultbadhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultdie.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultevilhandler.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultnostack.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultregs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwrite.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultwritekernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpongs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sendpage.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/stresssched.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^			dig = *s - 'a' + 10;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/badsegment.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/breakpoint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/buggyhello2.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/divzero.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/dumbfork.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/evilhello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/fairness.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultalloc.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultallocbad.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultbadhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultdie.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultevilhandler.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultnostack.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultread.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultreadkernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultregs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwrite.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/faultwritekernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpongs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/sendpage.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/softint.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/spin.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/stresssched.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testbss.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/yield.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
ebp	obj/kern/kernel.asm	/^		ebp = (uint32_t *)ebp[0]; \/\/ saved %ebp$/;"	d
ebp	obj/kern/kernel.asm	/^	ebp = (uint32_t *)read_ebp();$/;"	d
ebp_mon	obj/kern/kernel.asm	/^		ebp_mon = (uint32_t *) *ebp_mon;$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
eflags	user/faultregs.c	/^	uint32_t eflags;$/;"	m	struct:regs	file:
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
eip_file	kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo
eip_fn_addr	kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo
eip_fn_name	kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo
eip_fn_namelen	kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo
eip_fn_narg	kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo
eip_line	kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo
eip_mon	obj/kern/kernel.asm	/^		eip_mon = *(ebp_mon + 1);$/;"	d
end_pa	obj/boot/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^	env_free_list = &envs[0];$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgdir	inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	obj/user/dumbfork.asm	/^	envid = sys_exofork();$/;"	d
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/user/badsegment.asm	/^envid_t$/;"	l
envid_t	obj/user/breakpoint.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello.asm	/^envid_t$/;"	l
envid_t	obj/user/buggyhello2.asm	/^envid_t$/;"	l
envid_t	obj/user/divzero.asm	/^envid_t$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t dumbfork(void);$/;"	l
envid_t	obj/user/dumbfork.asm	/^envid_t$/;"	l
envid_t	obj/user/evilhello.asm	/^envid_t$/;"	l
envid_t	obj/user/fairness.asm	/^envid_t$/;"	l
envid_t	obj/user/faultalloc.asm	/^envid_t$/;"	l
envid_t	obj/user/faultallocbad.asm	/^envid_t$/;"	l
envid_t	obj/user/faultbadhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultdie.asm	/^envid_t$/;"	l
envid_t	obj/user/faultevilhandler.asm	/^envid_t$/;"	l
envid_t	obj/user/faultnostack.asm	/^envid_t$/;"	l
envid_t	obj/user/faultread.asm	/^envid_t$/;"	l
envid_t	obj/user/faultreadkernel.asm	/^envid_t$/;"	l
envid_t	obj/user/faultregs.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwrite.asm	/^envid_t$/;"	l
envid_t	obj/user/faultwritekernel.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpongs.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/sendpage.asm	/^envid_t$/;"	l
envid_t	obj/user/softint.asm	/^envid_t$/;"	l
envid_t	obj/user/spin.asm	/^envid_t$/;"	l
envid_t	obj/user/stresssched.asm	/^envid_t$/;"	l
envid_t	obj/user/testbss.asm	/^envid_t$/;"	l
envid_t	obj/user/yield.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^	envs = (struct Env *) boot_alloc(NENV * sizeof(struct Env));$/;"	d
eph	obj/boot/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^				err = -err;$/;"	d
err	obj/user/badsegment.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/breakpoint.asm	/^				err = -err;$/;"	d
err	obj/user/breakpoint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/buggyhello2.asm	/^				err = -err;$/;"	d
err	obj/user/buggyhello2.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^				err = -err;$/;"	d
err	obj/user/divzero.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/dumbfork.asm	/^				err = -err;$/;"	d
err	obj/user/dumbfork.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/evilhello.asm	/^				err = -err;$/;"	d
err	obj/user/evilhello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/fairness.asm	/^				err = -err;$/;"	d
err	obj/user/fairness.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultalloc.asm	/^				err = -err;$/;"	d
err	obj/user/faultalloc.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultallocbad.asm	/^				err = -err;$/;"	d
err	obj/user/faultallocbad.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultbadhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultbadhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultdie.asm	/^				err = -err;$/;"	d
err	obj/user/faultdie.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultevilhandler.asm	/^				err = -err;$/;"	d
err	obj/user/faultevilhandler.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultnostack.asm	/^				err = -err;$/;"	d
err	obj/user/faultnostack.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^				err = -err;$/;"	d
err	obj/user/faultread.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultregs.asm	/^				err = -err;$/;"	d
err	obj/user/faultregs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwrite.asm	/^				err = -err;$/;"	d
err	obj/user/faultwrite.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/faultwritekernel.asm	/^				err = -err;$/;"	d
err	obj/user/faultwritekernel.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/pingpongs.asm	/^				err = -err;$/;"	d
err	obj/user/pingpongs.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/sendpage.asm	/^				err = -err;$/;"	d
err	obj/user/sendpage.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^				err = -err;$/;"	d
err	obj/user/softint.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^				err = -err;$/;"	d
err	obj/user/spin.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/stresssched.asm	/^				err = -err;$/;"	d
err	obj/user/stresssched.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^				err = -err;$/;"	d
err	obj/user/testbss.asm	/^			err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^				err = -err;$/;"	d
err	obj/user/yield.asm	/^			err = va_arg(ap, int);$/;"	d
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
exit	lib/exit.c	/^exit(void)$/;"	f
ext16mem	obj/kern/kernel.asm	/^	ext16mem = nvram_read(NVRAM_EXT16LO) * 64;$/;"	d
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
extmem	obj/kern/kernel.asm	/^	extmem = nvram_read(NVRAM_EXTLO);$/;"	d
f0100000	obj/kern/kernel.asm	/^f0100000 <_start+0xeffffff4>:$/;"	l
f0100000	obj/kern/kernel.asm	/^f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%eax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^f0100006:	00 00                	add    %al,(%eax)$/;"	l
f0100008	obj/kern/kernel.asm	/^f0100008:	fe 4f 52             	decb   0x52(%edi)$/;"	l
f010000b	obj/kern/kernel.asm	/^f010000b:	e4                   	.byte 0xe4$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c <entry>:$/;"	l
f010000c	obj/kern/kernel.asm	/^f010000c:	66 c7 05 72 04 00 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^f0100013:	34 12 $/;"	l
f0100015	obj/kern/kernel.asm	/^f0100015:	b8 00 40 12 00       	mov    $0x124000,%eax$/;"	l
f010001a	obj/kern/kernel.asm	/^f010001a:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f010001d	obj/kern/kernel.asm	/^f010001d:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0100020	obj/kern/kernel.asm	/^f0100020:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f0100025	obj/kern/kernel.asm	/^f0100025:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0100028	obj/kern/kernel.asm	/^f0100028:	b8 2f 00 10 f0       	mov    $0xf010002f,%eax$/;"	l
f010002d	obj/kern/kernel.asm	/^f010002d:	ff e0                	jmp    *%eax$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f <relocated>:$/;"	l
f010002f	obj/kern/kernel.asm	/^f010002f:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0100034	obj/kern/kernel.asm	/^f0100034:	bc 00 30 12 f0       	mov    $0xf0123000,%esp$/;"	l
f0100039	obj/kern/kernel.asm	/^f0100039:	e8 bf 00 00 00       	call   f01000fd <i386_init>$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e <spin>:$/;"	l
f010003e	obj/kern/kernel.asm	/^f010003e:	eb fe                	jmp    f010003e <spin>$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040 <_paddr>:$/;"	l
f0100040	obj/kern/kernel.asm	/^f0100040:	55                   	push   %ebp$/;"	l
f0100041	obj/kern/kernel.asm	/^f0100041:	89 e5                	mov    %esp,%ebp$/;"	l
f0100043	obj/kern/kernel.asm	/^f0100043:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100046	obj/kern/kernel.asm	/^f0100046:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100049	obj/kern/kernel.asm	/^f0100049:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010004e	obj/kern/kernel.asm	/^f010004e:	77 13                	ja     f0100063 <_paddr+0x23>$/;"	l
f0100050	obj/kern/kernel.asm	/^f0100050:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100053	obj/kern/kernel.asm	/^f0100053:	68 20 84 10 f0       	push   $0xf0108420$/;"	l
f0100058	obj/kern/kernel.asm	/^f0100058:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010005b	obj/kern/kernel.asm	/^f010005b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010005e	obj/kern/kernel.asm	/^f010005e:	e8 7d 02 00 00       	call   f01002e0 <_panic>$/;"	l
f0100063	obj/kern/kernel.asm	/^f0100063:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100066	obj/kern/kernel.asm	/^f0100066:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f010006b	obj/kern/kernel.asm	/^f010006b:	c9                   	leave  $/;"	l
f010006c	obj/kern/kernel.asm	/^f010006c:	c3                   	ret    $/;"	l
f010006d	obj/kern/kernel.asm	/^f010006d <_kaddr>:$/;"	l
f010006d	obj/kern/kernel.asm	/^f010006d:	55                   	push   %ebp$/;"	l
f010006e	obj/kern/kernel.asm	/^f010006e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100070	obj/kern/kernel.asm	/^f0100070:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100073	obj/kern/kernel.asm	/^f0100073:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0100076	obj/kern/kernel.asm	/^f0100076:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0100079	obj/kern/kernel.asm	/^f0100079:	89 c2                	mov    %eax,%edx$/;"	l
f010007b	obj/kern/kernel.asm	/^f010007b:	a1 e8 0e 23 f0       	mov    0xf0230ee8,%eax$/;"	l
f0100080	obj/kern/kernel.asm	/^f0100080:	39 c2                	cmp    %eax,%edx$/;"	l
f0100082	obj/kern/kernel.asm	/^f0100082:	72 13                	jb     f0100097 <_kaddr+0x2a>$/;"	l
f0100084	obj/kern/kernel.asm	/^f0100084:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100087	obj/kern/kernel.asm	/^f0100087:	68 44 84 10 f0       	push   $0xf0108444$/;"	l
f010008c	obj/kern/kernel.asm	/^f010008c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010008f	obj/kern/kernel.asm	/^f010008f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100092	obj/kern/kernel.asm	/^f0100092:	e8 49 02 00 00       	call   f01002e0 <_panic>$/;"	l
f0100097	obj/kern/kernel.asm	/^f0100097:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010009a	obj/kern/kernel.asm	/^f010009a:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010009f	obj/kern/kernel.asm	/^f010009f:	c9                   	leave  $/;"	l
f01000a0	obj/kern/kernel.asm	/^f01000a0:	c3                   	ret    $/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1 <lcr3>:$/;"	l
f01000a1	obj/kern/kernel.asm	/^f01000a1:	55                   	push   %ebp$/;"	l
f01000a2	obj/kern/kernel.asm	/^f01000a2:	89 e5                	mov    %esp,%ebp$/;"	l
f01000a4	obj/kern/kernel.asm	/^f01000a4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01000a7	obj/kern/kernel.asm	/^f01000a7:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01000aa	obj/kern/kernel.asm	/^f01000aa:	90                   	nop$/;"	l
f01000ab	obj/kern/kernel.asm	/^f01000ab:	5d                   	pop    %ebp$/;"	l
f01000ac	obj/kern/kernel.asm	/^f01000ac:	c3                   	ret    $/;"	l
f01000ad	obj/kern/kernel.asm	/^f01000ad <lcr4>:$/;"	l
f01000ad	obj/kern/kernel.asm	/^f01000ad:	55                   	push   %ebp$/;"	l
f01000ae	obj/kern/kernel.asm	/^f01000ae:	89 e5                	mov    %esp,%ebp$/;"	l
f01000b0	obj/kern/kernel.asm	/^f01000b0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01000b3	obj/kern/kernel.asm	/^f01000b3:	0f 22 e0             	mov    %eax,%cr4$/;"	l
f01000b6	obj/kern/kernel.asm	/^f01000b6:	90                   	nop$/;"	l
f01000b7	obj/kern/kernel.asm	/^f01000b7:	5d                   	pop    %ebp$/;"	l
f01000b8	obj/kern/kernel.asm	/^f01000b8:	c3                   	ret    $/;"	l
f01000b9	obj/kern/kernel.asm	/^f01000b9 <rcr4>:$/;"	l
f01000b9	obj/kern/kernel.asm	/^f01000b9:	55                   	push   %ebp$/;"	l
f01000ba	obj/kern/kernel.asm	/^f01000ba:	89 e5                	mov    %esp,%ebp$/;"	l
f01000bc	obj/kern/kernel.asm	/^f01000bc:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01000bf	obj/kern/kernel.asm	/^f01000bf:	0f 20 e0             	mov    %cr4,%eax$/;"	l
f01000c2	obj/kern/kernel.asm	/^f01000c2:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f01000c5	obj/kern/kernel.asm	/^f01000c5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f01000c8	obj/kern/kernel.asm	/^f01000c8:	c9                   	leave  $/;"	l
f01000c9	obj/kern/kernel.asm	/^f01000c9:	c3                   	ret    $/;"	l
f01000ca	obj/kern/kernel.asm	/^f01000ca <xchg>:$/;"	l
f01000ca	obj/kern/kernel.asm	/^f01000ca:	55                   	push   %ebp$/;"	l
f01000cb	obj/kern/kernel.asm	/^f01000cb:	89 e5                	mov    %esp,%ebp$/;"	l
f01000cd	obj/kern/kernel.asm	/^f01000cd:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01000d0	obj/kern/kernel.asm	/^f01000d0:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01000d3	obj/kern/kernel.asm	/^f01000d3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01000d6	obj/kern/kernel.asm	/^f01000d6:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f01000d9	obj/kern/kernel.asm	/^f01000d9:	f0 87 02             	lock xchg %eax,(%edx)$/;"	l
f01000dc	obj/kern/kernel.asm	/^f01000dc:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f01000df	obj/kern/kernel.asm	/^f01000df:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f01000e2	obj/kern/kernel.asm	/^f01000e2:	c9                   	leave  $/;"	l
f01000e3	obj/kern/kernel.asm	/^f01000e3:	c3                   	ret    $/;"	l
f01000e4	obj/kern/kernel.asm	/^f01000e4 <lock_kernel>:$/;"	l
f01000e4	obj/kern/kernel.asm	/^f01000e4:	55                   	push   %ebp$/;"	l
f01000e5	obj/kern/kernel.asm	/^f01000e5:	89 e5                	mov    %esp,%ebp$/;"	l
f01000e7	obj/kern/kernel.asm	/^f01000e7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01000ea	obj/kern/kernel.asm	/^f01000ea:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01000ed	obj/kern/kernel.asm	/^f01000ed:	68 e0 55 12 f0       	push   $0xf01255e0$/;"	l
f01000f2	obj/kern/kernel.asm	/^f01000f2:	e8 e4 7e 00 00       	call   f0107fdb <spin_lock>$/;"	l
f01000f7	obj/kern/kernel.asm	/^f01000f7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01000fa	obj/kern/kernel.asm	/^f01000fa:	90                   	nop$/;"	l
f01000fb	obj/kern/kernel.asm	/^f01000fb:	c9                   	leave  $/;"	l
f01000fc	obj/kern/kernel.asm	/^f01000fc:	c3                   	ret    $/;"	l
f01000fd	obj/kern/kernel.asm	/^f01000fd <i386_init>:$/;"	l
f01000fd	obj/kern/kernel.asm	/^f01000fd:	55                   	push   %ebp$/;"	l
f01000fe	obj/kern/kernel.asm	/^f01000fe:	89 e5                	mov    %esp,%ebp$/;"	l
f0100100	obj/kern/kernel.asm	/^f0100100:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100103	obj/kern/kernel.asm	/^f0100103:	ba 08 20 27 f0       	mov    $0xf0272008,%edx$/;"	l
f0100108	obj/kern/kernel.asm	/^f0100108:	b8 b4 fe 22 f0       	mov    $0xf022feb4,%eax$/;"	l
f010010d	obj/kern/kernel.asm	/^f010010d:	29 c2                	sub    %eax,%edx$/;"	l
f010010f	obj/kern/kernel.asm	/^f010010f:	89 d0                	mov    %edx,%eax$/;"	l
f0100111	obj/kern/kernel.asm	/^f0100111:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100114	obj/kern/kernel.asm	/^f0100114:	50                   	push   %eax$/;"	l
f0100115	obj/kern/kernel.asm	/^f0100115:	6a 00                	push   $0x0$/;"	l
f0100117	obj/kern/kernel.asm	/^f0100117:	68 b4 fe 22 f0       	push   $0xf022feb4$/;"	l
f010011c	obj/kern/kernel.asm	/^f010011c:	e8 6e 71 00 00       	call   f010728f <memset>$/;"	l
f0100121	obj/kern/kernel.asm	/^f0100121:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100124	obj/kern/kernel.asm	/^f0100124:	e8 f1 09 00 00       	call   f0100b1a <cons_init>$/;"	l
f0100129	obj/kern/kernel.asm	/^f0100129:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010012c	obj/kern/kernel.asm	/^f010012c:	68 ac 1a 00 00       	push   $0x1aac$/;"	l
f0100131	obj/kern/kernel.asm	/^f0100131:	68 67 84 10 f0       	push   $0xf0108467$/;"	l
f0100136	obj/kern/kernel.asm	/^f0100136:	e8 73 48 00 00       	call   f01049ae <cprintf>$/;"	l
f010013b	obj/kern/kernel.asm	/^f010013b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010013e	obj/kern/kernel.asm	/^f010013e:	e8 dd 13 00 00       	call   f0101520 <mem_init>$/;"	l
f0100143	obj/kern/kernel.asm	/^f0100143:	e8 7f 3d 00 00       	call   f0103ec7 <env_init>$/;"	l
f0100148	obj/kern/kernel.asm	/^f0100148:	e8 3c 49 00 00       	call   f0104a89 <trap_init>$/;"	l
f010014d	obj/kern/kernel.asm	/^f010014d:	e8 39 78 00 00       	call   f010798b <mp_init>$/;"	l
f0100152	obj/kern/kernel.asm	/^f0100152:	e8 8b 7a 00 00       	call   f0107be2 <lapic_init>$/;"	l
f0100157	obj/kern/kernel.asm	/^f0100157:	e8 5c 46 00 00       	call   f01047b8 <pic_init>$/;"	l
f010015c	obj/kern/kernel.asm	/^f010015c:	e8 83 ff ff ff       	call   f01000e4 <lock_kernel>$/;"	l
f0100161	obj/kern/kernel.asm	/^f0100161:	e8 17 00 00 00       	call   f010017d <boot_aps>$/;"	l
f0100166	obj/kern/kernel.asm	/^f0100166:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100169	obj/kern/kernel.asm	/^f0100169:	6a 00                	push   $0x0$/;"	l
f010016b	obj/kern/kernel.asm	/^f010016b:	68 e4 61 1a f0       	push   $0xf01a61e4$/;"	l
f0100170	obj/kern/kernel.asm	/^f0100170:	e8 f9 41 00 00       	call   f010436e <env_create>$/;"	l
f0100175	obj/kern/kernel.asm	/^f0100175:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100178	obj/kern/kernel.asm	/^f0100178:	e8 bd 5a 00 00       	call   f0105c3a <sched_yield>$/;"	l
f010017d	obj/kern/kernel.asm	/^f010017d <boot_aps>:$/;"	l
f010017d	obj/kern/kernel.asm	/^f010017d:	55                   	push   %ebp$/;"	l
f010017e	obj/kern/kernel.asm	/^f010017e:	89 e5                	mov    %esp,%ebp$/;"	l
f0100180	obj/kern/kernel.asm	/^f0100180:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100183	obj/kern/kernel.asm	/^f0100183:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100186	obj/kern/kernel.asm	/^f0100186:	68 00 70 00 00       	push   $0x7000$/;"	l
f010018b	obj/kern/kernel.asm	/^f010018b:	6a 54                	push   $0x54$/;"	l
f010018d	obj/kern/kernel.asm	/^f010018d:	68 82 84 10 f0       	push   $0xf0108482$/;"	l
f0100192	obj/kern/kernel.asm	/^f0100192:	e8 d6 fe ff ff       	call   f010006d <_kaddr>$/;"	l
f0100197	obj/kern/kernel.asm	/^f0100197:	83 c4 10             	add    $0x10,%esp$/;"	l
f010019a	obj/kern/kernel.asm	/^f010019a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010019d	obj/kern/kernel.asm	/^f010019d:	ba 56 76 10 f0       	mov    $0xf0107656,%edx$/;"	l
f01001a2	obj/kern/kernel.asm	/^f01001a2:	b8 dc 75 10 f0       	mov    $0xf01075dc,%eax$/;"	l
f01001a7	obj/kern/kernel.asm	/^f01001a7:	29 c2                	sub    %eax,%edx$/;"	l
f01001a9	obj/kern/kernel.asm	/^f01001a9:	89 d0                	mov    %edx,%eax$/;"	l
f01001ab	obj/kern/kernel.asm	/^f01001ab:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01001ae	obj/kern/kernel.asm	/^f01001ae:	50                   	push   %eax$/;"	l
f01001af	obj/kern/kernel.asm	/^f01001af:	68 dc 75 10 f0       	push   $0xf01075dc$/;"	l
f01001b4	obj/kern/kernel.asm	/^f01001b4:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f01001b7	obj/kern/kernel.asm	/^f01001b7:	e8 41 71 00 00       	call   f01072fd <memmove>$/;"	l
f01001bc	obj/kern/kernel.asm	/^f01001bc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01001bf	obj/kern/kernel.asm	/^f01001bf:	c7 45 f4 20 10 23 f0 	movl   $0xf0231020,-0xc(%ebp)$/;"	l
f01001c6	obj/kern/kernel.asm	/^f01001c6:	eb 77                	jmp    f010023f <boot_aps+0xc2>$/;"	l
f01001c8	obj/kern/kernel.asm	/^f01001c8:	e8 92 7b 00 00       	call   f0107d5f <cpunum>$/;"	l
f01001cd	obj/kern/kernel.asm	/^f01001cd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01001d0	obj/kern/kernel.asm	/^f01001d0:	05 20 10 23 f0       	add    $0xf0231020,%eax$/;"	l
f01001d5	obj/kern/kernel.asm	/^f01001d5:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f01001d8	obj/kern/kernel.asm	/^f01001d8:	74 60                	je     f010023a <boot_aps+0xbd>$/;"	l
f01001da	obj/kern/kernel.asm	/^f01001da:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01001dd	obj/kern/kernel.asm	/^f01001dd:	ba 20 10 23 f0       	mov    $0xf0231020,%edx$/;"	l
f01001e2	obj/kern/kernel.asm	/^f01001e2:	29 d0                	sub    %edx,%eax$/;"	l
f01001e4	obj/kern/kernel.asm	/^f01001e4:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f01001e7	obj/kern/kernel.asm	/^f01001e7:	69 c0 35 c2 72 4f    	imul   $0x4f72c235,%eax,%eax$/;"	l
f01001ed	obj/kern/kernel.asm	/^f01001ed:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f01001f0	obj/kern/kernel.asm	/^f01001f0:	05 00 20 23 f0       	add    $0xf0232000,%eax$/;"	l
f01001f5	obj/kern/kernel.asm	/^f01001f5:	05 00 80 00 00       	add    $0x8000,%eax$/;"	l
f01001fa	obj/kern/kernel.asm	/^f01001fa:	a3 e4 0e 23 f0       	mov    %eax,0xf0230ee4$/;"	l
f01001ff	obj/kern/kernel.asm	/^f01001ff:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100202	obj/kern/kernel.asm	/^f0100202:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f0100205	obj/kern/kernel.asm	/^f0100205:	6a 5f                	push   $0x5f$/;"	l
f0100207	obj/kern/kernel.asm	/^f0100207:	68 82 84 10 f0       	push   $0xf0108482$/;"	l
f010020c	obj/kern/kernel.asm	/^f010020c:	e8 2f fe ff ff       	call   f0100040 <_paddr>$/;"	l
f0100211	obj/kern/kernel.asm	/^f0100211:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100214	obj/kern/kernel.asm	/^f0100214:	89 c2                	mov    %eax,%edx$/;"	l
f0100216	obj/kern/kernel.asm	/^f0100216:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100219	obj/kern/kernel.asm	/^f0100219:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010021c	obj/kern/kernel.asm	/^f010021c:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010021f	obj/kern/kernel.asm	/^f010021f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100222	obj/kern/kernel.asm	/^f0100222:	52                   	push   %edx$/;"	l
f0100223	obj/kern/kernel.asm	/^f0100223:	50                   	push   %eax$/;"	l
f0100224	obj/kern/kernel.asm	/^f0100224:	e8 79 7b 00 00       	call   f0107da2 <lapic_startap>$/;"	l
f0100229	obj/kern/kernel.asm	/^f0100229:	83 c4 10             	add    $0x10,%esp$/;"	l
f010022c	obj/kern/kernel.asm	/^f010022c:	90                   	nop$/;"	l
f010022d	obj/kern/kernel.asm	/^f010022d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100230	obj/kern/kernel.asm	/^f0100230:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0100233	obj/kern/kernel.asm	/^f0100233:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0100236	obj/kern/kernel.asm	/^f0100236:	75 f5                	jne    f010022d <boot_aps+0xb0>$/;"	l
f0100238	obj/kern/kernel.asm	/^f0100238:	eb 01                	jmp    f010023b <boot_aps+0xbe>$/;"	l
f010023a	obj/kern/kernel.asm	/^f010023a:	90                   	nop$/;"	l
f010023b	obj/kern/kernel.asm	/^f010023b:	83 45 f4 74          	addl   $0x74,-0xc(%ebp)$/;"	l
f010023f	obj/kern/kernel.asm	/^f010023f:	a1 c4 13 23 f0       	mov    0xf02313c4,%eax$/;"	l
f0100244	obj/kern/kernel.asm	/^f0100244:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0100247	obj/kern/kernel.asm	/^f0100247:	05 20 10 23 f0       	add    $0xf0231020,%eax$/;"	l
f010024c	obj/kern/kernel.asm	/^f010024c:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f010024f	obj/kern/kernel.asm	/^f010024f:	0f 87 73 ff ff ff    	ja     f01001c8 <boot_aps+0x4b>$/;"	l
f0100255	obj/kern/kernel.asm	/^f0100255:	90                   	nop$/;"	l
f0100256	obj/kern/kernel.asm	/^f0100256:	c9                   	leave  $/;"	l
f0100257	obj/kern/kernel.asm	/^f0100257:	c3                   	ret    $/;"	l
f0100258	obj/kern/kernel.asm	/^f0100258 <mp_main>:$/;"	l
f0100258	obj/kern/kernel.asm	/^f0100258:	55                   	push   %ebp$/;"	l
f0100259	obj/kern/kernel.asm	/^f0100259:	89 e5                	mov    %esp,%ebp$/;"	l
f010025b	obj/kern/kernel.asm	/^f010025b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010025e	obj/kern/kernel.asm	/^f010025e:	e8 56 fe ff ff       	call   f01000b9 <rcr4>$/;"	l
f0100263	obj/kern/kernel.asm	/^f0100263:	83 c8 10             	or     $0x10,%eax$/;"	l
f0100266	obj/kern/kernel.asm	/^f0100266:	50                   	push   %eax$/;"	l
f0100267	obj/kern/kernel.asm	/^f0100267:	e8 41 fe ff ff       	call   f01000ad <lcr4>$/;"	l
f010026c	obj/kern/kernel.asm	/^f010026c:	83 c4 04             	add    $0x4,%esp$/;"	l
f010026f	obj/kern/kernel.asm	/^f010026f:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0100274	obj/kern/kernel.asm	/^f0100274:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100277	obj/kern/kernel.asm	/^f0100277:	50                   	push   %eax$/;"	l
f0100278	obj/kern/kernel.asm	/^f0100278:	6a 6c                	push   $0x6c$/;"	l
f010027a	obj/kern/kernel.asm	/^f010027a:	68 82 84 10 f0       	push   $0xf0108482$/;"	l
f010027f	obj/kern/kernel.asm	/^f010027f:	e8 bc fd ff ff       	call   f0100040 <_paddr>$/;"	l
f0100284	obj/kern/kernel.asm	/^f0100284:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100287	obj/kern/kernel.asm	/^f0100287:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010028a	obj/kern/kernel.asm	/^f010028a:	50                   	push   %eax$/;"	l
f010028b	obj/kern/kernel.asm	/^f010028b:	e8 11 fe ff ff       	call   f01000a1 <lcr3>$/;"	l
f0100290	obj/kern/kernel.asm	/^f0100290:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100293	obj/kern/kernel.asm	/^f0100293:	e8 c7 7a 00 00       	call   f0107d5f <cpunum>$/;"	l
f0100298	obj/kern/kernel.asm	/^f0100298:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010029b	obj/kern/kernel.asm	/^f010029b:	50                   	push   %eax$/;"	l
f010029c	obj/kern/kernel.asm	/^f010029c:	68 8e 84 10 f0       	push   $0xf010848e$/;"	l
f01002a1	obj/kern/kernel.asm	/^f01002a1:	e8 08 47 00 00       	call   f01049ae <cprintf>$/;"	l
f01002a6	obj/kern/kernel.asm	/^f01002a6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01002a9	obj/kern/kernel.asm	/^f01002a9:	e8 34 79 00 00       	call   f0107be2 <lapic_init>$/;"	l
f01002ae	obj/kern/kernel.asm	/^f01002ae:	e8 92 3c 00 00       	call   f0103f45 <env_init_percpu>$/;"	l
f01002b3	obj/kern/kernel.asm	/^f01002b3:	e8 16 51 00 00       	call   f01053ce <trap_init_percpu>$/;"	l
f01002b8	obj/kern/kernel.asm	/^f01002b8:	e8 a2 7a 00 00       	call   f0107d5f <cpunum>$/;"	l
f01002bd	obj/kern/kernel.asm	/^f01002bd:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01002c0	obj/kern/kernel.asm	/^f01002c0:	05 20 10 23 f0       	add    $0xf0231020,%eax$/;"	l
f01002c5	obj/kern/kernel.asm	/^f01002c5:	83 c0 04             	add    $0x4,%eax$/;"	l
f01002c8	obj/kern/kernel.asm	/^f01002c8:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01002cb	obj/kern/kernel.asm	/^f01002cb:	6a 01                	push   $0x1$/;"	l
f01002cd	obj/kern/kernel.asm	/^f01002cd:	50                   	push   %eax$/;"	l
f01002ce	obj/kern/kernel.asm	/^f01002ce:	e8 f7 fd ff ff       	call   f01000ca <xchg>$/;"	l
f01002d3	obj/kern/kernel.asm	/^f01002d3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01002d6	obj/kern/kernel.asm	/^f01002d6:	e8 09 fe ff ff       	call   f01000e4 <lock_kernel>$/;"	l
f01002db	obj/kern/kernel.asm	/^f01002db:	e8 5a 59 00 00       	call   f0105c3a <sched_yield>$/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0 <_panic>:$/;"	l
f01002e0	obj/kern/kernel.asm	/^f01002e0:	55                   	push   %ebp$/;"	l
f01002e1	obj/kern/kernel.asm	/^f01002e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01002e3	obj/kern/kernel.asm	/^f01002e3:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01002e6	obj/kern/kernel.asm	/^f01002e6:	a1 e0 0e 23 f0       	mov    0xf0230ee0,%eax$/;"	l
f01002eb	obj/kern/kernel.asm	/^f01002eb:	85 c0                	test   %eax,%eax$/;"	l
f01002ed	obj/kern/kernel.asm	/^f01002ed:	74 02                	je     f01002f1 <_panic+0x11>$/;"	l
f01002ef	obj/kern/kernel.asm	/^f01002ef:	eb 4b                	jmp    f010033c <_panic+0x5c>$/;"	l
f01002f1	obj/kern/kernel.asm	/^f01002f1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01002f4	obj/kern/kernel.asm	/^f01002f4:	a3 e0 0e 23 f0       	mov    %eax,0xf0230ee0$/;"	l
f01002f9	obj/kern/kernel.asm	/^f01002f9:	fa                   	cli    $/;"	l
f01002fa	obj/kern/kernel.asm	/^f01002fa:	fc                   	cld    $/;"	l
f01002fb	obj/kern/kernel.asm	/^f01002fb:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f01002fe	obj/kern/kernel.asm	/^f01002fe:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0100301	obj/kern/kernel.asm	/^f0100301:	e8 59 7a 00 00       	call   f0107d5f <cpunum>$/;"	l
f0100306	obj/kern/kernel.asm	/^f0100306:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0100309	obj/kern/kernel.asm	/^f0100309:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010030c	obj/kern/kernel.asm	/^f010030c:	50                   	push   %eax$/;"	l
f010030d	obj/kern/kernel.asm	/^f010030d:	68 a4 84 10 f0       	push   $0xf01084a4$/;"	l
f0100312	obj/kern/kernel.asm	/^f0100312:	e8 97 46 00 00       	call   f01049ae <cprintf>$/;"	l
f0100317	obj/kern/kernel.asm	/^f0100317:	83 c4 10             	add    $0x10,%esp$/;"	l
f010031a	obj/kern/kernel.asm	/^f010031a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010031d	obj/kern/kernel.asm	/^f010031d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100320	obj/kern/kernel.asm	/^f0100320:	50                   	push   %eax$/;"	l
f0100321	obj/kern/kernel.asm	/^f0100321:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100324	obj/kern/kernel.asm	/^f0100324:	e8 5c 46 00 00       	call   f0104985 <vcprintf>$/;"	l
f0100329	obj/kern/kernel.asm	/^f0100329:	83 c4 10             	add    $0x10,%esp$/;"	l
f010032c	obj/kern/kernel.asm	/^f010032c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010032f	obj/kern/kernel.asm	/^f010032f:	68 c6 84 10 f0       	push   $0xf01084c6$/;"	l
f0100334	obj/kern/kernel.asm	/^f0100334:	e8 75 46 00 00       	call   f01049ae <cprintf>$/;"	l
f0100339	obj/kern/kernel.asm	/^f0100339:	83 c4 10             	add    $0x10,%esp$/;"	l
f010033c	obj/kern/kernel.asm	/^f010033c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010033f	obj/kern/kernel.asm	/^f010033f:	6a 00                	push   $0x0$/;"	l
f0100341	obj/kern/kernel.asm	/^f0100341:	e8 d6 0e 00 00       	call   f010121c <monitor>$/;"	l
f0100346	obj/kern/kernel.asm	/^f0100346:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100349	obj/kern/kernel.asm	/^f0100349:	eb f1                	jmp    f010033c <_panic+0x5c>$/;"	l
f010034b	obj/kern/kernel.asm	/^f010034b <_warn>:$/;"	l
f010034b	obj/kern/kernel.asm	/^f010034b:	55                   	push   %ebp$/;"	l
f010034c	obj/kern/kernel.asm	/^f010034c:	89 e5                	mov    %esp,%ebp$/;"	l
f010034e	obj/kern/kernel.asm	/^f010034e:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100351	obj/kern/kernel.asm	/^f0100351:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0100354	obj/kern/kernel.asm	/^f0100354:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0100357	obj/kern/kernel.asm	/^f0100357:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010035a	obj/kern/kernel.asm	/^f010035a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010035d	obj/kern/kernel.asm	/^f010035d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100360	obj/kern/kernel.asm	/^f0100360:	68 c8 84 10 f0       	push   $0xf01084c8$/;"	l
f0100365	obj/kern/kernel.asm	/^f0100365:	e8 44 46 00 00       	call   f01049ae <cprintf>$/;"	l
f010036a	obj/kern/kernel.asm	/^f010036a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010036d	obj/kern/kernel.asm	/^f010036d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100370	obj/kern/kernel.asm	/^f0100370:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100373	obj/kern/kernel.asm	/^f0100373:	50                   	push   %eax$/;"	l
f0100374	obj/kern/kernel.asm	/^f0100374:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0100377	obj/kern/kernel.asm	/^f0100377:	e8 09 46 00 00       	call   f0104985 <vcprintf>$/;"	l
f010037c	obj/kern/kernel.asm	/^f010037c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010037f	obj/kern/kernel.asm	/^f010037f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100382	obj/kern/kernel.asm	/^f0100382:	68 c6 84 10 f0       	push   $0xf01084c6$/;"	l
f0100387	obj/kern/kernel.asm	/^f0100387:	e8 22 46 00 00       	call   f01049ae <cprintf>$/;"	l
f010038c	obj/kern/kernel.asm	/^f010038c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010038f	obj/kern/kernel.asm	/^f010038f:	90                   	nop$/;"	l
f0100390	obj/kern/kernel.asm	/^f0100390:	c9                   	leave  $/;"	l
f0100391	obj/kern/kernel.asm	/^f0100391:	c3                   	ret    $/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392 <inb>:$/;"	l
f0100392	obj/kern/kernel.asm	/^f0100392:	55                   	push   %ebp$/;"	l
f0100393	obj/kern/kernel.asm	/^f0100393:	89 e5                	mov    %esp,%ebp$/;"	l
f0100395	obj/kern/kernel.asm	/^f0100395:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100398	obj/kern/kernel.asm	/^f0100398:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010039b	obj/kern/kernel.asm	/^f010039b:	89 c2                	mov    %eax,%edx$/;"	l
f010039d	obj/kern/kernel.asm	/^f010039d:	ec                   	in     (%dx),%al$/;"	l
f010039e	obj/kern/kernel.asm	/^f010039e:	88 45 ff             	mov    %al,-0x1(%ebp)$/;"	l
f01003a1	obj/kern/kernel.asm	/^f01003a1:	0f b6 45 ff          	movzbl -0x1(%ebp),%eax$/;"	l
f01003a5	obj/kern/kernel.asm	/^f01003a5:	c9                   	leave  $/;"	l
f01003a6	obj/kern/kernel.asm	/^f01003a6:	c3                   	ret    $/;"	l
f01003a7	obj/kern/kernel.asm	/^f01003a7 <outb>:$/;"	l
f01003a7	obj/kern/kernel.asm	/^f01003a7:	55                   	push   %ebp$/;"	l
f01003a8	obj/kern/kernel.asm	/^f01003a8:	89 e5                	mov    %esp,%ebp$/;"	l
f01003aa	obj/kern/kernel.asm	/^f01003aa:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01003ad	obj/kern/kernel.asm	/^f01003ad:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01003b0	obj/kern/kernel.asm	/^f01003b0:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
f01003b3	obj/kern/kernel.asm	/^f01003b3:	0f b6 45 fc          	movzbl -0x4(%ebp),%eax$/;"	l
f01003b7	obj/kern/kernel.asm	/^f01003b7:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01003ba	obj/kern/kernel.asm	/^f01003ba:	ee                   	out    %al,(%dx)$/;"	l
f01003bb	obj/kern/kernel.asm	/^f01003bb:	90                   	nop$/;"	l
f01003bc	obj/kern/kernel.asm	/^f01003bc:	c9                   	leave  $/;"	l
f01003bd	obj/kern/kernel.asm	/^f01003bd:	c3                   	ret    $/;"	l
f01003be	obj/kern/kernel.asm	/^f01003be <delay>:$/;"	l
f01003be	obj/kern/kernel.asm	/^f01003be:	55                   	push   %ebp$/;"	l
f01003bf	obj/kern/kernel.asm	/^f01003bf:	89 e5                	mov    %esp,%ebp$/;"	l
f01003c1	obj/kern/kernel.asm	/^f01003c1:	68 84 00 00 00       	push   $0x84$/;"	l
f01003c6	obj/kern/kernel.asm	/^f01003c6:	e8 c7 ff ff ff       	call   f0100392 <inb>$/;"	l
f01003cb	obj/kern/kernel.asm	/^f01003cb:	83 c4 04             	add    $0x4,%esp$/;"	l
f01003ce	obj/kern/kernel.asm	/^f01003ce:	68 84 00 00 00       	push   $0x84$/;"	l
f01003d3	obj/kern/kernel.asm	/^f01003d3:	e8 ba ff ff ff       	call   f0100392 <inb>$/;"	l
f01003d8	obj/kern/kernel.asm	/^f01003d8:	83 c4 04             	add    $0x4,%esp$/;"	l
f01003db	obj/kern/kernel.asm	/^f01003db:	68 84 00 00 00       	push   $0x84$/;"	l
f01003e0	obj/kern/kernel.asm	/^f01003e0:	e8 ad ff ff ff       	call   f0100392 <inb>$/;"	l
f01003e5	obj/kern/kernel.asm	/^f01003e5:	83 c4 04             	add    $0x4,%esp$/;"	l
f01003e8	obj/kern/kernel.asm	/^f01003e8:	68 84 00 00 00       	push   $0x84$/;"	l
f01003ed	obj/kern/kernel.asm	/^f01003ed:	e8 a0 ff ff ff       	call   f0100392 <inb>$/;"	l
f01003f2	obj/kern/kernel.asm	/^f01003f2:	83 c4 04             	add    $0x4,%esp$/;"	l
f01003f5	obj/kern/kernel.asm	/^f01003f5:	90                   	nop$/;"	l
f01003f6	obj/kern/kernel.asm	/^f01003f6:	c9                   	leave  $/;"	l
f01003f7	obj/kern/kernel.asm	/^f01003f7:	c3                   	ret    $/;"	l
f01003f8	obj/kern/kernel.asm	/^f01003f8 <serial_proc_data>:$/;"	l
f01003f8	obj/kern/kernel.asm	/^f01003f8:	55                   	push   %ebp$/;"	l
f01003f9	obj/kern/kernel.asm	/^f01003f9:	89 e5                	mov    %esp,%ebp$/;"	l
f01003fb	obj/kern/kernel.asm	/^f01003fb:	68 fd 03 00 00       	push   $0x3fd$/;"	l
f0100400	obj/kern/kernel.asm	/^f0100400:	e8 8d ff ff ff       	call   f0100392 <inb>$/;"	l
f0100405	obj/kern/kernel.asm	/^f0100405:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100408	obj/kern/kernel.asm	/^f0100408:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010040b	obj/kern/kernel.asm	/^f010040b:	83 e0 01             	and    $0x1,%eax$/;"	l
f010040e	obj/kern/kernel.asm	/^f010040e:	85 c0                	test   %eax,%eax$/;"	l
f0100410	obj/kern/kernel.asm	/^f0100410:	75 07                	jne    f0100419 <serial_proc_data+0x21>$/;"	l
f0100412	obj/kern/kernel.asm	/^f0100412:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100417	obj/kern/kernel.asm	/^f0100417:	eb 10                	jmp    f0100429 <serial_proc_data+0x31>$/;"	l
f0100419	obj/kern/kernel.asm	/^f0100419:	68 f8 03 00 00       	push   $0x3f8$/;"	l
f010041e	obj/kern/kernel.asm	/^f010041e:	e8 6f ff ff ff       	call   f0100392 <inb>$/;"	l
f0100423	obj/kern/kernel.asm	/^f0100423:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100426	obj/kern/kernel.asm	/^f0100426:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100429	obj/kern/kernel.asm	/^f0100429:	c9                   	leave  $/;"	l
f010042a	obj/kern/kernel.asm	/^f010042a:	c3                   	ret    $/;"	l
f010042b	obj/kern/kernel.asm	/^f010042b <serial_intr>:$/;"	l
f010042b	obj/kern/kernel.asm	/^f010042b:	55                   	push   %ebp$/;"	l
f010042c	obj/kern/kernel.asm	/^f010042c:	89 e5                	mov    %esp,%ebp$/;"	l
f010042e	obj/kern/kernel.asm	/^f010042e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100431	obj/kern/kernel.asm	/^f0100431:	0f b6 05 00 00 23 f0 	movzbl 0xf0230000,%eax$/;"	l
f0100438	obj/kern/kernel.asm	/^f0100438:	84 c0                	test   %al,%al$/;"	l
f010043a	obj/kern/kernel.asm	/^f010043a:	74 10                	je     f010044c <serial_intr+0x21>$/;"	l
f010043c	obj/kern/kernel.asm	/^f010043c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010043f	obj/kern/kernel.asm	/^f010043f:	68 f8 03 10 f0       	push   $0xf01003f8$/;"	l
f0100444	obj/kern/kernel.asm	/^f0100444:	e8 fa 05 00 00       	call   f0100a43 <cons_intr>$/;"	l
f0100449	obj/kern/kernel.asm	/^f0100449:	83 c4 10             	add    $0x10,%esp$/;"	l
f010044c	obj/kern/kernel.asm	/^f010044c:	90                   	nop$/;"	l
f010044d	obj/kern/kernel.asm	/^f010044d:	c9                   	leave  $/;"	l
f010044e	obj/kern/kernel.asm	/^f010044e:	c3                   	ret    $/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f <serial_putc>:$/;"	l
f010044f	obj/kern/kernel.asm	/^f010044f:	55                   	push   %ebp$/;"	l
f0100450	obj/kern/kernel.asm	/^f0100450:	89 e5                	mov    %esp,%ebp$/;"	l
f0100452	obj/kern/kernel.asm	/^f0100452:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100455	obj/kern/kernel.asm	/^f0100455:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
f010045c	obj/kern/kernel.asm	/^f010045c:	eb 09                	jmp    f0100467 <serial_putc+0x18>$/;"	l
f010045e	obj/kern/kernel.asm	/^f010045e:	e8 5b ff ff ff       	call   f01003be <delay>$/;"	l
f0100463	obj/kern/kernel.asm	/^f0100463:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
f0100467	obj/kern/kernel.asm	/^f0100467:	68 fd 03 00 00       	push   $0x3fd$/;"	l
f010046c	obj/kern/kernel.asm	/^f010046c:	e8 21 ff ff ff       	call   f0100392 <inb>$/;"	l
f0100471	obj/kern/kernel.asm	/^f0100471:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100474	obj/kern/kernel.asm	/^f0100474:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100477	obj/kern/kernel.asm	/^f0100477:	83 e0 20             	and    $0x20,%eax$/;"	l
f010047a	obj/kern/kernel.asm	/^f010047a:	85 c0                	test   %eax,%eax$/;"	l
f010047c	obj/kern/kernel.asm	/^f010047c:	75 09                	jne    f0100487 <serial_putc+0x38>$/;"	l
f010047e	obj/kern/kernel.asm	/^f010047e:	81 7d fc ff 31 00 00 	cmpl   $0x31ff,-0x4(%ebp)$/;"	l
f0100485	obj/kern/kernel.asm	/^f0100485:	7e d7                	jle    f010045e <serial_putc+0xf>$/;"	l
f0100487	obj/kern/kernel.asm	/^f0100487:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010048a	obj/kern/kernel.asm	/^f010048a:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010048d	obj/kern/kernel.asm	/^f010048d:	50                   	push   %eax$/;"	l
f010048e	obj/kern/kernel.asm	/^f010048e:	68 f8 03 00 00       	push   $0x3f8$/;"	l
f0100493	obj/kern/kernel.asm	/^f0100493:	e8 0f ff ff ff       	call   f01003a7 <outb>$/;"	l
f0100498	obj/kern/kernel.asm	/^f0100498:	83 c4 08             	add    $0x8,%esp$/;"	l
f010049b	obj/kern/kernel.asm	/^f010049b:	90                   	nop$/;"	l
f010049c	obj/kern/kernel.asm	/^f010049c:	c9                   	leave  $/;"	l
f010049d	obj/kern/kernel.asm	/^f010049d:	c3                   	ret    $/;"	l
f010049e	obj/kern/kernel.asm	/^f010049e <serial_init>:$/;"	l
f010049e	obj/kern/kernel.asm	/^f010049e:	55                   	push   %ebp$/;"	l
f010049f	obj/kern/kernel.asm	/^f010049f:	89 e5                	mov    %esp,%ebp$/;"	l
f01004a1	obj/kern/kernel.asm	/^f01004a1:	6a 00                	push   $0x0$/;"	l
f01004a3	obj/kern/kernel.asm	/^f01004a3:	68 fa 03 00 00       	push   $0x3fa$/;"	l
f01004a8	obj/kern/kernel.asm	/^f01004a8:	e8 fa fe ff ff       	call   f01003a7 <outb>$/;"	l
f01004ad	obj/kern/kernel.asm	/^f01004ad:	83 c4 08             	add    $0x8,%esp$/;"	l
f01004b0	obj/kern/kernel.asm	/^f01004b0:	68 80 00 00 00       	push   $0x80$/;"	l
f01004b5	obj/kern/kernel.asm	/^f01004b5:	68 fb 03 00 00       	push   $0x3fb$/;"	l
f01004ba	obj/kern/kernel.asm	/^f01004ba:	e8 e8 fe ff ff       	call   f01003a7 <outb>$/;"	l
f01004bf	obj/kern/kernel.asm	/^f01004bf:	83 c4 08             	add    $0x8,%esp$/;"	l
f01004c2	obj/kern/kernel.asm	/^f01004c2:	6a 0c                	push   $0xc$/;"	l
f01004c4	obj/kern/kernel.asm	/^f01004c4:	68 f8 03 00 00       	push   $0x3f8$/;"	l
f01004c9	obj/kern/kernel.asm	/^f01004c9:	e8 d9 fe ff ff       	call   f01003a7 <outb>$/;"	l
f01004ce	obj/kern/kernel.asm	/^f01004ce:	83 c4 08             	add    $0x8,%esp$/;"	l
f01004d1	obj/kern/kernel.asm	/^f01004d1:	6a 00                	push   $0x0$/;"	l
f01004d3	obj/kern/kernel.asm	/^f01004d3:	68 f9 03 00 00       	push   $0x3f9$/;"	l
f01004d8	obj/kern/kernel.asm	/^f01004d8:	e8 ca fe ff ff       	call   f01003a7 <outb>$/;"	l
f01004dd	obj/kern/kernel.asm	/^f01004dd:	83 c4 08             	add    $0x8,%esp$/;"	l
f01004e0	obj/kern/kernel.asm	/^f01004e0:	6a 03                	push   $0x3$/;"	l
f01004e2	obj/kern/kernel.asm	/^f01004e2:	68 fb 03 00 00       	push   $0x3fb$/;"	l
f01004e7	obj/kern/kernel.asm	/^f01004e7:	e8 bb fe ff ff       	call   f01003a7 <outb>$/;"	l
f01004ec	obj/kern/kernel.asm	/^f01004ec:	83 c4 08             	add    $0x8,%esp$/;"	l
f01004ef	obj/kern/kernel.asm	/^f01004ef:	6a 00                	push   $0x0$/;"	l
f01004f1	obj/kern/kernel.asm	/^f01004f1:	68 fc 03 00 00       	push   $0x3fc$/;"	l
f01004f6	obj/kern/kernel.asm	/^f01004f6:	e8 ac fe ff ff       	call   f01003a7 <outb>$/;"	l
f01004fb	obj/kern/kernel.asm	/^f01004fb:	83 c4 08             	add    $0x8,%esp$/;"	l
f01004fe	obj/kern/kernel.asm	/^f01004fe:	6a 01                	push   $0x1$/;"	l
f0100500	obj/kern/kernel.asm	/^f0100500:	68 f9 03 00 00       	push   $0x3f9$/;"	l
f0100505	obj/kern/kernel.asm	/^f0100505:	e8 9d fe ff ff       	call   f01003a7 <outb>$/;"	l
f010050a	obj/kern/kernel.asm	/^f010050a:	83 c4 08             	add    $0x8,%esp$/;"	l
f010050d	obj/kern/kernel.asm	/^f010050d:	68 fd 03 00 00       	push   $0x3fd$/;"	l
f0100512	obj/kern/kernel.asm	/^f0100512:	e8 7b fe ff ff       	call   f0100392 <inb>$/;"	l
f0100517	obj/kern/kernel.asm	/^f0100517:	83 c4 04             	add    $0x4,%esp$/;"	l
f010051a	obj/kern/kernel.asm	/^f010051a:	3c ff                	cmp    $0xff,%al$/;"	l
f010051c	obj/kern/kernel.asm	/^f010051c:	0f 95 c0             	setne  %al$/;"	l
f010051f	obj/kern/kernel.asm	/^f010051f:	a2 00 00 23 f0       	mov    %al,0xf0230000$/;"	l
f0100524	obj/kern/kernel.asm	/^f0100524:	68 fa 03 00 00       	push   $0x3fa$/;"	l
f0100529	obj/kern/kernel.asm	/^f0100529:	e8 64 fe ff ff       	call   f0100392 <inb>$/;"	l
f010052e	obj/kern/kernel.asm	/^f010052e:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100531	obj/kern/kernel.asm	/^f0100531:	68 f8 03 00 00       	push   $0x3f8$/;"	l
f0100536	obj/kern/kernel.asm	/^f0100536:	e8 57 fe ff ff       	call   f0100392 <inb>$/;"	l
f010053b	obj/kern/kernel.asm	/^f010053b:	83 c4 04             	add    $0x4,%esp$/;"	l
f010053e	obj/kern/kernel.asm	/^f010053e:	90                   	nop$/;"	l
f010053f	obj/kern/kernel.asm	/^f010053f:	c9                   	leave  $/;"	l
f0100540	obj/kern/kernel.asm	/^f0100540:	c3                   	ret    $/;"	l
f0100541	obj/kern/kernel.asm	/^f0100541 <lpt_putc>:$/;"	l
f0100541	obj/kern/kernel.asm	/^f0100541:	55                   	push   %ebp$/;"	l
f0100542	obj/kern/kernel.asm	/^f0100542:	89 e5                	mov    %esp,%ebp$/;"	l
f0100544	obj/kern/kernel.asm	/^f0100544:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100547	obj/kern/kernel.asm	/^f0100547:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
f010054e	obj/kern/kernel.asm	/^f010054e:	eb 09                	jmp    f0100559 <lpt_putc+0x18>$/;"	l
f0100550	obj/kern/kernel.asm	/^f0100550:	e8 69 fe ff ff       	call   f01003be <delay>$/;"	l
f0100555	obj/kern/kernel.asm	/^f0100555:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
f0100559	obj/kern/kernel.asm	/^f0100559:	68 79 03 00 00       	push   $0x379$/;"	l
f010055e	obj/kern/kernel.asm	/^f010055e:	e8 2f fe ff ff       	call   f0100392 <inb>$/;"	l
f0100563	obj/kern/kernel.asm	/^f0100563:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100566	obj/kern/kernel.asm	/^f0100566:	84 c0                	test   %al,%al$/;"	l
f0100568	obj/kern/kernel.asm	/^f0100568:	78 09                	js     f0100573 <lpt_putc+0x32>$/;"	l
f010056a	obj/kern/kernel.asm	/^f010056a:	81 7d fc ff 31 00 00 	cmpl   $0x31ff,-0x4(%ebp)$/;"	l
f0100571	obj/kern/kernel.asm	/^f0100571:	7e dd                	jle    f0100550 <lpt_putc+0xf>$/;"	l
f0100573	obj/kern/kernel.asm	/^f0100573:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100576	obj/kern/kernel.asm	/^f0100576:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100579	obj/kern/kernel.asm	/^f0100579:	50                   	push   %eax$/;"	l
f010057a	obj/kern/kernel.asm	/^f010057a:	68 78 03 00 00       	push   $0x378$/;"	l
f010057f	obj/kern/kernel.asm	/^f010057f:	e8 23 fe ff ff       	call   f01003a7 <outb>$/;"	l
f0100584	obj/kern/kernel.asm	/^f0100584:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100587	obj/kern/kernel.asm	/^f0100587:	6a 0d                	push   $0xd$/;"	l
f0100589	obj/kern/kernel.asm	/^f0100589:	68 7a 03 00 00       	push   $0x37a$/;"	l
f010058e	obj/kern/kernel.asm	/^f010058e:	e8 14 fe ff ff       	call   f01003a7 <outb>$/;"	l
f0100593	obj/kern/kernel.asm	/^f0100593:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100596	obj/kern/kernel.asm	/^f0100596:	6a 08                	push   $0x8$/;"	l
f0100598	obj/kern/kernel.asm	/^f0100598:	68 7a 03 00 00       	push   $0x37a$/;"	l
f010059d	obj/kern/kernel.asm	/^f010059d:	e8 05 fe ff ff       	call   f01003a7 <outb>$/;"	l
f01005a2	obj/kern/kernel.asm	/^f01005a2:	83 c4 08             	add    $0x8,%esp$/;"	l
f01005a5	obj/kern/kernel.asm	/^f01005a5:	90                   	nop$/;"	l
f01005a6	obj/kern/kernel.asm	/^f01005a6:	c9                   	leave  $/;"	l
f01005a7	obj/kern/kernel.asm	/^f01005a7:	c3                   	ret    $/;"	l
f01005a8	obj/kern/kernel.asm	/^f01005a8 <cga_init>:$/;"	l
f01005a8	obj/kern/kernel.asm	/^f01005a8:	55                   	push   %ebp$/;"	l
f01005a9	obj/kern/kernel.asm	/^f01005a9:	89 e5                	mov    %esp,%ebp$/;"	l
f01005ab	obj/kern/kernel.asm	/^f01005ab:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01005ae	obj/kern/kernel.asm	/^f01005ae:	c7 45 fc 00 80 0b f0 	movl   $0xf00b8000,-0x4(%ebp)$/;"	l
f01005b5	obj/kern/kernel.asm	/^f01005b5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f01005b8	obj/kern/kernel.asm	/^f01005b8:	0f b7 00             	movzwl (%eax),%eax$/;"	l
f01005bb	obj/kern/kernel.asm	/^f01005bb:	66 89 45 fa          	mov    %ax,-0x6(%ebp)$/;"	l
f01005bf	obj/kern/kernel.asm	/^f01005bf:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f01005c2	obj/kern/kernel.asm	/^f01005c2:	66 c7 00 5a a5       	movw   $0xa55a,(%eax)$/;"	l
f01005c7	obj/kern/kernel.asm	/^f01005c7:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f01005ca	obj/kern/kernel.asm	/^f01005ca:	0f b7 00             	movzwl (%eax),%eax$/;"	l
f01005cd	obj/kern/kernel.asm	/^f01005cd:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f01005d1	obj/kern/kernel.asm	/^f01005d1:	74 13                	je     f01005e6 <cga_init+0x3e>$/;"	l
f01005d3	obj/kern/kernel.asm	/^f01005d3:	c7 45 fc 00 00 0b f0 	movl   $0xf00b0000,-0x4(%ebp)$/;"	l
f01005da	obj/kern/kernel.asm	/^f01005da:	c7 05 04 00 23 f0 b4 	movl   $0x3b4,0xf0230004$/;"	l
f01005e1	obj/kern/kernel.asm	/^f01005e1:	03 00 00 $/;"	l
f01005e4	obj/kern/kernel.asm	/^f01005e4:	eb 14                	jmp    f01005fa <cga_init+0x52>$/;"	l
f01005e6	obj/kern/kernel.asm	/^f01005e6:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f01005e9	obj/kern/kernel.asm	/^f01005e9:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
f01005ed	obj/kern/kernel.asm	/^f01005ed:	66 89 10             	mov    %dx,(%eax)$/;"	l
f01005f0	obj/kern/kernel.asm	/^f01005f0:	c7 05 04 00 23 f0 d4 	movl   $0x3d4,0xf0230004$/;"	l
f01005f7	obj/kern/kernel.asm	/^f01005f7:	03 00 00 $/;"	l
f01005fa	obj/kern/kernel.asm	/^f01005fa:	a1 04 00 23 f0       	mov    0xf0230004,%eax$/;"	l
f01005ff	obj/kern/kernel.asm	/^f01005ff:	6a 0e                	push   $0xe$/;"	l
f0100601	obj/kern/kernel.asm	/^f0100601:	50                   	push   %eax$/;"	l
f0100602	obj/kern/kernel.asm	/^f0100602:	e8 a0 fd ff ff       	call   f01003a7 <outb>$/;"	l
f0100607	obj/kern/kernel.asm	/^f0100607:	83 c4 08             	add    $0x8,%esp$/;"	l
f010060a	obj/kern/kernel.asm	/^f010060a:	a1 04 00 23 f0       	mov    0xf0230004,%eax$/;"	l
f010060f	obj/kern/kernel.asm	/^f010060f:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100612	obj/kern/kernel.asm	/^f0100612:	50                   	push   %eax$/;"	l
f0100613	obj/kern/kernel.asm	/^f0100613:	e8 7a fd ff ff       	call   f0100392 <inb>$/;"	l
f0100618	obj/kern/kernel.asm	/^f0100618:	83 c4 04             	add    $0x4,%esp$/;"	l
f010061b	obj/kern/kernel.asm	/^f010061b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010061e	obj/kern/kernel.asm	/^f010061e:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0100621	obj/kern/kernel.asm	/^f0100621:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0100624	obj/kern/kernel.asm	/^f0100624:	a1 04 00 23 f0       	mov    0xf0230004,%eax$/;"	l
f0100629	obj/kern/kernel.asm	/^f0100629:	6a 0f                	push   $0xf$/;"	l
f010062b	obj/kern/kernel.asm	/^f010062b:	50                   	push   %eax$/;"	l
f010062c	obj/kern/kernel.asm	/^f010062c:	e8 76 fd ff ff       	call   f01003a7 <outb>$/;"	l
f0100631	obj/kern/kernel.asm	/^f0100631:	83 c4 08             	add    $0x8,%esp$/;"	l
f0100634	obj/kern/kernel.asm	/^f0100634:	a1 04 00 23 f0       	mov    0xf0230004,%eax$/;"	l
f0100639	obj/kern/kernel.asm	/^f0100639:	83 c0 01             	add    $0x1,%eax$/;"	l
f010063c	obj/kern/kernel.asm	/^f010063c:	50                   	push   %eax$/;"	l
f010063d	obj/kern/kernel.asm	/^f010063d:	e8 50 fd ff ff       	call   f0100392 <inb>$/;"	l
f0100642	obj/kern/kernel.asm	/^f0100642:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100645	obj/kern/kernel.asm	/^f0100645:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100648	obj/kern/kernel.asm	/^f0100648:	09 45 f4             	or     %eax,-0xc(%ebp)$/;"	l
f010064b	obj/kern/kernel.asm	/^f010064b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f010064e	obj/kern/kernel.asm	/^f010064e:	a3 08 00 23 f0       	mov    %eax,0xf0230008$/;"	l
f0100653	obj/kern/kernel.asm	/^f0100653:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100656	obj/kern/kernel.asm	/^f0100656:	66 a3 0c 00 23 f0    	mov    %ax,0xf023000c$/;"	l
f010065c	obj/kern/kernel.asm	/^f010065c:	90                   	nop$/;"	l
f010065d	obj/kern/kernel.asm	/^f010065d:	c9                   	leave  $/;"	l
f010065e	obj/kern/kernel.asm	/^f010065e:	c3                   	ret    $/;"	l
f010065f	obj/kern/kernel.asm	/^f010065f <cga_putc>:$/;"	l
f010065f	obj/kern/kernel.asm	/^f010065f:	55                   	push   %ebp$/;"	l
f0100660	obj/kern/kernel.asm	/^f0100660:	89 e5                	mov    %esp,%ebp$/;"	l
f0100662	obj/kern/kernel.asm	/^f0100662:	53                   	push   %ebx$/;"	l
f0100663	obj/kern/kernel.asm	/^f0100663:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0100666	obj/kern/kernel.asm	/^f0100666:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100669	obj/kern/kernel.asm	/^f0100669:	b0 00                	mov    $0x0,%al$/;"	l
f010066b	obj/kern/kernel.asm	/^f010066b:	85 c0                	test   %eax,%eax$/;"	l
f010066d	obj/kern/kernel.asm	/^f010066d:	75 07                	jne    f0100676 <cga_putc+0x17>$/;"	l
f010066f	obj/kern/kernel.asm	/^f010066f:	81 4d 08 00 07 00 00 	orl    $0x700,0x8(%ebp)$/;"	l
f0100676	obj/kern/kernel.asm	/^f0100676:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100679	obj/kern/kernel.asm	/^f0100679:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010067c	obj/kern/kernel.asm	/^f010067c:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f010067f	obj/kern/kernel.asm	/^f010067f:	0f 84 ab 00 00 00    	je     f0100730 <cga_putc+0xd1>$/;"	l
f0100685	obj/kern/kernel.asm	/^f0100685:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100688	obj/kern/kernel.asm	/^f0100688:	7f 0a                	jg     f0100694 <cga_putc+0x35>$/;"	l
f010068a	obj/kern/kernel.asm	/^f010068a:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f010068d	obj/kern/kernel.asm	/^f010068d:	74 14                	je     f01006a3 <cga_putc+0x44>$/;"	l
f010068f	obj/kern/kernel.asm	/^f010068f:	e9 df 00 00 00       	jmp    f0100773 <cga_putc+0x114>$/;"	l
f0100694	obj/kern/kernel.asm	/^f0100694:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0100697	obj/kern/kernel.asm	/^f0100697:	74 4d                	je     f01006e6 <cga_putc+0x87>$/;"	l
f0100699	obj/kern/kernel.asm	/^f0100699:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f010069c	obj/kern/kernel.asm	/^f010069c:	74 58                	je     f01006f6 <cga_putc+0x97>$/;"	l
f010069e	obj/kern/kernel.asm	/^f010069e:	e9 d0 00 00 00       	jmp    f0100773 <cga_putc+0x114>$/;"	l
f01006a3	obj/kern/kernel.asm	/^f01006a3:	0f b7 05 0c 00 23 f0 	movzwl 0xf023000c,%eax$/;"	l
f01006aa	obj/kern/kernel.asm	/^f01006aa:	66 85 c0             	test   %ax,%ax$/;"	l
f01006ad	obj/kern/kernel.asm	/^f01006ad:	0f 84 e6 00 00 00    	je     f0100799 <cga_putc+0x13a>$/;"	l
f01006b3	obj/kern/kernel.asm	/^f01006b3:	0f b7 05 0c 00 23 f0 	movzwl 0xf023000c,%eax$/;"	l
f01006ba	obj/kern/kernel.asm	/^f01006ba:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01006bd	obj/kern/kernel.asm	/^f01006bd:	66 a3 0c 00 23 f0    	mov    %ax,0xf023000c$/;"	l
f01006c3	obj/kern/kernel.asm	/^f01006c3:	a1 08 00 23 f0       	mov    0xf0230008,%eax$/;"	l
f01006c8	obj/kern/kernel.asm	/^f01006c8:	0f b7 15 0c 00 23 f0 	movzwl 0xf023000c,%edx$/;"	l
f01006cf	obj/kern/kernel.asm	/^f01006cf:	0f b7 d2             	movzwl %dx,%edx$/;"	l
f01006d2	obj/kern/kernel.asm	/^f01006d2:	01 d2                	add    %edx,%edx$/;"	l
f01006d4	obj/kern/kernel.asm	/^f01006d4:	01 d0                	add    %edx,%eax$/;"	l
f01006d6	obj/kern/kernel.asm	/^f01006d6:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01006d9	obj/kern/kernel.asm	/^f01006d9:	b2 00                	mov    $0x0,%dl$/;"	l
f01006db	obj/kern/kernel.asm	/^f01006db:	83 ca 20             	or     $0x20,%edx$/;"	l
f01006de	obj/kern/kernel.asm	/^f01006de:	66 89 10             	mov    %dx,(%eax)$/;"	l
f01006e1	obj/kern/kernel.asm	/^f01006e1:	e9 b3 00 00 00       	jmp    f0100799 <cga_putc+0x13a>$/;"	l
f01006e6	obj/kern/kernel.asm	/^f01006e6:	0f b7 05 0c 00 23 f0 	movzwl 0xf023000c,%eax$/;"	l
f01006ed	obj/kern/kernel.asm	/^f01006ed:	83 c0 50             	add    $0x50,%eax$/;"	l
f01006f0	obj/kern/kernel.asm	/^f01006f0:	66 a3 0c 00 23 f0    	mov    %ax,0xf023000c$/;"	l
f01006f6	obj/kern/kernel.asm	/^f01006f6:	0f b7 1d 0c 00 23 f0 	movzwl 0xf023000c,%ebx$/;"	l
f01006fd	obj/kern/kernel.asm	/^f01006fd:	0f b7 0d 0c 00 23 f0 	movzwl 0xf023000c,%ecx$/;"	l
f0100704	obj/kern/kernel.asm	/^f0100704:	0f b7 c1             	movzwl %cx,%eax$/;"	l
f0100707	obj/kern/kernel.asm	/^f0100707:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f010070d	obj/kern/kernel.asm	/^f010070d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0100710	obj/kern/kernel.asm	/^f0100710:	89 c2                	mov    %eax,%edx$/;"	l
f0100712	obj/kern/kernel.asm	/^f0100712:	66 c1 ea 06          	shr    $0x6,%dx$/;"	l
f0100716	obj/kern/kernel.asm	/^f0100716:	89 d0                	mov    %edx,%eax$/;"	l
f0100718	obj/kern/kernel.asm	/^f0100718:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010071b	obj/kern/kernel.asm	/^f010071b:	01 d0                	add    %edx,%eax$/;"	l
f010071d	obj/kern/kernel.asm	/^f010071d:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0100720	obj/kern/kernel.asm	/^f0100720:	29 c1                	sub    %eax,%ecx$/;"	l
f0100722	obj/kern/kernel.asm	/^f0100722:	89 ca                	mov    %ecx,%edx$/;"	l
f0100724	obj/kern/kernel.asm	/^f0100724:	89 d8                	mov    %ebx,%eax$/;"	l
f0100726	obj/kern/kernel.asm	/^f0100726:	29 d0                	sub    %edx,%eax$/;"	l
f0100728	obj/kern/kernel.asm	/^f0100728:	66 a3 0c 00 23 f0    	mov    %ax,0xf023000c$/;"	l
f010072e	obj/kern/kernel.asm	/^f010072e:	eb 6a                	jmp    f010079a <cga_putc+0x13b>$/;"	l
f0100730	obj/kern/kernel.asm	/^f0100730:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100733	obj/kern/kernel.asm	/^f0100733:	6a 20                	push   $0x20$/;"	l
f0100735	obj/kern/kernel.asm	/^f0100735:	e8 b3 03 00 00       	call   f0100aed <cons_putc>$/;"	l
f010073a	obj/kern/kernel.asm	/^f010073a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010073d	obj/kern/kernel.asm	/^f010073d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100740	obj/kern/kernel.asm	/^f0100740:	6a 20                	push   $0x20$/;"	l
f0100742	obj/kern/kernel.asm	/^f0100742:	e8 a6 03 00 00       	call   f0100aed <cons_putc>$/;"	l
f0100747	obj/kern/kernel.asm	/^f0100747:	83 c4 10             	add    $0x10,%esp$/;"	l
f010074a	obj/kern/kernel.asm	/^f010074a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010074d	obj/kern/kernel.asm	/^f010074d:	6a 20                	push   $0x20$/;"	l
f010074f	obj/kern/kernel.asm	/^f010074f:	e8 99 03 00 00       	call   f0100aed <cons_putc>$/;"	l
f0100754	obj/kern/kernel.asm	/^f0100754:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100757	obj/kern/kernel.asm	/^f0100757:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010075a	obj/kern/kernel.asm	/^f010075a:	6a 20                	push   $0x20$/;"	l
f010075c	obj/kern/kernel.asm	/^f010075c:	e8 8c 03 00 00       	call   f0100aed <cons_putc>$/;"	l
f0100761	obj/kern/kernel.asm	/^f0100761:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100764	obj/kern/kernel.asm	/^f0100764:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100767	obj/kern/kernel.asm	/^f0100767:	6a 20                	push   $0x20$/;"	l
f0100769	obj/kern/kernel.asm	/^f0100769:	e8 7f 03 00 00       	call   f0100aed <cons_putc>$/;"	l
f010076e	obj/kern/kernel.asm	/^f010076e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100771	obj/kern/kernel.asm	/^f0100771:	eb 27                	jmp    f010079a <cga_putc+0x13b>$/;"	l
f0100773	obj/kern/kernel.asm	/^f0100773:	8b 0d 08 00 23 f0    	mov    0xf0230008,%ecx$/;"	l
f0100779	obj/kern/kernel.asm	/^f0100779:	0f b7 05 0c 00 23 f0 	movzwl 0xf023000c,%eax$/;"	l
f0100780	obj/kern/kernel.asm	/^f0100780:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100783	obj/kern/kernel.asm	/^f0100783:	66 89 15 0c 00 23 f0 	mov    %dx,0xf023000c$/;"	l
f010078a	obj/kern/kernel.asm	/^f010078a:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010078d	obj/kern/kernel.asm	/^f010078d:	01 c0                	add    %eax,%eax$/;"	l
f010078f	obj/kern/kernel.asm	/^f010078f:	01 c8                	add    %ecx,%eax$/;"	l
f0100791	obj/kern/kernel.asm	/^f0100791:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0100794	obj/kern/kernel.asm	/^f0100794:	66 89 10             	mov    %dx,(%eax)$/;"	l
f0100797	obj/kern/kernel.asm	/^f0100797:	eb 01                	jmp    f010079a <cga_putc+0x13b>$/;"	l
f0100799	obj/kern/kernel.asm	/^f0100799:	90                   	nop$/;"	l
f010079a	obj/kern/kernel.asm	/^f010079a:	0f b7 05 0c 00 23 f0 	movzwl 0xf023000c,%eax$/;"	l
f01007a1	obj/kern/kernel.asm	/^f01007a1:	66 3d cf 07          	cmp    $0x7cf,%ax$/;"	l
f01007a5	obj/kern/kernel.asm	/^f01007a5:	76 59                	jbe    f0100800 <cga_putc+0x1a1>$/;"	l
f01007a7	obj/kern/kernel.asm	/^f01007a7:	a1 08 00 23 f0       	mov    0xf0230008,%eax$/;"	l
f01007ac	obj/kern/kernel.asm	/^f01007ac:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
f01007b2	obj/kern/kernel.asm	/^f01007b2:	a1 08 00 23 f0       	mov    0xf0230008,%eax$/;"	l
f01007b7	obj/kern/kernel.asm	/^f01007b7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01007ba	obj/kern/kernel.asm	/^f01007ba:	68 00 0f 00 00       	push   $0xf00$/;"	l
f01007bf	obj/kern/kernel.asm	/^f01007bf:	52                   	push   %edx$/;"	l
f01007c0	obj/kern/kernel.asm	/^f01007c0:	50                   	push   %eax$/;"	l
f01007c1	obj/kern/kernel.asm	/^f01007c1:	e8 37 6b 00 00       	call   f01072fd <memmove>$/;"	l
f01007c6	obj/kern/kernel.asm	/^f01007c6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01007c9	obj/kern/kernel.asm	/^f01007c9:	c7 45 f4 80 07 00 00 	movl   $0x780,-0xc(%ebp)$/;"	l
f01007d0	obj/kern/kernel.asm	/^f01007d0:	eb 15                	jmp    f01007e7 <cga_putc+0x188>$/;"	l
f01007d2	obj/kern/kernel.asm	/^f01007d2:	a1 08 00 23 f0       	mov    0xf0230008,%eax$/;"	l
f01007d7	obj/kern/kernel.asm	/^f01007d7:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f01007da	obj/kern/kernel.asm	/^f01007da:	01 d2                	add    %edx,%edx$/;"	l
f01007dc	obj/kern/kernel.asm	/^f01007dc:	01 d0                	add    %edx,%eax$/;"	l
f01007de	obj/kern/kernel.asm	/^f01007de:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
f01007e3	obj/kern/kernel.asm	/^f01007e3:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f01007e7	obj/kern/kernel.asm	/^f01007e7:	81 7d f4 cf 07 00 00 	cmpl   $0x7cf,-0xc(%ebp)$/;"	l
f01007ee	obj/kern/kernel.asm	/^f01007ee:	7e e2                	jle    f01007d2 <cga_putc+0x173>$/;"	l
f01007f0	obj/kern/kernel.asm	/^f01007f0:	0f b7 05 0c 00 23 f0 	movzwl 0xf023000c,%eax$/;"	l
f01007f7	obj/kern/kernel.asm	/^f01007f7:	83 e8 50             	sub    $0x50,%eax$/;"	l
f01007fa	obj/kern/kernel.asm	/^f01007fa:	66 a3 0c 00 23 f0    	mov    %ax,0xf023000c$/;"	l
f0100800	obj/kern/kernel.asm	/^f0100800:	a1 04 00 23 f0       	mov    0xf0230004,%eax$/;"	l
f0100805	obj/kern/kernel.asm	/^f0100805:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100808	obj/kern/kernel.asm	/^f0100808:	6a 0e                	push   $0xe$/;"	l
f010080a	obj/kern/kernel.asm	/^f010080a:	50                   	push   %eax$/;"	l
f010080b	obj/kern/kernel.asm	/^f010080b:	e8 97 fb ff ff       	call   f01003a7 <outb>$/;"	l
f0100810	obj/kern/kernel.asm	/^f0100810:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100813	obj/kern/kernel.asm	/^f0100813:	0f b7 05 0c 00 23 f0 	movzwl 0xf023000c,%eax$/;"	l
f010081a	obj/kern/kernel.asm	/^f010081a:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f010081e	obj/kern/kernel.asm	/^f010081e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100821	obj/kern/kernel.asm	/^f0100821:	8b 15 04 00 23 f0    	mov    0xf0230004,%edx$/;"	l
f0100827	obj/kern/kernel.asm	/^f0100827:	83 c2 01             	add    $0x1,%edx$/;"	l
f010082a	obj/kern/kernel.asm	/^f010082a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010082d	obj/kern/kernel.asm	/^f010082d:	50                   	push   %eax$/;"	l
f010082e	obj/kern/kernel.asm	/^f010082e:	52                   	push   %edx$/;"	l
f010082f	obj/kern/kernel.asm	/^f010082f:	e8 73 fb ff ff       	call   f01003a7 <outb>$/;"	l
f0100834	obj/kern/kernel.asm	/^f0100834:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100837	obj/kern/kernel.asm	/^f0100837:	a1 04 00 23 f0       	mov    0xf0230004,%eax$/;"	l
f010083c	obj/kern/kernel.asm	/^f010083c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010083f	obj/kern/kernel.asm	/^f010083f:	6a 0f                	push   $0xf$/;"	l
f0100841	obj/kern/kernel.asm	/^f0100841:	50                   	push   %eax$/;"	l
f0100842	obj/kern/kernel.asm	/^f0100842:	e8 60 fb ff ff       	call   f01003a7 <outb>$/;"	l
f0100847	obj/kern/kernel.asm	/^f0100847:	83 c4 10             	add    $0x10,%esp$/;"	l
f010084a	obj/kern/kernel.asm	/^f010084a:	0f b7 05 0c 00 23 f0 	movzwl 0xf023000c,%eax$/;"	l
f0100851	obj/kern/kernel.asm	/^f0100851:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100854	obj/kern/kernel.asm	/^f0100854:	8b 15 04 00 23 f0    	mov    0xf0230004,%edx$/;"	l
f010085a	obj/kern/kernel.asm	/^f010085a:	83 c2 01             	add    $0x1,%edx$/;"	l
f010085d	obj/kern/kernel.asm	/^f010085d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100860	obj/kern/kernel.asm	/^f0100860:	50                   	push   %eax$/;"	l
f0100861	obj/kern/kernel.asm	/^f0100861:	52                   	push   %edx$/;"	l
f0100862	obj/kern/kernel.asm	/^f0100862:	e8 40 fb ff ff       	call   f01003a7 <outb>$/;"	l
f0100867	obj/kern/kernel.asm	/^f0100867:	83 c4 10             	add    $0x10,%esp$/;"	l
f010086a	obj/kern/kernel.asm	/^f010086a:	90                   	nop$/;"	l
f010086b	obj/kern/kernel.asm	/^f010086b:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010086e	obj/kern/kernel.asm	/^f010086e:	c9                   	leave  $/;"	l
f010086f	obj/kern/kernel.asm	/^f010086f:	c3                   	ret    $/;"	l
f0100870	obj/kern/kernel.asm	/^f0100870 <kbd_proc_data>:$/;"	l
f0100870	obj/kern/kernel.asm	/^f0100870:	55                   	push   %ebp$/;"	l
f0100871	obj/kern/kernel.asm	/^f0100871:	89 e5                	mov    %esp,%ebp$/;"	l
f0100873	obj/kern/kernel.asm	/^f0100873:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100876	obj/kern/kernel.asm	/^f0100876:	6a 64                	push   $0x64$/;"	l
f0100878	obj/kern/kernel.asm	/^f0100878:	e8 15 fb ff ff       	call   f0100392 <inb>$/;"	l
f010087d	obj/kern/kernel.asm	/^f010087d:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100880	obj/kern/kernel.asm	/^f0100880:	88 45 f2             	mov    %al,-0xe(%ebp)$/;"	l
f0100883	obj/kern/kernel.asm	/^f0100883:	0f b6 45 f2          	movzbl -0xe(%ebp),%eax$/;"	l
f0100887	obj/kern/kernel.asm	/^f0100887:	83 e0 01             	and    $0x1,%eax$/;"	l
f010088a	obj/kern/kernel.asm	/^f010088a:	85 c0                	test   %eax,%eax$/;"	l
f010088c	obj/kern/kernel.asm	/^f010088c:	75 0a                	jne    f0100898 <kbd_proc_data+0x28>$/;"	l
f010088e	obj/kern/kernel.asm	/^f010088e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100893	obj/kern/kernel.asm	/^f0100893:	e9 67 01 00 00       	jmp    f01009ff <kbd_proc_data+0x18f>$/;"	l
f0100898	obj/kern/kernel.asm	/^f0100898:	0f b6 45 f2          	movzbl -0xe(%ebp),%eax$/;"	l
f010089c	obj/kern/kernel.asm	/^f010089c:	83 e0 20             	and    $0x20,%eax$/;"	l
f010089f	obj/kern/kernel.asm	/^f010089f:	85 c0                	test   %eax,%eax$/;"	l
f01008a1	obj/kern/kernel.asm	/^f01008a1:	74 0a                	je     f01008ad <kbd_proc_data+0x3d>$/;"	l
f01008a3	obj/kern/kernel.asm	/^f01008a3:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01008a8	obj/kern/kernel.asm	/^f01008a8:	e9 52 01 00 00       	jmp    f01009ff <kbd_proc_data+0x18f>$/;"	l
f01008ad	obj/kern/kernel.asm	/^f01008ad:	6a 60                	push   $0x60$/;"	l
f01008af	obj/kern/kernel.asm	/^f01008af:	e8 de fa ff ff       	call   f0100392 <inb>$/;"	l
f01008b4	obj/kern/kernel.asm	/^f01008b4:	83 c4 04             	add    $0x4,%esp$/;"	l
f01008b7	obj/kern/kernel.asm	/^f01008b7:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
f01008ba	obj/kern/kernel.asm	/^f01008ba:	80 7d f3 e0          	cmpb   $0xe0,-0xd(%ebp)$/;"	l
f01008be	obj/kern/kernel.asm	/^f01008be:	75 17                	jne    f01008d7 <kbd_proc_data+0x67>$/;"	l
f01008c0	obj/kern/kernel.asm	/^f01008c0:	a1 28 02 23 f0       	mov    0xf0230228,%eax$/;"	l
f01008c5	obj/kern/kernel.asm	/^f01008c5:	83 c8 40             	or     $0x40,%eax$/;"	l
f01008c8	obj/kern/kernel.asm	/^f01008c8:	a3 28 02 23 f0       	mov    %eax,0xf0230228$/;"	l
f01008cd	obj/kern/kernel.asm	/^f01008cd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01008d2	obj/kern/kernel.asm	/^f01008d2:	e9 28 01 00 00       	jmp    f01009ff <kbd_proc_data+0x18f>$/;"	l
f01008d7	obj/kern/kernel.asm	/^f01008d7:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
f01008db	obj/kern/kernel.asm	/^f01008db:	84 c0                	test   %al,%al$/;"	l
f01008dd	obj/kern/kernel.asm	/^f01008dd:	79 47                	jns    f0100926 <kbd_proc_data+0xb6>$/;"	l
f01008df	obj/kern/kernel.asm	/^f01008df:	a1 28 02 23 f0       	mov    0xf0230228,%eax$/;"	l
f01008e4	obj/kern/kernel.asm	/^f01008e4:	83 e0 40             	and    $0x40,%eax$/;"	l
f01008e7	obj/kern/kernel.asm	/^f01008e7:	85 c0                	test   %eax,%eax$/;"	l
f01008e9	obj/kern/kernel.asm	/^f01008e9:	75 09                	jne    f01008f4 <kbd_proc_data+0x84>$/;"	l
f01008eb	obj/kern/kernel.asm	/^f01008eb:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
f01008ef	obj/kern/kernel.asm	/^f01008ef:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f01008f2	obj/kern/kernel.asm	/^f01008f2:	eb 04                	jmp    f01008f8 <kbd_proc_data+0x88>$/;"	l
f01008f4	obj/kern/kernel.asm	/^f01008f4:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
f01008f8	obj/kern/kernel.asm	/^f01008f8:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
f01008fb	obj/kern/kernel.asm	/^f01008fb:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
f01008ff	obj/kern/kernel.asm	/^f01008ff:	0f b6 80 00 50 12 f0 	movzbl -0xfedb000(%eax),%eax$/;"	l
f0100906	obj/kern/kernel.asm	/^f0100906:	83 c8 40             	or     $0x40,%eax$/;"	l
f0100909	obj/kern/kernel.asm	/^f0100909:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010090c	obj/kern/kernel.asm	/^f010090c:	f7 d0                	not    %eax$/;"	l
f010090e	obj/kern/kernel.asm	/^f010090e:	89 c2                	mov    %eax,%edx$/;"	l
f0100910	obj/kern/kernel.asm	/^f0100910:	a1 28 02 23 f0       	mov    0xf0230228,%eax$/;"	l
f0100915	obj/kern/kernel.asm	/^f0100915:	21 d0                	and    %edx,%eax$/;"	l
f0100917	obj/kern/kernel.asm	/^f0100917:	a3 28 02 23 f0       	mov    %eax,0xf0230228$/;"	l
f010091c	obj/kern/kernel.asm	/^f010091c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100921	obj/kern/kernel.asm	/^f0100921:	e9 d9 00 00 00       	jmp    f01009ff <kbd_proc_data+0x18f>$/;"	l
f0100926	obj/kern/kernel.asm	/^f0100926:	a1 28 02 23 f0       	mov    0xf0230228,%eax$/;"	l
f010092b	obj/kern/kernel.asm	/^f010092b:	83 e0 40             	and    $0x40,%eax$/;"	l
f010092e	obj/kern/kernel.asm	/^f010092e:	85 c0                	test   %eax,%eax$/;"	l
f0100930	obj/kern/kernel.asm	/^f0100930:	74 11                	je     f0100943 <kbd_proc_data+0xd3>$/;"	l
f0100932	obj/kern/kernel.asm	/^f0100932:	80 4d f3 80          	orb    $0x80,-0xd(%ebp)$/;"	l
f0100936	obj/kern/kernel.asm	/^f0100936:	a1 28 02 23 f0       	mov    0xf0230228,%eax$/;"	l
f010093b	obj/kern/kernel.asm	/^f010093b:	83 e0 bf             	and    $0xffffffbf,%eax$/;"	l
f010093e	obj/kern/kernel.asm	/^f010093e:	a3 28 02 23 f0       	mov    %eax,0xf0230228$/;"	l
f0100943	obj/kern/kernel.asm	/^f0100943:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
f0100947	obj/kern/kernel.asm	/^f0100947:	0f b6 80 00 50 12 f0 	movzbl -0xfedb000(%eax),%eax$/;"	l
f010094e	obj/kern/kernel.asm	/^f010094e:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0100951	obj/kern/kernel.asm	/^f0100951:	a1 28 02 23 f0       	mov    0xf0230228,%eax$/;"	l
f0100956	obj/kern/kernel.asm	/^f0100956:	09 d0                	or     %edx,%eax$/;"	l
f0100958	obj/kern/kernel.asm	/^f0100958:	a3 28 02 23 f0       	mov    %eax,0xf0230228$/;"	l
f010095d	obj/kern/kernel.asm	/^f010095d:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
f0100961	obj/kern/kernel.asm	/^f0100961:	0f b6 80 00 51 12 f0 	movzbl -0xfedaf00(%eax),%eax$/;"	l
f0100968	obj/kern/kernel.asm	/^f0100968:	0f b6 d0             	movzbl %al,%edx$/;"	l
f010096b	obj/kern/kernel.asm	/^f010096b:	a1 28 02 23 f0       	mov    0xf0230228,%eax$/;"	l
f0100970	obj/kern/kernel.asm	/^f0100970:	31 d0                	xor    %edx,%eax$/;"	l
f0100972	obj/kern/kernel.asm	/^f0100972:	a3 28 02 23 f0       	mov    %eax,0xf0230228$/;"	l
f0100977	obj/kern/kernel.asm	/^f0100977:	a1 28 02 23 f0       	mov    0xf0230228,%eax$/;"	l
f010097c	obj/kern/kernel.asm	/^f010097c:	83 e0 03             	and    $0x3,%eax$/;"	l
f010097f	obj/kern/kernel.asm	/^f010097f:	8b 14 85 00 55 12 f0 	mov    -0xfedab00(,%eax,4),%edx$/;"	l
f0100986	obj/kern/kernel.asm	/^f0100986:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
f010098a	obj/kern/kernel.asm	/^f010098a:	01 d0                	add    %edx,%eax$/;"	l
f010098c	obj/kern/kernel.asm	/^f010098c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010098f	obj/kern/kernel.asm	/^f010098f:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100992	obj/kern/kernel.asm	/^f0100992:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0100995	obj/kern/kernel.asm	/^f0100995:	a1 28 02 23 f0       	mov    0xf0230228,%eax$/;"	l
f010099a	obj/kern/kernel.asm	/^f010099a:	83 e0 08             	and    $0x8,%eax$/;"	l
f010099d	obj/kern/kernel.asm	/^f010099d:	85 c0                	test   %eax,%eax$/;"	l
f010099f	obj/kern/kernel.asm	/^f010099f:	74 22                	je     f01009c3 <kbd_proc_data+0x153>$/;"	l
f01009a1	obj/kern/kernel.asm	/^f01009a1:	83 7d f4 60          	cmpl   $0x60,-0xc(%ebp)$/;"	l
f01009a5	obj/kern/kernel.asm	/^f01009a5:	7e 0c                	jle    f01009b3 <kbd_proc_data+0x143>$/;"	l
f01009a7	obj/kern/kernel.asm	/^f01009a7:	83 7d f4 7a          	cmpl   $0x7a,-0xc(%ebp)$/;"	l
f01009ab	obj/kern/kernel.asm	/^f01009ab:	7f 06                	jg     f01009b3 <kbd_proc_data+0x143>$/;"	l
f01009ad	obj/kern/kernel.asm	/^f01009ad:	83 6d f4 20          	subl   $0x20,-0xc(%ebp)$/;"	l
f01009b1	obj/kern/kernel.asm	/^f01009b1:	eb 10                	jmp    f01009c3 <kbd_proc_data+0x153>$/;"	l
f01009b3	obj/kern/kernel.asm	/^f01009b3:	83 7d f4 40          	cmpl   $0x40,-0xc(%ebp)$/;"	l
f01009b7	obj/kern/kernel.asm	/^f01009b7:	7e 0a                	jle    f01009c3 <kbd_proc_data+0x153>$/;"	l
f01009b9	obj/kern/kernel.asm	/^f01009b9:	83 7d f4 5a          	cmpl   $0x5a,-0xc(%ebp)$/;"	l
f01009bd	obj/kern/kernel.asm	/^f01009bd:	7f 04                	jg     f01009c3 <kbd_proc_data+0x153>$/;"	l
f01009bf	obj/kern/kernel.asm	/^f01009bf:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
f01009c3	obj/kern/kernel.asm	/^f01009c3:	a1 28 02 23 f0       	mov    0xf0230228,%eax$/;"	l
f01009c8	obj/kern/kernel.asm	/^f01009c8:	f7 d0                	not    %eax$/;"	l
f01009ca	obj/kern/kernel.asm	/^f01009ca:	83 e0 06             	and    $0x6,%eax$/;"	l
f01009cd	obj/kern/kernel.asm	/^f01009cd:	85 c0                	test   %eax,%eax$/;"	l
f01009cf	obj/kern/kernel.asm	/^f01009cf:	75 2b                	jne    f01009fc <kbd_proc_data+0x18c>$/;"	l
f01009d1	obj/kern/kernel.asm	/^f01009d1:	81 7d f4 e9 00 00 00 	cmpl   $0xe9,-0xc(%ebp)$/;"	l
f01009d8	obj/kern/kernel.asm	/^f01009d8:	75 22                	jne    f01009fc <kbd_proc_data+0x18c>$/;"	l
f01009da	obj/kern/kernel.asm	/^f01009da:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01009dd	obj/kern/kernel.asm	/^f01009dd:	68 e2 84 10 f0       	push   $0xf01084e2$/;"	l
f01009e2	obj/kern/kernel.asm	/^f01009e2:	e8 c7 3f 00 00       	call   f01049ae <cprintf>$/;"	l
f01009e7	obj/kern/kernel.asm	/^f01009e7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009ea	obj/kern/kernel.asm	/^f01009ea:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01009ed	obj/kern/kernel.asm	/^f01009ed:	6a 03                	push   $0x3$/;"	l
f01009ef	obj/kern/kernel.asm	/^f01009ef:	68 92 00 00 00       	push   $0x92$/;"	l
f01009f4	obj/kern/kernel.asm	/^f01009f4:	e8 ae f9 ff ff       	call   f01003a7 <outb>$/;"	l
f01009f9	obj/kern/kernel.asm	/^f01009f9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01009fc	obj/kern/kernel.asm	/^f01009fc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01009ff	obj/kern/kernel.asm	/^f01009ff:	c9                   	leave  $/;"	l
f0100a00	obj/kern/kernel.asm	/^f0100a00:	c3                   	ret    $/;"	l
f0100a01	obj/kern/kernel.asm	/^f0100a01 <kbd_intr>:$/;"	l
f0100a01	obj/kern/kernel.asm	/^f0100a01:	55                   	push   %ebp$/;"	l
f0100a02	obj/kern/kernel.asm	/^f0100a02:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a04	obj/kern/kernel.asm	/^f0100a04:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a07	obj/kern/kernel.asm	/^f0100a07:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a0a	obj/kern/kernel.asm	/^f0100a0a:	68 70 08 10 f0       	push   $0xf0100870$/;"	l
f0100a0f	obj/kern/kernel.asm	/^f0100a0f:	e8 2f 00 00 00       	call   f0100a43 <cons_intr>$/;"	l
f0100a14	obj/kern/kernel.asm	/^f0100a14:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a17	obj/kern/kernel.asm	/^f0100a17:	90                   	nop$/;"	l
f0100a18	obj/kern/kernel.asm	/^f0100a18:	c9                   	leave  $/;"	l
f0100a19	obj/kern/kernel.asm	/^f0100a19:	c3                   	ret    $/;"	l
f0100a1a	obj/kern/kernel.asm	/^f0100a1a <kbd_init>:$/;"	l
f0100a1a	obj/kern/kernel.asm	/^f0100a1a:	55                   	push   %ebp$/;"	l
f0100a1b	obj/kern/kernel.asm	/^f0100a1b:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a1d	obj/kern/kernel.asm	/^f0100a1d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100a20	obj/kern/kernel.asm	/^f0100a20:	e8 dc ff ff ff       	call   f0100a01 <kbd_intr>$/;"	l
f0100a25	obj/kern/kernel.asm	/^f0100a25:	0f b7 05 ce 55 12 f0 	movzwl 0xf01255ce,%eax$/;"	l
f0100a2c	obj/kern/kernel.asm	/^f0100a2c:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100a2f	obj/kern/kernel.asm	/^f0100a2f:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f0100a34	obj/kern/kernel.asm	/^f0100a34:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100a37	obj/kern/kernel.asm	/^f0100a37:	50                   	push   %eax$/;"	l
f0100a38	obj/kern/kernel.asm	/^f0100a38:	e8 71 3e 00 00       	call   f01048ae <irq_setmask_8259A>$/;"	l
f0100a3d	obj/kern/kernel.asm	/^f0100a3d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100a40	obj/kern/kernel.asm	/^f0100a40:	90                   	nop$/;"	l
f0100a41	obj/kern/kernel.asm	/^f0100a41:	c9                   	leave  $/;"	l
f0100a42	obj/kern/kernel.asm	/^f0100a42:	c3                   	ret    $/;"	l
f0100a43	obj/kern/kernel.asm	/^f0100a43 <cons_intr>:$/;"	l
f0100a43	obj/kern/kernel.asm	/^f0100a43:	55                   	push   %ebp$/;"	l
f0100a44	obj/kern/kernel.asm	/^f0100a44:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a46	obj/kern/kernel.asm	/^f0100a46:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100a49	obj/kern/kernel.asm	/^f0100a49:	eb 35                	jmp    f0100a80 <cons_intr+0x3d>$/;"	l
f0100a4b	obj/kern/kernel.asm	/^f0100a4b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0100a4f	obj/kern/kernel.asm	/^f0100a4f:	75 02                	jne    f0100a53 <cons_intr+0x10>$/;"	l
f0100a51	obj/kern/kernel.asm	/^f0100a51:	eb 2d                	jmp    f0100a80 <cons_intr+0x3d>$/;"	l
f0100a53	obj/kern/kernel.asm	/^f0100a53:	a1 24 02 23 f0       	mov    0xf0230224,%eax$/;"	l
f0100a58	obj/kern/kernel.asm	/^f0100a58:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100a5b	obj/kern/kernel.asm	/^f0100a5b:	89 15 24 02 23 f0    	mov    %edx,0xf0230224$/;"	l
f0100a61	obj/kern/kernel.asm	/^f0100a61:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0100a64	obj/kern/kernel.asm	/^f0100a64:	88 90 20 00 23 f0    	mov    %dl,-0xfdcffe0(%eax)$/;"	l
f0100a6a	obj/kern/kernel.asm	/^f0100a6a:	a1 24 02 23 f0       	mov    0xf0230224,%eax$/;"	l
f0100a6f	obj/kern/kernel.asm	/^f0100a6f:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
f0100a74	obj/kern/kernel.asm	/^f0100a74:	75 0a                	jne    f0100a80 <cons_intr+0x3d>$/;"	l
f0100a76	obj/kern/kernel.asm	/^f0100a76:	c7 05 24 02 23 f0 00 	movl   $0x0,0xf0230224$/;"	l
f0100a7d	obj/kern/kernel.asm	/^f0100a7d:	00 00 00 $/;"	l
f0100a80	obj/kern/kernel.asm	/^f0100a80:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0100a83	obj/kern/kernel.asm	/^f0100a83:	ff d0                	call   *%eax$/;"	l
f0100a85	obj/kern/kernel.asm	/^f0100a85:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0100a88	obj/kern/kernel.asm	/^f0100a88:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)$/;"	l
f0100a8c	obj/kern/kernel.asm	/^f0100a8c:	75 bd                	jne    f0100a4b <cons_intr+0x8>$/;"	l
f0100a8e	obj/kern/kernel.asm	/^f0100a8e:	90                   	nop$/;"	l
f0100a8f	obj/kern/kernel.asm	/^f0100a8f:	c9                   	leave  $/;"	l
f0100a90	obj/kern/kernel.asm	/^f0100a90:	c3                   	ret    $/;"	l
f0100a91	obj/kern/kernel.asm	/^f0100a91 <cons_getc>:$/;"	l
f0100a91	obj/kern/kernel.asm	/^f0100a91:	55                   	push   %ebp$/;"	l
f0100a92	obj/kern/kernel.asm	/^f0100a92:	89 e5                	mov    %esp,%ebp$/;"	l
f0100a94	obj/kern/kernel.asm	/^f0100a94:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100a97	obj/kern/kernel.asm	/^f0100a97:	e8 8f f9 ff ff       	call   f010042b <serial_intr>$/;"	l
f0100a9c	obj/kern/kernel.asm	/^f0100a9c:	e8 60 ff ff ff       	call   f0100a01 <kbd_intr>$/;"	l
f0100aa1	obj/kern/kernel.asm	/^f0100aa1:	8b 15 20 02 23 f0    	mov    0xf0230220,%edx$/;"	l
f0100aa7	obj/kern/kernel.asm	/^f0100aa7:	a1 24 02 23 f0       	mov    0xf0230224,%eax$/;"	l
f0100aac	obj/kern/kernel.asm	/^f0100aac:	39 c2                	cmp    %eax,%edx$/;"	l
f0100aae	obj/kern/kernel.asm	/^f0100aae:	74 36                	je     f0100ae6 <cons_getc+0x55>$/;"	l
f0100ab0	obj/kern/kernel.asm	/^f0100ab0:	a1 20 02 23 f0       	mov    0xf0230220,%eax$/;"	l
f0100ab5	obj/kern/kernel.asm	/^f0100ab5:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0100ab8	obj/kern/kernel.asm	/^f0100ab8:	89 15 20 02 23 f0    	mov    %edx,0xf0230220$/;"	l
f0100abe	obj/kern/kernel.asm	/^f0100abe:	0f b6 80 20 00 23 f0 	movzbl -0xfdcffe0(%eax),%eax$/;"	l
f0100ac5	obj/kern/kernel.asm	/^f0100ac5:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100ac8	obj/kern/kernel.asm	/^f0100ac8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0100acb	obj/kern/kernel.asm	/^f0100acb:	a1 20 02 23 f0       	mov    0xf0230220,%eax$/;"	l
f0100ad0	obj/kern/kernel.asm	/^f0100ad0:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
f0100ad5	obj/kern/kernel.asm	/^f0100ad5:	75 0a                	jne    f0100ae1 <cons_getc+0x50>$/;"	l
f0100ad7	obj/kern/kernel.asm	/^f0100ad7:	c7 05 20 02 23 f0 00 	movl   $0x0,0xf0230220$/;"	l
f0100ade	obj/kern/kernel.asm	/^f0100ade:	00 00 00 $/;"	l
f0100ae1	obj/kern/kernel.asm	/^f0100ae1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100ae4	obj/kern/kernel.asm	/^f0100ae4:	eb 05                	jmp    f0100aeb <cons_getc+0x5a>$/;"	l
f0100ae6	obj/kern/kernel.asm	/^f0100ae6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100aeb	obj/kern/kernel.asm	/^f0100aeb:	c9                   	leave  $/;"	l
f0100aec	obj/kern/kernel.asm	/^f0100aec:	c3                   	ret    $/;"	l
f0100aed	obj/kern/kernel.asm	/^f0100aed <cons_putc>:$/;"	l
f0100aed	obj/kern/kernel.asm	/^f0100aed:	55                   	push   %ebp$/;"	l
f0100aee	obj/kern/kernel.asm	/^f0100aee:	89 e5                	mov    %esp,%ebp$/;"	l
f0100af0	obj/kern/kernel.asm	/^f0100af0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100af3	obj/kern/kernel.asm	/^f0100af3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100af6	obj/kern/kernel.asm	/^f0100af6:	e8 54 f9 ff ff       	call   f010044f <serial_putc>$/;"	l
f0100afb	obj/kern/kernel.asm	/^f0100afb:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100afe	obj/kern/kernel.asm	/^f0100afe:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100b01	obj/kern/kernel.asm	/^f0100b01:	e8 3b fa ff ff       	call   f0100541 <lpt_putc>$/;"	l
f0100b06	obj/kern/kernel.asm	/^f0100b06:	83 c4 04             	add    $0x4,%esp$/;"	l
f0100b09	obj/kern/kernel.asm	/^f0100b09:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100b0c	obj/kern/kernel.asm	/^f0100b0c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100b0f	obj/kern/kernel.asm	/^f0100b0f:	e8 4b fb ff ff       	call   f010065f <cga_putc>$/;"	l
f0100b14	obj/kern/kernel.asm	/^f0100b14:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b17	obj/kern/kernel.asm	/^f0100b17:	90                   	nop$/;"	l
f0100b18	obj/kern/kernel.asm	/^f0100b18:	c9                   	leave  $/;"	l
f0100b19	obj/kern/kernel.asm	/^f0100b19:	c3                   	ret    $/;"	l
f0100b1a	obj/kern/kernel.asm	/^f0100b1a <cons_init>:$/;"	l
f0100b1a	obj/kern/kernel.asm	/^f0100b1a:	55                   	push   %ebp$/;"	l
f0100b1b	obj/kern/kernel.asm	/^f0100b1b:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b1d	obj/kern/kernel.asm	/^f0100b1d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100b20	obj/kern/kernel.asm	/^f0100b20:	e8 83 fa ff ff       	call   f01005a8 <cga_init>$/;"	l
f0100b25	obj/kern/kernel.asm	/^f0100b25:	e8 f0 fe ff ff       	call   f0100a1a <kbd_init>$/;"	l
f0100b2a	obj/kern/kernel.asm	/^f0100b2a:	e8 6f f9 ff ff       	call   f010049e <serial_init>$/;"	l
f0100b2f	obj/kern/kernel.asm	/^f0100b2f:	0f b6 05 00 00 23 f0 	movzbl 0xf0230000,%eax$/;"	l
f0100b36	obj/kern/kernel.asm	/^f0100b36:	83 f0 01             	xor    $0x1,%eax$/;"	l
f0100b39	obj/kern/kernel.asm	/^f0100b39:	84 c0                	test   %al,%al$/;"	l
f0100b3b	obj/kern/kernel.asm	/^f0100b3b:	74 10                	je     f0100b4d <cons_init+0x33>$/;"	l
f0100b3d	obj/kern/kernel.asm	/^f0100b3d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100b40	obj/kern/kernel.asm	/^f0100b40:	68 ee 84 10 f0       	push   $0xf01084ee$/;"	l
f0100b45	obj/kern/kernel.asm	/^f0100b45:	e8 64 3e 00 00       	call   f01049ae <cprintf>$/;"	l
f0100b4a	obj/kern/kernel.asm	/^f0100b4a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b4d	obj/kern/kernel.asm	/^f0100b4d:	90                   	nop$/;"	l
f0100b4e	obj/kern/kernel.asm	/^f0100b4e:	c9                   	leave  $/;"	l
f0100b4f	obj/kern/kernel.asm	/^f0100b4f:	c3                   	ret    $/;"	l
f0100b50	obj/kern/kernel.asm	/^f0100b50 <cputchar>:$/;"	l
f0100b50	obj/kern/kernel.asm	/^f0100b50:	55                   	push   %ebp$/;"	l
f0100b51	obj/kern/kernel.asm	/^f0100b51:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b53	obj/kern/kernel.asm	/^f0100b53:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100b56	obj/kern/kernel.asm	/^f0100b56:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100b59	obj/kern/kernel.asm	/^f0100b59:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0100b5c	obj/kern/kernel.asm	/^f0100b5c:	e8 8c ff ff ff       	call   f0100aed <cons_putc>$/;"	l
f0100b61	obj/kern/kernel.asm	/^f0100b61:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100b64	obj/kern/kernel.asm	/^f0100b64:	90                   	nop$/;"	l
f0100b65	obj/kern/kernel.asm	/^f0100b65:	c9                   	leave  $/;"	l
f0100b66	obj/kern/kernel.asm	/^f0100b66:	c3                   	ret    $/;"	l
f0100b67	obj/kern/kernel.asm	/^f0100b67 <getchar>:$/;"	l
f0100b67	obj/kern/kernel.asm	/^f0100b67:	55                   	push   %ebp$/;"	l
f0100b68	obj/kern/kernel.asm	/^f0100b68:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b6a	obj/kern/kernel.asm	/^f0100b6a:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100b6d	obj/kern/kernel.asm	/^f0100b6d:	e8 1f ff ff ff       	call   f0100a91 <cons_getc>$/;"	l
f0100b72	obj/kern/kernel.asm	/^f0100b72:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0100b75	obj/kern/kernel.asm	/^f0100b75:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0100b79	obj/kern/kernel.asm	/^f0100b79:	74 f2                	je     f0100b6d <getchar+0x6>$/;"	l
f0100b7b	obj/kern/kernel.asm	/^f0100b7b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100b7e	obj/kern/kernel.asm	/^f0100b7e:	c9                   	leave  $/;"	l
f0100b7f	obj/kern/kernel.asm	/^f0100b7f:	c3                   	ret    $/;"	l
f0100b80	obj/kern/kernel.asm	/^f0100b80 <iscons>:$/;"	l
f0100b80	obj/kern/kernel.asm	/^f0100b80:	55                   	push   %ebp$/;"	l
f0100b81	obj/kern/kernel.asm	/^f0100b81:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b83	obj/kern/kernel.asm	/^f0100b83:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0100b88	obj/kern/kernel.asm	/^f0100b88:	5d                   	pop    %ebp$/;"	l
f0100b89	obj/kern/kernel.asm	/^f0100b89:	c3                   	ret    $/;"	l
f0100b8a	obj/kern/kernel.asm	/^f0100b8a <read_ebp>:$/;"	l
f0100b8a	obj/kern/kernel.asm	/^f0100b8a:	55                   	push   %ebp$/;"	l
f0100b8b	obj/kern/kernel.asm	/^f0100b8b:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b8d	obj/kern/kernel.asm	/^f0100b8d:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0100b90	obj/kern/kernel.asm	/^f0100b90:	89 e8                	mov    %ebp,%eax$/;"	l
f0100b92	obj/kern/kernel.asm	/^f0100b92:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f0100b95	obj/kern/kernel.asm	/^f0100b95:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0100b98	obj/kern/kernel.asm	/^f0100b98:	c9                   	leave  $/;"	l
f0100b99	obj/kern/kernel.asm	/^f0100b99:	c3                   	ret    $/;"	l
f0100b9a	obj/kern/kernel.asm	/^f0100b9a <mon_help>:$/;"	l
f0100b9a	obj/kern/kernel.asm	/^f0100b9a:	55                   	push   %ebp$/;"	l
f0100b9b	obj/kern/kernel.asm	/^f0100b9b:	89 e5                	mov    %esp,%ebp$/;"	l
f0100b9d	obj/kern/kernel.asm	/^f0100b9d:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100ba0	obj/kern/kernel.asm	/^f0100ba0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0100ba7	obj/kern/kernel.asm	/^f0100ba7:	eb 3c                	jmp    f0100be5 <mon_help+0x4b>$/;"	l
f0100ba9	obj/kern/kernel.asm	/^f0100ba9:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0100bac	obj/kern/kernel.asm	/^f0100bac:	89 d0                	mov    %edx,%eax$/;"	l
f0100bae	obj/kern/kernel.asm	/^f0100bae:	01 c0                	add    %eax,%eax$/;"	l
f0100bb0	obj/kern/kernel.asm	/^f0100bb0:	01 d0                	add    %edx,%eax$/;"	l
f0100bb2	obj/kern/kernel.asm	/^f0100bb2:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0100bb5	obj/kern/kernel.asm	/^f0100bb5:	05 24 55 12 f0       	add    $0xf0125524,%eax$/;"	l
f0100bba	obj/kern/kernel.asm	/^f0100bba:	8b 08                	mov    (%eax),%ecx$/;"	l
f0100bbc	obj/kern/kernel.asm	/^f0100bbc:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0100bbf	obj/kern/kernel.asm	/^f0100bbf:	89 d0                	mov    %edx,%eax$/;"	l
f0100bc1	obj/kern/kernel.asm	/^f0100bc1:	01 c0                	add    %eax,%eax$/;"	l
f0100bc3	obj/kern/kernel.asm	/^f0100bc3:	01 d0                	add    %edx,%eax$/;"	l
f0100bc5	obj/kern/kernel.asm	/^f0100bc5:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0100bc8	obj/kern/kernel.asm	/^f0100bc8:	05 20 55 12 f0       	add    $0xf0125520,%eax$/;"	l
f0100bcd	obj/kern/kernel.asm	/^f0100bcd:	8b 00                	mov    (%eax),%eax$/;"	l
f0100bcf	obj/kern/kernel.asm	/^f0100bcf:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100bd2	obj/kern/kernel.asm	/^f0100bd2:	51                   	push   %ecx$/;"	l
f0100bd3	obj/kern/kernel.asm	/^f0100bd3:	50                   	push   %eax$/;"	l
f0100bd4	obj/kern/kernel.asm	/^f0100bd4:	68 e8 85 10 f0       	push   $0xf01085e8$/;"	l
f0100bd9	obj/kern/kernel.asm	/^f0100bd9:	e8 d0 3d 00 00       	call   f01049ae <cprintf>$/;"	l
f0100bde	obj/kern/kernel.asm	/^f0100bde:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100be1	obj/kern/kernel.asm	/^f0100be1:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f0100be5	obj/kern/kernel.asm	/^f0100be5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100be8	obj/kern/kernel.asm	/^f0100be8:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f0100beb	obj/kern/kernel.asm	/^f0100beb:	76 bc                	jbe    f0100ba9 <mon_help+0xf>$/;"	l
f0100bed	obj/kern/kernel.asm	/^f0100bed:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100bf2	obj/kern/kernel.asm	/^f0100bf2:	c9                   	leave  $/;"	l
f0100bf3	obj/kern/kernel.asm	/^f0100bf3:	c3                   	ret    $/;"	l
f0100bf4	obj/kern/kernel.asm	/^f0100bf4 <mon_kerninfo>:$/;"	l
f0100bf4	obj/kern/kernel.asm	/^f0100bf4:	55                   	push   %ebp$/;"	l
f0100bf5	obj/kern/kernel.asm	/^f0100bf5:	89 e5                	mov    %esp,%ebp$/;"	l
f0100bf7	obj/kern/kernel.asm	/^f0100bf7:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0100bfa	obj/kern/kernel.asm	/^f0100bfa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100bfd	obj/kern/kernel.asm	/^f0100bfd:	68 f1 85 10 f0       	push   $0xf01085f1$/;"	l
f0100c02	obj/kern/kernel.asm	/^f0100c02:	e8 a7 3d 00 00       	call   f01049ae <cprintf>$/;"	l
f0100c07	obj/kern/kernel.asm	/^f0100c07:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c0a	obj/kern/kernel.asm	/^f0100c0a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100c0d	obj/kern/kernel.asm	/^f0100c0d:	68 0c 00 10 00       	push   $0x10000c$/;"	l
f0100c12	obj/kern/kernel.asm	/^f0100c12:	68 0c 86 10 f0       	push   $0xf010860c$/;"	l
f0100c17	obj/kern/kernel.asm	/^f0100c17:	e8 92 3d 00 00       	call   f01049ae <cprintf>$/;"	l
f0100c1c	obj/kern/kernel.asm	/^f0100c1c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c1f	obj/kern/kernel.asm	/^f0100c1f:	b8 0c 00 10 00       	mov    $0x10000c,%eax$/;"	l
f0100c24	obj/kern/kernel.asm	/^f0100c24:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100c27	obj/kern/kernel.asm	/^f0100c27:	50                   	push   %eax$/;"	l
f0100c28	obj/kern/kernel.asm	/^f0100c28:	68 0c 00 10 f0       	push   $0xf010000c$/;"	l
f0100c2d	obj/kern/kernel.asm	/^f0100c2d:	68 34 86 10 f0       	push   $0xf0108634$/;"	l
f0100c32	obj/kern/kernel.asm	/^f0100c32:	e8 77 3d 00 00       	call   f01049ae <cprintf>$/;"	l
f0100c37	obj/kern/kernel.asm	/^f0100c37:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c3a	obj/kern/kernel.asm	/^f0100c3a:	b8 11 84 10 00       	mov    $0x108411,%eax$/;"	l
f0100c3f	obj/kern/kernel.asm	/^f0100c3f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100c42	obj/kern/kernel.asm	/^f0100c42:	50                   	push   %eax$/;"	l
f0100c43	obj/kern/kernel.asm	/^f0100c43:	68 11 84 10 f0       	push   $0xf0108411$/;"	l
f0100c48	obj/kern/kernel.asm	/^f0100c48:	68 58 86 10 f0       	push   $0xf0108658$/;"	l
f0100c4d	obj/kern/kernel.asm	/^f0100c4d:	e8 5c 3d 00 00       	call   f01049ae <cprintf>$/;"	l
f0100c52	obj/kern/kernel.asm	/^f0100c52:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c55	obj/kern/kernel.asm	/^f0100c55:	b8 b4 fe 22 00       	mov    $0x22feb4,%eax$/;"	l
f0100c5a	obj/kern/kernel.asm	/^f0100c5a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100c5d	obj/kern/kernel.asm	/^f0100c5d:	50                   	push   %eax$/;"	l
f0100c5e	obj/kern/kernel.asm	/^f0100c5e:	68 b4 fe 22 f0       	push   $0xf022feb4$/;"	l
f0100c63	obj/kern/kernel.asm	/^f0100c63:	68 7c 86 10 f0       	push   $0xf010867c$/;"	l
f0100c68	obj/kern/kernel.asm	/^f0100c68:	e8 41 3d 00 00       	call   f01049ae <cprintf>$/;"	l
f0100c6d	obj/kern/kernel.asm	/^f0100c6d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c70	obj/kern/kernel.asm	/^f0100c70:	b8 08 20 27 00       	mov    $0x272008,%eax$/;"	l
f0100c75	obj/kern/kernel.asm	/^f0100c75:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100c78	obj/kern/kernel.asm	/^f0100c78:	50                   	push   %eax$/;"	l
f0100c79	obj/kern/kernel.asm	/^f0100c79:	68 08 20 27 f0       	push   $0xf0272008$/;"	l
f0100c7e	obj/kern/kernel.asm	/^f0100c7e:	68 a0 86 10 f0       	push   $0xf01086a0$/;"	l
f0100c83	obj/kern/kernel.asm	/^f0100c83:	e8 26 3d 00 00       	call   f01049ae <cprintf>$/;"	l
f0100c88	obj/kern/kernel.asm	/^f0100c88:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100c8b	obj/kern/kernel.asm	/^f0100c8b:	c7 45 f4 00 04 00 00 	movl   $0x400,-0xc(%ebp)$/;"	l
f0100c92	obj/kern/kernel.asm	/^f0100c92:	ba 0c 00 10 f0       	mov    $0xf010000c,%edx$/;"	l
f0100c97	obj/kern/kernel.asm	/^f0100c97:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100c9a	obj/kern/kernel.asm	/^f0100c9a:	29 d0                	sub    %edx,%eax$/;"	l
f0100c9c	obj/kern/kernel.asm	/^f0100c9c:	89 c2                	mov    %eax,%edx$/;"	l
f0100c9e	obj/kern/kernel.asm	/^f0100c9e:	b8 08 20 27 f0       	mov    $0xf0272008,%eax$/;"	l
f0100ca3	obj/kern/kernel.asm	/^f0100ca3:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0100ca6	obj/kern/kernel.asm	/^f0100ca6:	01 d0                	add    %edx,%eax$/;"	l
f0100ca8	obj/kern/kernel.asm	/^f0100ca8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0100cab	obj/kern/kernel.asm	/^f0100cab:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0100cae	obj/kern/kernel.asm	/^f0100cae:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0100cb3	obj/kern/kernel.asm	/^f0100cb3:	f7 75 f4             	divl   -0xc(%ebp)$/;"	l
f0100cb6	obj/kern/kernel.asm	/^f0100cb6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0100cb9	obj/kern/kernel.asm	/^f0100cb9:	29 d0                	sub    %edx,%eax$/;"	l
f0100cbb	obj/kern/kernel.asm	/^f0100cbb:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
f0100cc1	obj/kern/kernel.asm	/^f0100cc1:	85 c0                	test   %eax,%eax$/;"	l
f0100cc3	obj/kern/kernel.asm	/^f0100cc3:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0100cc6	obj/kern/kernel.asm	/^f0100cc6:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
f0100cc9	obj/kern/kernel.asm	/^f0100cc9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ccc	obj/kern/kernel.asm	/^f0100ccc:	50                   	push   %eax$/;"	l
f0100ccd	obj/kern/kernel.asm	/^f0100ccd:	68 c4 86 10 f0       	push   $0xf01086c4$/;"	l
f0100cd2	obj/kern/kernel.asm	/^f0100cd2:	e8 d7 3c 00 00       	call   f01049ae <cprintf>$/;"	l
f0100cd7	obj/kern/kernel.asm	/^f0100cd7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100cda	obj/kern/kernel.asm	/^f0100cda:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100cdf	obj/kern/kernel.asm	/^f0100cdf:	c9                   	leave  $/;"	l
f0100ce0	obj/kern/kernel.asm	/^f0100ce0:	c3                   	ret    $/;"	l
f0100ce1	obj/kern/kernel.asm	/^f0100ce1 <mon_backtrace>:$/;"	l
f0100ce1	obj/kern/kernel.asm	/^f0100ce1:	55                   	push   %ebp$/;"	l
f0100ce2	obj/kern/kernel.asm	/^f0100ce2:	89 e5                	mov    %esp,%ebp$/;"	l
f0100ce4	obj/kern/kernel.asm	/^f0100ce4:	56                   	push   %esi$/;"	l
f0100ce5	obj/kern/kernel.asm	/^f0100ce5:	53                   	push   %ebx$/;"	l
f0100ce6	obj/kern/kernel.asm	/^f0100ce6:	83 ec 40             	sub    $0x40,%esp$/;"	l
f0100ce9	obj/kern/kernel.asm	/^f0100ce9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100cec	obj/kern/kernel.asm	/^f0100cec:	68 ee 86 10 f0       	push   $0xf01086ee$/;"	l
f0100cf1	obj/kern/kernel.asm	/^f0100cf1:	e8 b8 3c 00 00       	call   f01049ae <cprintf>$/;"	l
f0100cf6	obj/kern/kernel.asm	/^f0100cf6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100cf9	obj/kern/kernel.asm	/^f0100cf9:	e8 8c fe ff ff       	call   f0100b8a <read_ebp>$/;"	l
f0100cfe	obj/kern/kernel.asm	/^f0100cfe:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0100d01	obj/kern/kernel.asm	/^f0100d01:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f0100d08	obj/kern/kernel.asm	/^f0100d08:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f0100d0f	obj/kern/kernel.asm	/^f0100d0f:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0100d16	obj/kern/kernel.asm	/^f0100d16:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0100d1d	obj/kern/kernel.asm	/^f0100d1d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0100d24	obj/kern/kernel.asm	/^f0100d24:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
f0100d2b	obj/kern/kernel.asm	/^f0100d2b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100d2e	obj/kern/kernel.asm	/^f0100d2e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0100d31	obj/kern/kernel.asm	/^f0100d31:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0100d34	obj/kern/kernel.asm	/^f0100d34:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100d37	obj/kern/kernel.asm	/^f0100d37:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0100d3a	obj/kern/kernel.asm	/^f0100d3a:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0100d3d	obj/kern/kernel.asm	/^f0100d3d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100d40	obj/kern/kernel.asm	/^f0100d40:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
f0100d43	obj/kern/kernel.asm	/^f0100d43:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0100d46	obj/kern/kernel.asm	/^f0100d46:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100d49	obj/kern/kernel.asm	/^f0100d49:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
f0100d4c	obj/kern/kernel.asm	/^f0100d4c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100d4f	obj/kern/kernel.asm	/^f0100d4f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100d52	obj/kern/kernel.asm	/^f0100d52:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
f0100d55	obj/kern/kernel.asm	/^f0100d55:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0100d58	obj/kern/kernel.asm	/^f0100d58:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100d5b	obj/kern/kernel.asm	/^f0100d5b:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
f0100d5e	obj/kern/kernel.asm	/^f0100d5e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0100d61	obj/kern/kernel.asm	/^f0100d61:	8b 75 ec             	mov    -0x14(%ebp),%esi$/;"	l
f0100d64	obj/kern/kernel.asm	/^f0100d64:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
f0100d67	obj/kern/kernel.asm	/^f0100d67:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
f0100d6a	obj/kern/kernel.asm	/^f0100d6a:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0100d6d	obj/kern/kernel.asm	/^f0100d6d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0100d70	obj/kern/kernel.asm	/^f0100d70:	56                   	push   %esi$/;"	l
f0100d71	obj/kern/kernel.asm	/^f0100d71:	53                   	push   %ebx$/;"	l
f0100d72	obj/kern/kernel.asm	/^f0100d72:	51                   	push   %ecx$/;"	l
f0100d73	obj/kern/kernel.asm	/^f0100d73:	52                   	push   %edx$/;"	l
f0100d74	obj/kern/kernel.asm	/^f0100d74:	50                   	push   %eax$/;"	l
f0100d75	obj/kern/kernel.asm	/^f0100d75:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f0100d78	obj/kern/kernel.asm	/^f0100d78:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0100d7b	obj/kern/kernel.asm	/^f0100d7b:	68 00 87 10 f0       	push   $0xf0108700$/;"	l
f0100d80	obj/kern/kernel.asm	/^f0100d80:	e8 29 3c 00 00       	call   f01049ae <cprintf>$/;"	l
f0100d85	obj/kern/kernel.asm	/^f0100d85:	83 c4 20             	add    $0x20,%esp$/;"	l
f0100d88	obj/kern/kernel.asm	/^f0100d88:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100d8b	obj/kern/kernel.asm	/^f0100d8b:	8d 45 c4             	lea    -0x3c(%ebp),%eax$/;"	l
f0100d8e	obj/kern/kernel.asm	/^f0100d8e:	50                   	push   %eax$/;"	l
f0100d8f	obj/kern/kernel.asm	/^f0100d8f:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f0100d92	obj/kern/kernel.asm	/^f0100d92:	e8 e3 57 00 00       	call   f010657a <debuginfo_eip>$/;"	l
f0100d97	obj/kern/kernel.asm	/^f0100d97:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100d9a	obj/kern/kernel.asm	/^f0100d9a:	85 c0                	test   %eax,%eax$/;"	l
f0100d9c	obj/kern/kernel.asm	/^f0100d9c:	79 17                	jns    f0100db5 <mon_backtrace+0xd4>$/;"	l
f0100d9e	obj/kern/kernel.asm	/^f0100d9e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100da1	obj/kern/kernel.asm	/^f0100da1:	68 38 87 10 f0       	push   $0xf0108738$/;"	l
f0100da6	obj/kern/kernel.asm	/^f0100da6:	e8 03 3c 00 00       	call   f01049ae <cprintf>$/;"	l
f0100dab	obj/kern/kernel.asm	/^f0100dab:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100dae	obj/kern/kernel.asm	/^f0100dae:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100db3	obj/kern/kernel.asm	/^f0100db3:	eb 42                	jmp    f0100df7 <mon_backtrace+0x116>$/;"	l
f0100db5	obj/kern/kernel.asm	/^f0100db5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0100db8	obj/kern/kernel.asm	/^f0100db8:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0100dbb	obj/kern/kernel.asm	/^f0100dbb:	89 d6                	mov    %edx,%esi$/;"	l
f0100dbd	obj/kern/kernel.asm	/^f0100dbd:	29 c6                	sub    %eax,%esi$/;"	l
f0100dbf	obj/kern/kernel.asm	/^f0100dbf:	8b 5d cc             	mov    -0x34(%ebp),%ebx$/;"	l
f0100dc2	obj/kern/kernel.asm	/^f0100dc2:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f0100dc5	obj/kern/kernel.asm	/^f0100dc5:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
f0100dc8	obj/kern/kernel.asm	/^f0100dc8:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
f0100dcb	obj/kern/kernel.asm	/^f0100dcb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100dce	obj/kern/kernel.asm	/^f0100dce:	56                   	push   %esi$/;"	l
f0100dcf	obj/kern/kernel.asm	/^f0100dcf:	53                   	push   %ebx$/;"	l
f0100dd0	obj/kern/kernel.asm	/^f0100dd0:	51                   	push   %ecx$/;"	l
f0100dd1	obj/kern/kernel.asm	/^f0100dd1:	52                   	push   %edx$/;"	l
f0100dd2	obj/kern/kernel.asm	/^f0100dd2:	50                   	push   %eax$/;"	l
f0100dd3	obj/kern/kernel.asm	/^f0100dd3:	68 6a 87 10 f0       	push   $0xf010876a$/;"	l
f0100dd8	obj/kern/kernel.asm	/^f0100dd8:	e8 d1 3b 00 00       	call   f01049ae <cprintf>$/;"	l
f0100ddd	obj/kern/kernel.asm	/^f0100ddd:	83 c4 20             	add    $0x20,%esp$/;"	l
f0100de0	obj/kern/kernel.asm	/^f0100de0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100de3	obj/kern/kernel.asm	/^f0100de3:	8b 00                	mov    (%eax),%eax$/;"	l
f0100de5	obj/kern/kernel.asm	/^f0100de5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0100de8	obj/kern/kernel.asm	/^f0100de8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0100dec	obj/kern/kernel.asm	/^f0100dec:	0f 85 39 ff ff ff    	jne    f0100d2b <mon_backtrace+0x4a>$/;"	l
f0100df2	obj/kern/kernel.asm	/^f0100df2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100df7	obj/kern/kernel.asm	/^f0100df7:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0100dfa	obj/kern/kernel.asm	/^f0100dfa:	5b                   	pop    %ebx$/;"	l
f0100dfb	obj/kern/kernel.asm	/^f0100dfb:	5e                   	pop    %esi$/;"	l
f0100dfc	obj/kern/kernel.asm	/^f0100dfc:	5d                   	pop    %ebp$/;"	l
f0100dfd	obj/kern/kernel.asm	/^f0100dfd:	c3                   	ret    $/;"	l
f0100dfe	obj/kern/kernel.asm	/^f0100dfe <mon_showmappings>:$/;"	l
f0100dfe	obj/kern/kernel.asm	/^f0100dfe:	55                   	push   %ebp$/;"	l
f0100dff	obj/kern/kernel.asm	/^f0100dff:	89 e5                	mov    %esp,%ebp$/;"	l
f0100e01	obj/kern/kernel.asm	/^f0100e01:	53                   	push   %ebx$/;"	l
f0100e02	obj/kern/kernel.asm	/^f0100e02:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0100e05	obj/kern/kernel.asm	/^f0100e05:	83 7d 08 03          	cmpl   $0x3,0x8(%ebp)$/;"	l
f0100e09	obj/kern/kernel.asm	/^f0100e09:	74 1a                	je     f0100e25 <mon_showmappings+0x27>$/;"	l
f0100e0b	obj/kern/kernel.asm	/^f0100e0b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100e0e	obj/kern/kernel.asm	/^f0100e0e:	68 84 87 10 f0       	push   $0xf0108784$/;"	l
f0100e13	obj/kern/kernel.asm	/^f0100e13:	e8 96 3b 00 00       	call   f01049ae <cprintf>$/;"	l
f0100e18	obj/kern/kernel.asm	/^f0100e18:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e1b	obj/kern/kernel.asm	/^f0100e1b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e20	obj/kern/kernel.asm	/^f0100e20:	e9 5c 01 00 00       	jmp    f0100f81 <mon_showmappings+0x183>$/;"	l
f0100e25	obj/kern/kernel.asm	/^f0100e25:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100e28	obj/kern/kernel.asm	/^f0100e28:	68 ac 87 10 f0       	push   $0xf01087ac$/;"	l
f0100e2d	obj/kern/kernel.asm	/^f0100e2d:	e8 7c 3b 00 00       	call   f01049ae <cprintf>$/;"	l
f0100e32	obj/kern/kernel.asm	/^f0100e32:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e35	obj/kern/kernel.asm	/^f0100e35:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100e38	obj/kern/kernel.asm	/^f0100e38:	83 c0 04             	add    $0x4,%eax$/;"	l
f0100e3b	obj/kern/kernel.asm	/^f0100e3b:	8b 00                	mov    (%eax),%eax$/;"	l
f0100e3d	obj/kern/kernel.asm	/^f0100e3d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100e40	obj/kern/kernel.asm	/^f0100e40:	6a 10                	push   $0x10$/;"	l
f0100e42	obj/kern/kernel.asm	/^f0100e42:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
f0100e45	obj/kern/kernel.asm	/^f0100e45:	52                   	push   %edx$/;"	l
f0100e46	obj/kern/kernel.asm	/^f0100e46:	50                   	push   %eax$/;"	l
f0100e47	obj/kern/kernel.asm	/^f0100e47:	e8 33 66 00 00       	call   f010747f <strtol>$/;"	l
f0100e4c	obj/kern/kernel.asm	/^f0100e4c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e4f	obj/kern/kernel.asm	/^f0100e4f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0100e52	obj/kern/kernel.asm	/^f0100e52:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0100e55	obj/kern/kernel.asm	/^f0100e55:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100e5a	obj/kern/kernel.asm	/^f0100e5a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0100e5d	obj/kern/kernel.asm	/^f0100e5d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100e60	obj/kern/kernel.asm	/^f0100e60:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0100e63	obj/kern/kernel.asm	/^f0100e63:	84 c0                	test   %al,%al$/;"	l
f0100e65	obj/kern/kernel.asm	/^f0100e65:	0f 85 fd 00 00 00    	jne    f0100f68 <mon_showmappings+0x16a>$/;"	l
f0100e6b	obj/kern/kernel.asm	/^f0100e6b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100e6e	obj/kern/kernel.asm	/^f0100e6e:	83 c0 08             	add    $0x8,%eax$/;"	l
f0100e71	obj/kern/kernel.asm	/^f0100e71:	8b 00                	mov    (%eax),%eax$/;"	l
f0100e73	obj/kern/kernel.asm	/^f0100e73:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100e76	obj/kern/kernel.asm	/^f0100e76:	6a 10                	push   $0x10$/;"	l
f0100e78	obj/kern/kernel.asm	/^f0100e78:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
f0100e7b	obj/kern/kernel.asm	/^f0100e7b:	52                   	push   %edx$/;"	l
f0100e7c	obj/kern/kernel.asm	/^f0100e7c:	50                   	push   %eax$/;"	l
f0100e7d	obj/kern/kernel.asm	/^f0100e7d:	e8 fd 65 00 00       	call   f010747f <strtol>$/;"	l
f0100e82	obj/kern/kernel.asm	/^f0100e82:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100e85	obj/kern/kernel.asm	/^f0100e85:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0100e88	obj/kern/kernel.asm	/^f0100e88:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0100e8b	obj/kern/kernel.asm	/^f0100e8b:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0100e90	obj/kern/kernel.asm	/^f0100e90:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0100e93	obj/kern/kernel.asm	/^f0100e93:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0100e96	obj/kern/kernel.asm	/^f0100e96:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0100e99	obj/kern/kernel.asm	/^f0100e99:	84 c0                	test   %al,%al$/;"	l
f0100e9b	obj/kern/kernel.asm	/^f0100e9b:	0f 85 ca 00 00 00    	jne    f0100f6b <mon_showmappings+0x16d>$/;"	l
f0100ea1	obj/kern/kernel.asm	/^f0100ea1:	e9 af 00 00 00       	jmp    f0100f55 <mon_showmappings+0x157>$/;"	l
f0100ea6	obj/kern/kernel.asm	/^f0100ea6:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0100ea9	obj/kern/kernel.asm	/^f0100ea9:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0100eae	obj/kern/kernel.asm	/^f0100eae:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100eb1	obj/kern/kernel.asm	/^f0100eb1:	6a 00                	push   $0x0$/;"	l
f0100eb3	obj/kern/kernel.asm	/^f0100eb3:	52                   	push   %edx$/;"	l
f0100eb4	obj/kern/kernel.asm	/^f0100eb4:	50                   	push   %eax$/;"	l
f0100eb5	obj/kern/kernel.asm	/^f0100eb5:	e8 d9 0a 00 00       	call   f0101993 <pgdir_walk>$/;"	l
f0100eba	obj/kern/kernel.asm	/^f0100eba:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ebd	obj/kern/kernel.asm	/^f0100ebd:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0100ec0	obj/kern/kernel.asm	/^f0100ec0:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0100ec4	obj/kern/kernel.asm	/^f0100ec4:	75 15                	jne    f0100edb <mon_showmappings+0xdd>$/;"	l
f0100ec6	obj/kern/kernel.asm	/^f0100ec6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100ec9	obj/kern/kernel.asm	/^f0100ec9:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0100ecc	obj/kern/kernel.asm	/^f0100ecc:	68 e0 87 10 f0       	push   $0xf01087e0$/;"	l
f0100ed1	obj/kern/kernel.asm	/^f0100ed1:	e8 d8 3a 00 00       	call   f01049ae <cprintf>$/;"	l
f0100ed6	obj/kern/kernel.asm	/^f0100ed6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100ed9	obj/kern/kernel.asm	/^f0100ed9:	eb 73                	jmp    f0100f4e <mon_showmappings+0x150>$/;"	l
f0100edb	obj/kern/kernel.asm	/^f0100edb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100ede	obj/kern/kernel.asm	/^f0100ede:	8b 00                	mov    (%eax),%eax$/;"	l
f0100ee0	obj/kern/kernel.asm	/^f0100ee0:	83 e0 01             	and    $0x1,%eax$/;"	l
f0100ee3	obj/kern/kernel.asm	/^f0100ee3:	85 c0                	test   %eax,%eax$/;"	l
f0100ee5	obj/kern/kernel.asm	/^f0100ee5:	75 15                	jne    f0100efc <mon_showmappings+0xfe>$/;"	l
f0100ee7	obj/kern/kernel.asm	/^f0100ee7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100eea	obj/kern/kernel.asm	/^f0100eea:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0100eed	obj/kern/kernel.asm	/^f0100eed:	68 0c 88 10 f0       	push   $0xf010880c$/;"	l
f0100ef2	obj/kern/kernel.asm	/^f0100ef2:	e8 b7 3a 00 00       	call   f01049ae <cprintf>$/;"	l
f0100ef7	obj/kern/kernel.asm	/^f0100ef7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100efa	obj/kern/kernel.asm	/^f0100efa:	eb 52                	jmp    f0100f4e <mon_showmappings+0x150>$/;"	l
f0100efc	obj/kern/kernel.asm	/^f0100efc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100eff	obj/kern/kernel.asm	/^f0100eff:	8b 00                	mov    (%eax),%eax$/;"	l
f0100f01	obj/kern/kernel.asm	/^f0100f01:	83 e0 01             	and    $0x1,%eax$/;"	l
f0100f04	obj/kern/kernel.asm	/^f0100f04:	85 c0                	test   %eax,%eax$/;"	l
f0100f06	obj/kern/kernel.asm	/^f0100f06:	0f 95 c0             	setne  %al$/;"	l
f0100f09	obj/kern/kernel.asm	/^f0100f09:	0f b6 c8             	movzbl %al,%ecx$/;"	l
f0100f0c	obj/kern/kernel.asm	/^f0100f0c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100f0f	obj/kern/kernel.asm	/^f0100f0f:	8b 00                	mov    (%eax),%eax$/;"	l
f0100f11	obj/kern/kernel.asm	/^f0100f11:	83 e0 02             	and    $0x2,%eax$/;"	l
f0100f14	obj/kern/kernel.asm	/^f0100f14:	85 c0                	test   %eax,%eax$/;"	l
f0100f16	obj/kern/kernel.asm	/^f0100f16:	0f 95 c0             	setne  %al$/;"	l
f0100f19	obj/kern/kernel.asm	/^f0100f19:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0100f1c	obj/kern/kernel.asm	/^f0100f1c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0100f1f	obj/kern/kernel.asm	/^f0100f1f:	8b 00                	mov    (%eax),%eax$/;"	l
f0100f21	obj/kern/kernel.asm	/^f0100f21:	83 e0 04             	and    $0x4,%eax$/;"	l
f0100f24	obj/kern/kernel.asm	/^f0100f24:	85 c0                	test   %eax,%eax$/;"	l
f0100f26	obj/kern/kernel.asm	/^f0100f26:	0f 95 c0             	setne  %al$/;"	l
f0100f29	obj/kern/kernel.asm	/^f0100f29:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100f2c	obj/kern/kernel.asm	/^f0100f2c:	8b 5d e4             	mov    -0x1c(%ebp),%ebx$/;"	l
f0100f2f	obj/kern/kernel.asm	/^f0100f2f:	8b 1b                	mov    (%ebx),%ebx$/;"	l
f0100f31	obj/kern/kernel.asm	/^f0100f31:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
f0100f37	obj/kern/kernel.asm	/^f0100f37:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0100f3a	obj/kern/kernel.asm	/^f0100f3a:	51                   	push   %ecx$/;"	l
f0100f3b	obj/kern/kernel.asm	/^f0100f3b:	52                   	push   %edx$/;"	l
f0100f3c	obj/kern/kernel.asm	/^f0100f3c:	50                   	push   %eax$/;"	l
f0100f3d	obj/kern/kernel.asm	/^f0100f3d:	53                   	push   %ebx$/;"	l
f0100f3e	obj/kern/kernel.asm	/^f0100f3e:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0100f41	obj/kern/kernel.asm	/^f0100f41:	68 38 88 10 f0       	push   $0xf0108838$/;"	l
f0100f46	obj/kern/kernel.asm	/^f0100f46:	e8 63 3a 00 00       	call   f01049ae <cprintf>$/;"	l
f0100f4b	obj/kern/kernel.asm	/^f0100f4b:	83 c4 20             	add    $0x20,%esp$/;"	l
f0100f4e	obj/kern/kernel.asm	/^f0100f4e:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
f0100f55	obj/kern/kernel.asm	/^f0100f55:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0100f58	obj/kern/kernel.asm	/^f0100f58:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
f0100f5b	obj/kern/kernel.asm	/^f0100f5b:	0f 86 45 ff ff ff    	jbe    f0100ea6 <mon_showmappings+0xa8>$/;"	l
f0100f61	obj/kern/kernel.asm	/^f0100f61:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100f66	obj/kern/kernel.asm	/^f0100f66:	eb 19                	jmp    f0100f81 <mon_showmappings+0x183>$/;"	l
f0100f68	obj/kern/kernel.asm	/^f0100f68:	90                   	nop$/;"	l
f0100f69	obj/kern/kernel.asm	/^f0100f69:	eb 01                	jmp    f0100f6c <mon_showmappings+0x16e>$/;"	l
f0100f6b	obj/kern/kernel.asm	/^f0100f6b:	90                   	nop$/;"	l
f0100f6c	obj/kern/kernel.asm	/^f0100f6c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100f6f	obj/kern/kernel.asm	/^f0100f6f:	68 60 88 10 f0       	push   $0xf0108860$/;"	l
f0100f74	obj/kern/kernel.asm	/^f0100f74:	e8 35 3a 00 00       	call   f01049ae <cprintf>$/;"	l
f0100f79	obj/kern/kernel.asm	/^f0100f79:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100f7c	obj/kern/kernel.asm	/^f0100f7c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100f81	obj/kern/kernel.asm	/^f0100f81:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0100f84	obj/kern/kernel.asm	/^f0100f84:	c9                   	leave  $/;"	l
f0100f85	obj/kern/kernel.asm	/^f0100f85:	c3                   	ret    $/;"	l
f0100f86	obj/kern/kernel.asm	/^f0100f86 <mon_chperm>:$/;"	l
f0100f86	obj/kern/kernel.asm	/^f0100f86:	55                   	push   %ebp$/;"	l
f0100f87	obj/kern/kernel.asm	/^f0100f87:	89 e5                	mov    %esp,%ebp$/;"	l
f0100f89	obj/kern/kernel.asm	/^f0100f89:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0100f8c	obj/kern/kernel.asm	/^f0100f8c:	83 7d 08 03          	cmpl   $0x3,0x8(%ebp)$/;"	l
f0100f90	obj/kern/kernel.asm	/^f0100f90:	74 5a                	je     f0100fec <mon_chperm+0x66>$/;"	l
f0100f92	obj/kern/kernel.asm	/^f0100f92:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100f95	obj/kern/kernel.asm	/^f0100f95:	68 95 88 10 f0       	push   $0xf0108895$/;"	l
f0100f9a	obj/kern/kernel.asm	/^f0100f9a:	e8 0f 3a 00 00       	call   f01049ae <cprintf>$/;"	l
f0100f9f	obj/kern/kernel.asm	/^f0100f9f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fa2	obj/kern/kernel.asm	/^f0100fa2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100fa5	obj/kern/kernel.asm	/^f0100fa5:	68 b0 88 10 f0       	push   $0xf01088b0$/;"	l
f0100faa	obj/kern/kernel.asm	/^f0100faa:	e8 ff 39 00 00       	call   f01049ae <cprintf>$/;"	l
f0100faf	obj/kern/kernel.asm	/^f0100faf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fb2	obj/kern/kernel.asm	/^f0100fb2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100fb5	obj/kern/kernel.asm	/^f0100fb5:	68 e8 88 10 f0       	push   $0xf01088e8$/;"	l
f0100fba	obj/kern/kernel.asm	/^f0100fba:	e8 ef 39 00 00       	call   f01049ae <cprintf>$/;"	l
f0100fbf	obj/kern/kernel.asm	/^f0100fbf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fc2	obj/kern/kernel.asm	/^f0100fc2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100fc5	obj/kern/kernel.asm	/^f0100fc5:	68 f8 88 10 f0       	push   $0xf01088f8$/;"	l
f0100fca	obj/kern/kernel.asm	/^f0100fca:	e8 df 39 00 00       	call   f01049ae <cprintf>$/;"	l
f0100fcf	obj/kern/kernel.asm	/^f0100fcf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fd2	obj/kern/kernel.asm	/^f0100fd2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0100fd5	obj/kern/kernel.asm	/^f0100fd5:	68 0b 89 10 f0       	push   $0xf010890b$/;"	l
f0100fda	obj/kern/kernel.asm	/^f0100fda:	e8 cf 39 00 00       	call   f01049ae <cprintf>$/;"	l
f0100fdf	obj/kern/kernel.asm	/^f0100fdf:	83 c4 10             	add    $0x10,%esp$/;"	l
f0100fe2	obj/kern/kernel.asm	/^f0100fe2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100fe7	obj/kern/kernel.asm	/^f0100fe7:	e9 d6 00 00 00       	jmp    f01010c2 <mon_chperm+0x13c>$/;"	l
f0100fec	obj/kern/kernel.asm	/^f0100fec:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0100fef	obj/kern/kernel.asm	/^f0100fef:	83 c0 04             	add    $0x4,%eax$/;"	l
f0100ff2	obj/kern/kernel.asm	/^f0100ff2:	8b 00                	mov    (%eax),%eax$/;"	l
f0100ff4	obj/kern/kernel.asm	/^f0100ff4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0100ff7	obj/kern/kernel.asm	/^f0100ff7:	6a 10                	push   $0x10$/;"	l
f0100ff9	obj/kern/kernel.asm	/^f0100ff9:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0100ffc	obj/kern/kernel.asm	/^f0100ffc:	52                   	push   %edx$/;"	l
f0100ffd	obj/kern/kernel.asm	/^f0100ffd:	50                   	push   %eax$/;"	l
f0100ffe	obj/kern/kernel.asm	/^f0100ffe:	e8 7c 64 00 00       	call   f010747f <strtol>$/;"	l
f0101003	obj/kern/kernel.asm	/^f0101003:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101006	obj/kern/kernel.asm	/^f0101006:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101009	obj/kern/kernel.asm	/^f0101009:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010100c	obj/kern/kernel.asm	/^f010100c:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101011	obj/kern/kernel.asm	/^f0101011:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0101014	obj/kern/kernel.asm	/^f0101014:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101017	obj/kern/kernel.asm	/^f0101017:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010101a	obj/kern/kernel.asm	/^f010101a:	84 c0                	test   %al,%al$/;"	l
f010101c	obj/kern/kernel.asm	/^f010101c:	0f 85 87 00 00 00    	jne    f01010a9 <mon_chperm+0x123>$/;"	l
f0101022	obj/kern/kernel.asm	/^f0101022:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101025	obj/kern/kernel.asm	/^f0101025:	83 c0 08             	add    $0x8,%eax$/;"	l
f0101028	obj/kern/kernel.asm	/^f0101028:	8b 00                	mov    (%eax),%eax$/;"	l
f010102a	obj/kern/kernel.asm	/^f010102a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010102d	obj/kern/kernel.asm	/^f010102d:	6a 0a                	push   $0xa$/;"	l
f010102f	obj/kern/kernel.asm	/^f010102f:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0101032	obj/kern/kernel.asm	/^f0101032:	52                   	push   %edx$/;"	l
f0101033	obj/kern/kernel.asm	/^f0101033:	50                   	push   %eax$/;"	l
f0101034	obj/kern/kernel.asm	/^f0101034:	e8 46 64 00 00       	call   f010747f <strtol>$/;"	l
f0101039	obj/kern/kernel.asm	/^f0101039:	83 c4 10             	add    $0x10,%esp$/;"	l
f010103c	obj/kern/kernel.asm	/^f010103c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010103f	obj/kern/kernel.asm	/^f010103f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101042	obj/kern/kernel.asm	/^f0101042:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0101045	obj/kern/kernel.asm	/^f0101045:	84 c0                	test   %al,%al$/;"	l
f0101047	obj/kern/kernel.asm	/^f0101047:	75 63                	jne    f01010ac <mon_chperm+0x126>$/;"	l
f0101049	obj/kern/kernel.asm	/^f0101049:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f010104c	obj/kern/kernel.asm	/^f010104c:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0101051	obj/kern/kernel.asm	/^f0101051:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101054	obj/kern/kernel.asm	/^f0101054:	6a 00                	push   $0x0$/;"	l
f0101056	obj/kern/kernel.asm	/^f0101056:	52                   	push   %edx$/;"	l
f0101057	obj/kern/kernel.asm	/^f0101057:	50                   	push   %eax$/;"	l
f0101058	obj/kern/kernel.asm	/^f0101058:	e8 36 09 00 00       	call   f0101993 <pgdir_walk>$/;"	l
f010105d	obj/kern/kernel.asm	/^f010105d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101060	obj/kern/kernel.asm	/^f0101060:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0101063	obj/kern/kernel.asm	/^f0101063:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0101067	obj/kern/kernel.asm	/^f0101067:	74 0c                	je     f0101075 <mon_chperm+0xef>$/;"	l
f0101069	obj/kern/kernel.asm	/^f0101069:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f010106c	obj/kern/kernel.asm	/^f010106c:	8b 00                	mov    (%eax),%eax$/;"	l
f010106e	obj/kern/kernel.asm	/^f010106e:	83 e0 01             	and    $0x1,%eax$/;"	l
f0101071	obj/kern/kernel.asm	/^f0101071:	85 c0                	test   %eax,%eax$/;"	l
f0101073	obj/kern/kernel.asm	/^f0101073:	75 17                	jne    f010108c <mon_chperm+0x106>$/;"	l
f0101075	obj/kern/kernel.asm	/^f0101075:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101078	obj/kern/kernel.asm	/^f0101078:	68 1c 89 10 f0       	push   $0xf010891c$/;"	l
f010107d	obj/kern/kernel.asm	/^f010107d:	e8 2c 39 00 00       	call   f01049ae <cprintf>$/;"	l
f0101082	obj/kern/kernel.asm	/^f0101082:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101085	obj/kern/kernel.asm	/^f0101085:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010108a	obj/kern/kernel.asm	/^f010108a:	eb 36                	jmp    f01010c2 <mon_chperm+0x13c>$/;"	l
f010108c	obj/kern/kernel.asm	/^f010108c:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
f0101090	obj/kern/kernel.asm	/^f0101090:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0101093	obj/kern/kernel.asm	/^f0101093:	8b 00                	mov    (%eax),%eax$/;"	l
f0101095	obj/kern/kernel.asm	/^f0101095:	83 e0 f8             	and    $0xfffffff8,%eax$/;"	l
f0101098	obj/kern/kernel.asm	/^f0101098:	0b 45 ec             	or     -0x14(%ebp),%eax$/;"	l
f010109b	obj/kern/kernel.asm	/^f010109b:	89 c2                	mov    %eax,%edx$/;"	l
f010109d	obj/kern/kernel.asm	/^f010109d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f01010a0	obj/kern/kernel.asm	/^f01010a0:	89 10                	mov    %edx,(%eax)$/;"	l
f01010a2	obj/kern/kernel.asm	/^f01010a2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01010a7	obj/kern/kernel.asm	/^f01010a7:	eb 19                	jmp    f01010c2 <mon_chperm+0x13c>$/;"	l
f01010a9	obj/kern/kernel.asm	/^f01010a9:	90                   	nop$/;"	l
f01010aa	obj/kern/kernel.asm	/^f01010aa:	eb 01                	jmp    f01010ad <mon_chperm+0x127>$/;"	l
f01010ac	obj/kern/kernel.asm	/^f01010ac:	90                   	nop$/;"	l
f01010ad	obj/kern/kernel.asm	/^f01010ad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01010b0	obj/kern/kernel.asm	/^f01010b0:	68 38 89 10 f0       	push   $0xf0108938$/;"	l
f01010b5	obj/kern/kernel.asm	/^f01010b5:	e8 f4 38 00 00       	call   f01049ae <cprintf>$/;"	l
f01010ba	obj/kern/kernel.asm	/^f01010ba:	83 c4 10             	add    $0x10,%esp$/;"	l
f01010bd	obj/kern/kernel.asm	/^f01010bd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01010c2	obj/kern/kernel.asm	/^f01010c2:	c9                   	leave  $/;"	l
f01010c3	obj/kern/kernel.asm	/^f01010c3:	c3                   	ret    $/;"	l
f01010c4	obj/kern/kernel.asm	/^f01010c4 <runcmd>:$/;"	l
f01010c4	obj/kern/kernel.asm	/^f01010c4:	55                   	push   %ebp$/;"	l
f01010c5	obj/kern/kernel.asm	/^f01010c5:	89 e5                	mov    %esp,%ebp$/;"	l
f01010c7	obj/kern/kernel.asm	/^f01010c7:	83 ec 58             	sub    $0x58,%esp$/;"	l
f01010ca	obj/kern/kernel.asm	/^f01010ca:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01010d1	obj/kern/kernel.asm	/^f01010d1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01010d4	obj/kern/kernel.asm	/^f01010d4:	c7 44 85 b0 00 00 00 	movl   $0x0,-0x50(%ebp,%eax,4)$/;"	l
f01010db	obj/kern/kernel.asm	/^f01010db:	00 $/;"	l
f01010dc	obj/kern/kernel.asm	/^f01010dc:	eb 0c                	jmp    f01010ea <runcmd+0x26>$/;"	l
f01010de	obj/kern/kernel.asm	/^f01010de:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01010e1	obj/kern/kernel.asm	/^f01010e1:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01010e4	obj/kern/kernel.asm	/^f01010e4:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
f01010e7	obj/kern/kernel.asm	/^f01010e7:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f01010ea	obj/kern/kernel.asm	/^f01010ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01010ed	obj/kern/kernel.asm	/^f01010ed:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01010f0	obj/kern/kernel.asm	/^f01010f0:	84 c0                	test   %al,%al$/;"	l
f01010f2	obj/kern/kernel.asm	/^f01010f2:	74 1e                	je     f0101112 <runcmd+0x4e>$/;"	l
f01010f4	obj/kern/kernel.asm	/^f01010f4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01010f7	obj/kern/kernel.asm	/^f01010f7:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01010fa	obj/kern/kernel.asm	/^f01010fa:	0f be c0             	movsbl %al,%eax$/;"	l
f01010fd	obj/kern/kernel.asm	/^f01010fd:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101100	obj/kern/kernel.asm	/^f0101100:	50                   	push   %eax$/;"	l
f0101101	obj/kern/kernel.asm	/^f0101101:	68 58 89 10 f0       	push   $0xf0108958$/;"	l
f0101106	obj/kern/kernel.asm	/^f0101106:	e8 22 61 00 00       	call   f010722d <strchr>$/;"	l
f010110b	obj/kern/kernel.asm	/^f010110b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010110e	obj/kern/kernel.asm	/^f010110e:	85 c0                	test   %eax,%eax$/;"	l
f0101110	obj/kern/kernel.asm	/^f0101110:	75 cc                	jne    f01010de <runcmd+0x1a>$/;"	l
f0101112	obj/kern/kernel.asm	/^f0101112:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101115	obj/kern/kernel.asm	/^f0101115:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0101118	obj/kern/kernel.asm	/^f0101118:	84 c0                	test   %al,%al$/;"	l
f010111a	obj/kern/kernel.asm	/^f010111a:	74 69                	je     f0101185 <runcmd+0xc1>$/;"	l
f010111c	obj/kern/kernel.asm	/^f010111c:	83 7d f4 0f          	cmpl   $0xf,-0xc(%ebp)$/;"	l
f0101120	obj/kern/kernel.asm	/^f0101120:	75 1c                	jne    f010113e <runcmd+0x7a>$/;"	l
f0101122	obj/kern/kernel.asm	/^f0101122:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101125	obj/kern/kernel.asm	/^f0101125:	6a 10                	push   $0x10$/;"	l
f0101127	obj/kern/kernel.asm	/^f0101127:	68 5d 89 10 f0       	push   $0xf010895d$/;"	l
f010112c	obj/kern/kernel.asm	/^f010112c:	e8 7d 38 00 00       	call   f01049ae <cprintf>$/;"	l
f0101131	obj/kern/kernel.asm	/^f0101131:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101134	obj/kern/kernel.asm	/^f0101134:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101139	obj/kern/kernel.asm	/^f0101139:	e9 dc 00 00 00       	jmp    f010121a <runcmd+0x156>$/;"	l
f010113e	obj/kern/kernel.asm	/^f010113e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101141	obj/kern/kernel.asm	/^f0101141:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0101144	obj/kern/kernel.asm	/^f0101144:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0101147	obj/kern/kernel.asm	/^f0101147:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010114a	obj/kern/kernel.asm	/^f010114a:	89 54 85 b0          	mov    %edx,-0x50(%ebp,%eax,4)$/;"	l
f010114e	obj/kern/kernel.asm	/^f010114e:	eb 04                	jmp    f0101154 <runcmd+0x90>$/;"	l
f0101150	obj/kern/kernel.asm	/^f0101150:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f0101154	obj/kern/kernel.asm	/^f0101154:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101157	obj/kern/kernel.asm	/^f0101157:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010115a	obj/kern/kernel.asm	/^f010115a:	84 c0                	test   %al,%al$/;"	l
f010115c	obj/kern/kernel.asm	/^f010115c:	0f 84 7a ff ff ff    	je     f01010dc <runcmd+0x18>$/;"	l
f0101162	obj/kern/kernel.asm	/^f0101162:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101165	obj/kern/kernel.asm	/^f0101165:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0101168	obj/kern/kernel.asm	/^f0101168:	0f be c0             	movsbl %al,%eax$/;"	l
f010116b	obj/kern/kernel.asm	/^f010116b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010116e	obj/kern/kernel.asm	/^f010116e:	50                   	push   %eax$/;"	l
f010116f	obj/kern/kernel.asm	/^f010116f:	68 58 89 10 f0       	push   $0xf0108958$/;"	l
f0101174	obj/kern/kernel.asm	/^f0101174:	e8 b4 60 00 00       	call   f010722d <strchr>$/;"	l
f0101179	obj/kern/kernel.asm	/^f0101179:	83 c4 10             	add    $0x10,%esp$/;"	l
f010117c	obj/kern/kernel.asm	/^f010117c:	85 c0                	test   %eax,%eax$/;"	l
f010117e	obj/kern/kernel.asm	/^f010117e:	74 d0                	je     f0101150 <runcmd+0x8c>$/;"	l
f0101180	obj/kern/kernel.asm	/^f0101180:	e9 57 ff ff ff       	jmp    f01010dc <runcmd+0x18>$/;"	l
f0101185	obj/kern/kernel.asm	/^f0101185:	90                   	nop$/;"	l
f0101186	obj/kern/kernel.asm	/^f0101186:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101189	obj/kern/kernel.asm	/^f0101189:	c7 44 85 b0 00 00 00 	movl   $0x0,-0x50(%ebp,%eax,4)$/;"	l
f0101190	obj/kern/kernel.asm	/^f0101190:	00 $/;"	l
f0101191	obj/kern/kernel.asm	/^f0101191:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0101195	obj/kern/kernel.asm	/^f0101195:	75 07                	jne    f010119e <runcmd+0xda>$/;"	l
f0101197	obj/kern/kernel.asm	/^f0101197:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010119c	obj/kern/kernel.asm	/^f010119c:	eb 7c                	jmp    f010121a <runcmd+0x156>$/;"	l
f010119e	obj/kern/kernel.asm	/^f010119e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f01011a5	obj/kern/kernel.asm	/^f01011a5:	eb 52                	jmp    f01011f9 <runcmd+0x135>$/;"	l
f01011a7	obj/kern/kernel.asm	/^f01011a7:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01011aa	obj/kern/kernel.asm	/^f01011aa:	89 d0                	mov    %edx,%eax$/;"	l
f01011ac	obj/kern/kernel.asm	/^f01011ac:	01 c0                	add    %eax,%eax$/;"	l
f01011ae	obj/kern/kernel.asm	/^f01011ae:	01 d0                	add    %edx,%eax$/;"	l
f01011b0	obj/kern/kernel.asm	/^f01011b0:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01011b3	obj/kern/kernel.asm	/^f01011b3:	05 20 55 12 f0       	add    $0xf0125520,%eax$/;"	l
f01011b8	obj/kern/kernel.asm	/^f01011b8:	8b 10                	mov    (%eax),%edx$/;"	l
f01011ba	obj/kern/kernel.asm	/^f01011ba:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
f01011bd	obj/kern/kernel.asm	/^f01011bd:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01011c0	obj/kern/kernel.asm	/^f01011c0:	52                   	push   %edx$/;"	l
f01011c1	obj/kern/kernel.asm	/^f01011c1:	50                   	push   %eax$/;"	l
f01011c2	obj/kern/kernel.asm	/^f01011c2:	e8 d1 5f 00 00       	call   f0107198 <strcmp>$/;"	l
f01011c7	obj/kern/kernel.asm	/^f01011c7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011ca	obj/kern/kernel.asm	/^f01011ca:	85 c0                	test   %eax,%eax$/;"	l
f01011cc	obj/kern/kernel.asm	/^f01011cc:	75 27                	jne    f01011f5 <runcmd+0x131>$/;"	l
f01011ce	obj/kern/kernel.asm	/^f01011ce:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01011d1	obj/kern/kernel.asm	/^f01011d1:	89 d0                	mov    %edx,%eax$/;"	l
f01011d3	obj/kern/kernel.asm	/^f01011d3:	01 c0                	add    %eax,%eax$/;"	l
f01011d5	obj/kern/kernel.asm	/^f01011d5:	01 d0                	add    %edx,%eax$/;"	l
f01011d7	obj/kern/kernel.asm	/^f01011d7:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01011da	obj/kern/kernel.asm	/^f01011da:	05 28 55 12 f0       	add    $0xf0125528,%eax$/;"	l
f01011df	obj/kern/kernel.asm	/^f01011df:	8b 00                	mov    (%eax),%eax$/;"	l
f01011e1	obj/kern/kernel.asm	/^f01011e1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01011e4	obj/kern/kernel.asm	/^f01011e4:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01011e7	obj/kern/kernel.asm	/^f01011e7:	8d 55 b0             	lea    -0x50(%ebp),%edx$/;"	l
f01011ea	obj/kern/kernel.asm	/^f01011ea:	52                   	push   %edx$/;"	l
f01011eb	obj/kern/kernel.asm	/^f01011eb:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f01011ee	obj/kern/kernel.asm	/^f01011ee:	ff d0                	call   *%eax$/;"	l
f01011f0	obj/kern/kernel.asm	/^f01011f0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01011f3	obj/kern/kernel.asm	/^f01011f3:	eb 25                	jmp    f010121a <runcmd+0x156>$/;"	l
f01011f5	obj/kern/kernel.asm	/^f01011f5:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
f01011f9	obj/kern/kernel.asm	/^f01011f9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01011fc	obj/kern/kernel.asm	/^f01011fc:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f01011ff	obj/kern/kernel.asm	/^f01011ff:	76 a6                	jbe    f01011a7 <runcmd+0xe3>$/;"	l
f0101201	obj/kern/kernel.asm	/^f0101201:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
f0101204	obj/kern/kernel.asm	/^f0101204:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101207	obj/kern/kernel.asm	/^f0101207:	50                   	push   %eax$/;"	l
f0101208	obj/kern/kernel.asm	/^f0101208:	68 7a 89 10 f0       	push   $0xf010897a$/;"	l
f010120d	obj/kern/kernel.asm	/^f010120d:	e8 9c 37 00 00       	call   f01049ae <cprintf>$/;"	l
f0101212	obj/kern/kernel.asm	/^f0101212:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101215	obj/kern/kernel.asm	/^f0101215:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010121a	obj/kern/kernel.asm	/^f010121a:	c9                   	leave  $/;"	l
f010121b	obj/kern/kernel.asm	/^f010121b:	c3                   	ret    $/;"	l
f010121c	obj/kern/kernel.asm	/^f010121c <monitor>:$/;"	l
f010121c	obj/kern/kernel.asm	/^f010121c:	55                   	push   %ebp$/;"	l
f010121d	obj/kern/kernel.asm	/^f010121d:	89 e5                	mov    %esp,%ebp$/;"	l
f010121f	obj/kern/kernel.asm	/^f010121f:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101222	obj/kern/kernel.asm	/^f0101222:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101225	obj/kern/kernel.asm	/^f0101225:	68 90 89 10 f0       	push   $0xf0108990$/;"	l
f010122a	obj/kern/kernel.asm	/^f010122a:	e8 7f 37 00 00       	call   f01049ae <cprintf>$/;"	l
f010122f	obj/kern/kernel.asm	/^f010122f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101232	obj/kern/kernel.asm	/^f0101232:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101235	obj/kern/kernel.asm	/^f0101235:	68 b4 89 10 f0       	push   $0xf01089b4$/;"	l
f010123a	obj/kern/kernel.asm	/^f010123a:	e8 6f 37 00 00       	call   f01049ae <cprintf>$/;"	l
f010123f	obj/kern/kernel.asm	/^f010123f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101242	obj/kern/kernel.asm	/^f0101242:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0101246	obj/kern/kernel.asm	/^f0101246:	74 0e                	je     f0101256 <monitor+0x3a>$/;"	l
f0101248	obj/kern/kernel.asm	/^f0101248:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010124b	obj/kern/kernel.asm	/^f010124b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010124e	obj/kern/kernel.asm	/^f010124e:	e8 2f 43 00 00       	call   f0105582 <print_trapframe>$/;"	l
f0101253	obj/kern/kernel.asm	/^f0101253:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101256	obj/kern/kernel.asm	/^f0101256:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101259	obj/kern/kernel.asm	/^f0101259:	6a 03                	push   $0x3$/;"	l
f010125b	obj/kern/kernel.asm	/^f010125b:	68 d9 89 10 f0       	push   $0xf01089d9$/;"	l
f0101260	obj/kern/kernel.asm	/^f0101260:	e8 49 37 00 00       	call   f01049ae <cprintf>$/;"	l
f0101265	obj/kern/kernel.asm	/^f0101265:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101268	obj/kern/kernel.asm	/^f0101268:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010126b	obj/kern/kernel.asm	/^f010126b:	68 e4 89 10 f0       	push   $0xf01089e4$/;"	l
f0101270	obj/kern/kernel.asm	/^f0101270:	e8 39 37 00 00       	call   f01049ae <cprintf>$/;"	l
f0101275	obj/kern/kernel.asm	/^f0101275:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101278	obj/kern/kernel.asm	/^f0101278:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010127b	obj/kern/kernel.asm	/^f010127b:	68 01 8a 10 f0       	push   $0xf0108a01$/;"	l
f0101280	obj/kern/kernel.asm	/^f0101280:	e8 cb 5c 00 00       	call   f0106f50 <readline>$/;"	l
f0101285	obj/kern/kernel.asm	/^f0101285:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101288	obj/kern/kernel.asm	/^f0101288:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f010128b	obj/kern/kernel.asm	/^f010128b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f010128f	obj/kern/kernel.asm	/^f010128f:	74 e7                	je     f0101278 <monitor+0x5c>$/;"	l
f0101291	obj/kern/kernel.asm	/^f0101291:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101294	obj/kern/kernel.asm	/^f0101294:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101297	obj/kern/kernel.asm	/^f0101297:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f010129a	obj/kern/kernel.asm	/^f010129a:	e8 25 fe ff ff       	call   f01010c4 <runcmd>$/;"	l
f010129f	obj/kern/kernel.asm	/^f010129f:	83 c4 10             	add    $0x10,%esp$/;"	l
f01012a2	obj/kern/kernel.asm	/^f01012a2:	85 c0                	test   %eax,%eax$/;"	l
f01012a4	obj/kern/kernel.asm	/^f01012a4:	78 02                	js     f01012a8 <monitor+0x8c>$/;"	l
f01012a6	obj/kern/kernel.asm	/^f01012a6:	eb d0                	jmp    f0101278 <monitor+0x5c>$/;"	l
f01012a8	obj/kern/kernel.asm	/^f01012a8:	90                   	nop$/;"	l
f01012a9	obj/kern/kernel.asm	/^f01012a9:	90                   	nop$/;"	l
f01012aa	obj/kern/kernel.asm	/^f01012aa:	c9                   	leave  $/;"	l
f01012ab	obj/kern/kernel.asm	/^f01012ab:	c3                   	ret    $/;"	l
f01012ac	obj/kern/kernel.asm	/^f01012ac <invlpg>:$/;"	l
f01012ac	obj/kern/kernel.asm	/^f01012ac:	55                   	push   %ebp$/;"	l
f01012ad	obj/kern/kernel.asm	/^f01012ad:	89 e5                	mov    %esp,%ebp$/;"	l
f01012af	obj/kern/kernel.asm	/^f01012af:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01012b2	obj/kern/kernel.asm	/^f01012b2:	0f 01 38             	invlpg (%eax)$/;"	l
f01012b5	obj/kern/kernel.asm	/^f01012b5:	90                   	nop$/;"	l
f01012b6	obj/kern/kernel.asm	/^f01012b6:	5d                   	pop    %ebp$/;"	l
f01012b7	obj/kern/kernel.asm	/^f01012b7:	c3                   	ret    $/;"	l
f01012b8	obj/kern/kernel.asm	/^f01012b8 <lcr0>:$/;"	l
f01012b8	obj/kern/kernel.asm	/^f01012b8:	55                   	push   %ebp$/;"	l
f01012b9	obj/kern/kernel.asm	/^f01012b9:	89 e5                	mov    %esp,%ebp$/;"	l
f01012bb	obj/kern/kernel.asm	/^f01012bb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01012be	obj/kern/kernel.asm	/^f01012be:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01012c1	obj/kern/kernel.asm	/^f01012c1:	90                   	nop$/;"	l
f01012c2	obj/kern/kernel.asm	/^f01012c2:	5d                   	pop    %ebp$/;"	l
f01012c3	obj/kern/kernel.asm	/^f01012c3:	c3                   	ret    $/;"	l
f01012c4	obj/kern/kernel.asm	/^f01012c4 <rcr0>:$/;"	l
f01012c4	obj/kern/kernel.asm	/^f01012c4:	55                   	push   %ebp$/;"	l
f01012c5	obj/kern/kernel.asm	/^f01012c5:	89 e5                	mov    %esp,%ebp$/;"	l
f01012c7	obj/kern/kernel.asm	/^f01012c7:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01012ca	obj/kern/kernel.asm	/^f01012ca:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01012cd	obj/kern/kernel.asm	/^f01012cd:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f01012d0	obj/kern/kernel.asm	/^f01012d0:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f01012d3	obj/kern/kernel.asm	/^f01012d3:	c9                   	leave  $/;"	l
f01012d4	obj/kern/kernel.asm	/^f01012d4:	c3                   	ret    $/;"	l
f01012d5	obj/kern/kernel.asm	/^f01012d5 <lcr3>:$/;"	l
f01012d5	obj/kern/kernel.asm	/^f01012d5:	55                   	push   %ebp$/;"	l
f01012d6	obj/kern/kernel.asm	/^f01012d6:	89 e5                	mov    %esp,%ebp$/;"	l
f01012d8	obj/kern/kernel.asm	/^f01012d8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01012db	obj/kern/kernel.asm	/^f01012db:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f01012de	obj/kern/kernel.asm	/^f01012de:	90                   	nop$/;"	l
f01012df	obj/kern/kernel.asm	/^f01012df:	5d                   	pop    %ebp$/;"	l
f01012e0	obj/kern/kernel.asm	/^f01012e0:	c3                   	ret    $/;"	l
f01012e1	obj/kern/kernel.asm	/^f01012e1 <lcr4>:$/;"	l
f01012e1	obj/kern/kernel.asm	/^f01012e1:	55                   	push   %ebp$/;"	l
f01012e2	obj/kern/kernel.asm	/^f01012e2:	89 e5                	mov    %esp,%ebp$/;"	l
f01012e4	obj/kern/kernel.asm	/^f01012e4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01012e7	obj/kern/kernel.asm	/^f01012e7:	0f 22 e0             	mov    %eax,%cr4$/;"	l
f01012ea	obj/kern/kernel.asm	/^f01012ea:	90                   	nop$/;"	l
f01012eb	obj/kern/kernel.asm	/^f01012eb:	5d                   	pop    %ebp$/;"	l
f01012ec	obj/kern/kernel.asm	/^f01012ec:	c3                   	ret    $/;"	l
f01012ed	obj/kern/kernel.asm	/^f01012ed <rcr4>:$/;"	l
f01012ed	obj/kern/kernel.asm	/^f01012ed:	55                   	push   %ebp$/;"	l
f01012ee	obj/kern/kernel.asm	/^f01012ee:	89 e5                	mov    %esp,%ebp$/;"	l
f01012f0	obj/kern/kernel.asm	/^f01012f0:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01012f3	obj/kern/kernel.asm	/^f01012f3:	0f 20 e0             	mov    %cr4,%eax$/;"	l
f01012f6	obj/kern/kernel.asm	/^f01012f6:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f01012f9	obj/kern/kernel.asm	/^f01012f9:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f01012fc	obj/kern/kernel.asm	/^f01012fc:	c9                   	leave  $/;"	l
f01012fd	obj/kern/kernel.asm	/^f01012fd:	c3                   	ret    $/;"	l
f01012fe	obj/kern/kernel.asm	/^f01012fe <_paddr>:$/;"	l
f01012fe	obj/kern/kernel.asm	/^f01012fe:	55                   	push   %ebp$/;"	l
f01012ff	obj/kern/kernel.asm	/^f01012ff:	89 e5                	mov    %esp,%ebp$/;"	l
f0101301	obj/kern/kernel.asm	/^f0101301:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101304	obj/kern/kernel.asm	/^f0101304:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101307	obj/kern/kernel.asm	/^f0101307:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f010130c	obj/kern/kernel.asm	/^f010130c:	77 13                	ja     f0101321 <_paddr+0x23>$/;"	l
f010130e	obj/kern/kernel.asm	/^f010130e:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0101311	obj/kern/kernel.asm	/^f0101311:	68 08 8a 10 f0       	push   $0xf0108a08$/;"	l
f0101316	obj/kern/kernel.asm	/^f0101316:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101319	obj/kern/kernel.asm	/^f0101319:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f010131c	obj/kern/kernel.asm	/^f010131c:	e8 bf ef ff ff       	call   f01002e0 <_panic>$/;"	l
f0101321	obj/kern/kernel.asm	/^f0101321:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101324	obj/kern/kernel.asm	/^f0101324:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0101329	obj/kern/kernel.asm	/^f0101329:	c9                   	leave  $/;"	l
f010132a	obj/kern/kernel.asm	/^f010132a:	c3                   	ret    $/;"	l
f010132b	obj/kern/kernel.asm	/^f010132b <_kaddr>:$/;"	l
f010132b	obj/kern/kernel.asm	/^f010132b:	55                   	push   %ebp$/;"	l
f010132c	obj/kern/kernel.asm	/^f010132c:	89 e5                	mov    %esp,%ebp$/;"	l
f010132e	obj/kern/kernel.asm	/^f010132e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101331	obj/kern/kernel.asm	/^f0101331:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101334	obj/kern/kernel.asm	/^f0101334:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101337	obj/kern/kernel.asm	/^f0101337:	89 c2                	mov    %eax,%edx$/;"	l
f0101339	obj/kern/kernel.asm	/^f0101339:	a1 e8 0e 23 f0       	mov    0xf0230ee8,%eax$/;"	l
f010133e	obj/kern/kernel.asm	/^f010133e:	39 c2                	cmp    %eax,%edx$/;"	l
f0101340	obj/kern/kernel.asm	/^f0101340:	72 13                	jb     f0101355 <_kaddr+0x2a>$/;"	l
f0101342	obj/kern/kernel.asm	/^f0101342:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0101345	obj/kern/kernel.asm	/^f0101345:	68 2c 8a 10 f0       	push   $0xf0108a2c$/;"	l
f010134a	obj/kern/kernel.asm	/^f010134a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010134d	obj/kern/kernel.asm	/^f010134d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101350	obj/kern/kernel.asm	/^f0101350:	e8 8b ef ff ff       	call   f01002e0 <_panic>$/;"	l
f0101355	obj/kern/kernel.asm	/^f0101355:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101358	obj/kern/kernel.asm	/^f0101358:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010135d	obj/kern/kernel.asm	/^f010135d:	c9                   	leave  $/;"	l
f010135e	obj/kern/kernel.asm	/^f010135e:	c3                   	ret    $/;"	l
f010135f	obj/kern/kernel.asm	/^f010135f <page2pa>:$/;"	l
f010135f	obj/kern/kernel.asm	/^f010135f:	55                   	push   %ebp$/;"	l
f0101360	obj/kern/kernel.asm	/^f0101360:	89 e5                	mov    %esp,%ebp$/;"	l
f0101362	obj/kern/kernel.asm	/^f0101362:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101365	obj/kern/kernel.asm	/^f0101365:	8b 15 f0 0e 23 f0    	mov    0xf0230ef0,%edx$/;"	l
f010136b	obj/kern/kernel.asm	/^f010136b:	29 d0                	sub    %edx,%eax$/;"	l
f010136d	obj/kern/kernel.asm	/^f010136d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0101370	obj/kern/kernel.asm	/^f0101370:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0101373	obj/kern/kernel.asm	/^f0101373:	5d                   	pop    %ebp$/;"	l
f0101374	obj/kern/kernel.asm	/^f0101374:	c3                   	ret    $/;"	l
f0101375	obj/kern/kernel.asm	/^f0101375 <pa2page>:$/;"	l
f0101375	obj/kern/kernel.asm	/^f0101375:	55                   	push   %ebp$/;"	l
f0101376	obj/kern/kernel.asm	/^f0101376:	89 e5                	mov    %esp,%ebp$/;"	l
f0101378	obj/kern/kernel.asm	/^f0101378:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010137b	obj/kern/kernel.asm	/^f010137b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010137e	obj/kern/kernel.asm	/^f010137e:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101381	obj/kern/kernel.asm	/^f0101381:	89 c2                	mov    %eax,%edx$/;"	l
f0101383	obj/kern/kernel.asm	/^f0101383:	a1 e8 0e 23 f0       	mov    0xf0230ee8,%eax$/;"	l
f0101388	obj/kern/kernel.asm	/^f0101388:	39 c2                	cmp    %eax,%edx$/;"	l
f010138a	obj/kern/kernel.asm	/^f010138a:	72 14                	jb     f01013a0 <pa2page+0x2b>$/;"	l
f010138c	obj/kern/kernel.asm	/^f010138c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010138f	obj/kern/kernel.asm	/^f010138f:	68 50 8a 10 f0       	push   $0xf0108a50$/;"	l
f0101394	obj/kern/kernel.asm	/^f0101394:	6a 51                	push   $0x51$/;"	l
f0101396	obj/kern/kernel.asm	/^f0101396:	68 6f 8a 10 f0       	push   $0xf0108a6f$/;"	l
f010139b	obj/kern/kernel.asm	/^f010139b:	e8 40 ef ff ff       	call   f01002e0 <_panic>$/;"	l
f01013a0	obj/kern/kernel.asm	/^f01013a0:	a1 f0 0e 23 f0       	mov    0xf0230ef0,%eax$/;"	l
f01013a5	obj/kern/kernel.asm	/^f01013a5:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01013a8	obj/kern/kernel.asm	/^f01013a8:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f01013ab	obj/kern/kernel.asm	/^f01013ab:	c1 e2 03             	shl    $0x3,%edx$/;"	l
f01013ae	obj/kern/kernel.asm	/^f01013ae:	01 d0                	add    %edx,%eax$/;"	l
f01013b0	obj/kern/kernel.asm	/^f01013b0:	c9                   	leave  $/;"	l
f01013b1	obj/kern/kernel.asm	/^f01013b1:	c3                   	ret    $/;"	l
f01013b2	obj/kern/kernel.asm	/^f01013b2 <page2kva>:$/;"	l
f01013b2	obj/kern/kernel.asm	/^f01013b2:	55                   	push   %ebp$/;"	l
f01013b3	obj/kern/kernel.asm	/^f01013b3:	89 e5                	mov    %esp,%ebp$/;"	l
f01013b5	obj/kern/kernel.asm	/^f01013b5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01013b8	obj/kern/kernel.asm	/^f01013b8:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01013bb	obj/kern/kernel.asm	/^f01013bb:	e8 9f ff ff ff       	call   f010135f <page2pa>$/;"	l
f01013c0	obj/kern/kernel.asm	/^f01013c0:	83 c4 04             	add    $0x4,%esp$/;"	l
f01013c3	obj/kern/kernel.asm	/^f01013c3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01013c6	obj/kern/kernel.asm	/^f01013c6:	50                   	push   %eax$/;"	l
f01013c7	obj/kern/kernel.asm	/^f01013c7:	6a 58                	push   $0x58$/;"	l
f01013c9	obj/kern/kernel.asm	/^f01013c9:	68 6f 8a 10 f0       	push   $0xf0108a6f$/;"	l
f01013ce	obj/kern/kernel.asm	/^f01013ce:	e8 58 ff ff ff       	call   f010132b <_kaddr>$/;"	l
f01013d3	obj/kern/kernel.asm	/^f01013d3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01013d6	obj/kern/kernel.asm	/^f01013d6:	c9                   	leave  $/;"	l
f01013d7	obj/kern/kernel.asm	/^f01013d7:	c3                   	ret    $/;"	l
f01013d8	obj/kern/kernel.asm	/^f01013d8 <nvram_read>:$/;"	l
f01013d8	obj/kern/kernel.asm	/^f01013d8:	55                   	push   %ebp$/;"	l
f01013d9	obj/kern/kernel.asm	/^f01013d9:	89 e5                	mov    %esp,%ebp$/;"	l
f01013db	obj/kern/kernel.asm	/^f01013db:	53                   	push   %ebx$/;"	l
f01013dc	obj/kern/kernel.asm	/^f01013dc:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01013df	obj/kern/kernel.asm	/^f01013df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01013e2	obj/kern/kernel.asm	/^f01013e2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01013e5	obj/kern/kernel.asm	/^f01013e5:	50                   	push   %eax$/;"	l
f01013e6	obj/kern/kernel.asm	/^f01013e6:	e8 6b 33 00 00       	call   f0104756 <mc146818_read>$/;"	l
f01013eb	obj/kern/kernel.asm	/^f01013eb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01013ee	obj/kern/kernel.asm	/^f01013ee:	89 c3                	mov    %eax,%ebx$/;"	l
f01013f0	obj/kern/kernel.asm	/^f01013f0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01013f3	obj/kern/kernel.asm	/^f01013f3:	83 c0 01             	add    $0x1,%eax$/;"	l
f01013f6	obj/kern/kernel.asm	/^f01013f6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01013f9	obj/kern/kernel.asm	/^f01013f9:	50                   	push   %eax$/;"	l
f01013fa	obj/kern/kernel.asm	/^f01013fa:	e8 57 33 00 00       	call   f0104756 <mc146818_read>$/;"	l
f01013ff	obj/kern/kernel.asm	/^f01013ff:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101402	obj/kern/kernel.asm	/^f0101402:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0101405	obj/kern/kernel.asm	/^f0101405:	09 d8                	or     %ebx,%eax$/;"	l
f0101407	obj/kern/kernel.asm	/^f0101407:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f010140a	obj/kern/kernel.asm	/^f010140a:	c9                   	leave  $/;"	l
f010140b	obj/kern/kernel.asm	/^f010140b:	c3                   	ret    $/;"	l
f010140c	obj/kern/kernel.asm	/^f010140c <i386_detect_memory>:$/;"	l
f010140c	obj/kern/kernel.asm	/^f010140c:	55                   	push   %ebp$/;"	l
f010140d	obj/kern/kernel.asm	/^f010140d:	89 e5                	mov    %esp,%ebp$/;"	l
f010140f	obj/kern/kernel.asm	/^f010140f:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101412	obj/kern/kernel.asm	/^f0101412:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101415	obj/kern/kernel.asm	/^f0101415:	6a 15                	push   $0x15$/;"	l
f0101417	obj/kern/kernel.asm	/^f0101417:	e8 bc ff ff ff       	call   f01013d8 <nvram_read>$/;"	l
f010141c	obj/kern/kernel.asm	/^f010141c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010141f	obj/kern/kernel.asm	/^f010141f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0101422	obj/kern/kernel.asm	/^f0101422:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101425	obj/kern/kernel.asm	/^f0101425:	6a 17                	push   $0x17$/;"	l
f0101427	obj/kern/kernel.asm	/^f0101427:	e8 ac ff ff ff       	call   f01013d8 <nvram_read>$/;"	l
f010142c	obj/kern/kernel.asm	/^f010142c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010142f	obj/kern/kernel.asm	/^f010142f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0101432	obj/kern/kernel.asm	/^f0101432:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101435	obj/kern/kernel.asm	/^f0101435:	6a 34                	push   $0x34$/;"	l
f0101437	obj/kern/kernel.asm	/^f0101437:	e8 9c ff ff ff       	call   f01013d8 <nvram_read>$/;"	l
f010143c	obj/kern/kernel.asm	/^f010143c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010143f	obj/kern/kernel.asm	/^f010143f:	c1 e0 06             	shl    $0x6,%eax$/;"	l
f0101442	obj/kern/kernel.asm	/^f0101442:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0101445	obj/kern/kernel.asm	/^f0101445:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0101449	obj/kern/kernel.asm	/^f0101449:	74 0d                	je     f0101458 <i386_detect_memory+0x4c>$/;"	l
f010144b	obj/kern/kernel.asm	/^f010144b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f010144e	obj/kern/kernel.asm	/^f010144e:	05 00 40 00 00       	add    $0x4000,%eax$/;"	l
f0101453	obj/kern/kernel.asm	/^f0101453:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101456	obj/kern/kernel.asm	/^f0101456:	eb 19                	jmp    f0101471 <i386_detect_memory+0x65>$/;"	l
f0101458	obj/kern/kernel.asm	/^f0101458:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f010145c	obj/kern/kernel.asm	/^f010145c:	74 0d                	je     f010146b <i386_detect_memory+0x5f>$/;"	l
f010145e	obj/kern/kernel.asm	/^f010145e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0101461	obj/kern/kernel.asm	/^f0101461:	05 00 04 00 00       	add    $0x400,%eax$/;"	l
f0101466	obj/kern/kernel.asm	/^f0101466:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101469	obj/kern/kernel.asm	/^f0101469:	eb 06                	jmp    f0101471 <i386_detect_memory+0x65>$/;"	l
f010146b	obj/kern/kernel.asm	/^f010146b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010146e	obj/kern/kernel.asm	/^f010146e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101471	obj/kern/kernel.asm	/^f0101471:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101474	obj/kern/kernel.asm	/^f0101474:	c1 e8 02             	shr    $0x2,%eax$/;"	l
f0101477	obj/kern/kernel.asm	/^f0101477:	a3 e8 0e 23 f0       	mov    %eax,0xf0230ee8$/;"	l
f010147c	obj/kern/kernel.asm	/^f010147c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010147f	obj/kern/kernel.asm	/^f010147f:	c1 e8 02             	shr    $0x2,%eax$/;"	l
f0101482	obj/kern/kernel.asm	/^f0101482:	a3 2c 02 23 f0       	mov    %eax,0xf023022c$/;"	l
f0101487	obj/kern/kernel.asm	/^f0101487:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010148a	obj/kern/kernel.asm	/^f010148a:	2b 45 f0             	sub    -0x10(%ebp),%eax$/;"	l
f010148d	obj/kern/kernel.asm	/^f010148d:	50                   	push   %eax$/;"	l
f010148e	obj/kern/kernel.asm	/^f010148e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f0101491	obj/kern/kernel.asm	/^f0101491:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0101494	obj/kern/kernel.asm	/^f0101494:	68 80 8a 10 f0       	push   $0xf0108a80$/;"	l
f0101499	obj/kern/kernel.asm	/^f0101499:	e8 10 35 00 00       	call   f01049ae <cprintf>$/;"	l
f010149e	obj/kern/kernel.asm	/^f010149e:	83 c4 10             	add    $0x10,%esp$/;"	l
f01014a1	obj/kern/kernel.asm	/^f01014a1:	90                   	nop$/;"	l
f01014a2	obj/kern/kernel.asm	/^f01014a2:	c9                   	leave  $/;"	l
f01014a3	obj/kern/kernel.asm	/^f01014a3:	c3                   	ret    $/;"	l
f01014a4	obj/kern/kernel.asm	/^f01014a4 <boot_alloc>:$/;"	l
f01014a4	obj/kern/kernel.asm	/^f01014a4:	55                   	push   %ebp$/;"	l
f01014a5	obj/kern/kernel.asm	/^f01014a5:	89 e5                	mov    %esp,%ebp$/;"	l
f01014a7	obj/kern/kernel.asm	/^f01014a7:	83 ec 20             	sub    $0x20,%esp$/;"	l
f01014aa	obj/kern/kernel.asm	/^f01014aa:	a1 38 02 23 f0       	mov    0xf0230238,%eax$/;"	l
f01014af	obj/kern/kernel.asm	/^f01014af:	85 c0                	test   %eax,%eax$/;"	l
f01014b1	obj/kern/kernel.asm	/^f01014b1:	75 2c                	jne    f01014df <boot_alloc+0x3b>$/;"	l
f01014b3	obj/kern/kernel.asm	/^f01014b3:	c7 45 fc 00 10 00 00 	movl   $0x1000,-0x4(%ebp)$/;"	l
f01014ba	obj/kern/kernel.asm	/^f01014ba:	b8 08 20 27 f0       	mov    $0xf0272008,%eax$/;"	l
f01014bf	obj/kern/kernel.asm	/^f01014bf:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f01014c2	obj/kern/kernel.asm	/^f01014c2:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f01014c5	obj/kern/kernel.asm	/^f01014c5:	01 d0                	add    %edx,%eax$/;"	l
f01014c7	obj/kern/kernel.asm	/^f01014c7:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
f01014ca	obj/kern/kernel.asm	/^f01014ca:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f01014cd	obj/kern/kernel.asm	/^f01014cd:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01014d2	obj/kern/kernel.asm	/^f01014d2:	f7 75 fc             	divl   -0x4(%ebp)$/;"	l
f01014d5	obj/kern/kernel.asm	/^f01014d5:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f01014d8	obj/kern/kernel.asm	/^f01014d8:	29 d0                	sub    %edx,%eax$/;"	l
f01014da	obj/kern/kernel.asm	/^f01014da:	a3 38 02 23 f0       	mov    %eax,0xf0230238$/;"	l
f01014df	obj/kern/kernel.asm	/^f01014df:	a1 38 02 23 f0       	mov    0xf0230238,%eax$/;"	l
f01014e4	obj/kern/kernel.asm	/^f01014e4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01014e7	obj/kern/kernel.asm	/^f01014e7:	c7 45 f0 00 10 00 00 	movl   $0x1000,-0x10(%ebp)$/;"	l
f01014ee	obj/kern/kernel.asm	/^f01014ee:	8b 15 38 02 23 f0    	mov    0xf0230238,%edx$/;"	l
f01014f4	obj/kern/kernel.asm	/^f01014f4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01014f7	obj/kern/kernel.asm	/^f01014f7:	01 d0                	add    %edx,%eax$/;"	l
f01014f9	obj/kern/kernel.asm	/^f01014f9:	89 c2                	mov    %eax,%edx$/;"	l
f01014fb	obj/kern/kernel.asm	/^f01014fb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01014fe	obj/kern/kernel.asm	/^f01014fe:	01 d0                	add    %edx,%eax$/;"	l
f0101500	obj/kern/kernel.asm	/^f0101500:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0101503	obj/kern/kernel.asm	/^f0101503:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0101506	obj/kern/kernel.asm	/^f0101506:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0101509	obj/kern/kernel.asm	/^f0101509:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010150e	obj/kern/kernel.asm	/^f010150e:	f7 75 f0             	divl   -0x10(%ebp)$/;"	l
f0101511	obj/kern/kernel.asm	/^f0101511:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0101514	obj/kern/kernel.asm	/^f0101514:	29 d0                	sub    %edx,%eax$/;"	l
f0101516	obj/kern/kernel.asm	/^f0101516:	a3 38 02 23 f0       	mov    %eax,0xf0230238$/;"	l
f010151b	obj/kern/kernel.asm	/^f010151b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010151e	obj/kern/kernel.asm	/^f010151e:	c9                   	leave  $/;"	l
f010151f	obj/kern/kernel.asm	/^f010151f:	c3                   	ret    $/;"	l
f0101520	obj/kern/kernel.asm	/^f0101520 <mem_init>:$/;"	l
f0101520	obj/kern/kernel.asm	/^f0101520:	55                   	push   %ebp$/;"	l
f0101521	obj/kern/kernel.asm	/^f0101521:	89 e5                	mov    %esp,%ebp$/;"	l
f0101523	obj/kern/kernel.asm	/^f0101523:	53                   	push   %ebx$/;"	l
f0101524	obj/kern/kernel.asm	/^f0101524:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0101527	obj/kern/kernel.asm	/^f0101527:	e8 e0 fe ff ff       	call   f010140c <i386_detect_memory>$/;"	l
f010152c	obj/kern/kernel.asm	/^f010152c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010152f	obj/kern/kernel.asm	/^f010152f:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101534	obj/kern/kernel.asm	/^f0101534:	e8 6b ff ff ff       	call   f01014a4 <boot_alloc>$/;"	l
f0101539	obj/kern/kernel.asm	/^f0101539:	83 c4 10             	add    $0x10,%esp$/;"	l
f010153c	obj/kern/kernel.asm	/^f010153c:	a3 ec 0e 23 f0       	mov    %eax,0xf0230eec$/;"	l
f0101541	obj/kern/kernel.asm	/^f0101541:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0101546	obj/kern/kernel.asm	/^f0101546:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101549	obj/kern/kernel.asm	/^f0101549:	68 00 10 00 00       	push   $0x1000$/;"	l
f010154e	obj/kern/kernel.asm	/^f010154e:	6a 00                	push   $0x0$/;"	l
f0101550	obj/kern/kernel.asm	/^f0101550:	50                   	push   %eax$/;"	l
f0101551	obj/kern/kernel.asm	/^f0101551:	e8 39 5d 00 00       	call   f010728f <memset>$/;"	l
f0101556	obj/kern/kernel.asm	/^f0101556:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101559	obj/kern/kernel.asm	/^f0101559:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f010155e	obj/kern/kernel.asm	/^f010155e:	8d 98 f4 0e 00 00    	lea    0xef4(%eax),%ebx$/;"	l
f0101564	obj/kern/kernel.asm	/^f0101564:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0101569	obj/kern/kernel.asm	/^f0101569:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010156c	obj/kern/kernel.asm	/^f010156c:	50                   	push   %eax$/;"	l
f010156d	obj/kern/kernel.asm	/^f010156d:	68 95 00 00 00       	push   $0x95$/;"	l
f0101572	obj/kern/kernel.asm	/^f0101572:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0101577	obj/kern/kernel.asm	/^f0101577:	e8 82 fd ff ff       	call   f01012fe <_paddr>$/;"	l
f010157c	obj/kern/kernel.asm	/^f010157c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010157f	obj/kern/kernel.asm	/^f010157f:	83 c8 05             	or     $0x5,%eax$/;"	l
f0101582	obj/kern/kernel.asm	/^f0101582:	89 03                	mov    %eax,(%ebx)$/;"	l
f0101584	obj/kern/kernel.asm	/^f0101584:	a1 e8 0e 23 f0       	mov    0xf0230ee8,%eax$/;"	l
f0101589	obj/kern/kernel.asm	/^f0101589:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f010158c	obj/kern/kernel.asm	/^f010158c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010158f	obj/kern/kernel.asm	/^f010158f:	50                   	push   %eax$/;"	l
f0101590	obj/kern/kernel.asm	/^f0101590:	e8 0f ff ff ff       	call   f01014a4 <boot_alloc>$/;"	l
f0101595	obj/kern/kernel.asm	/^f0101595:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101598	obj/kern/kernel.asm	/^f0101598:	a3 f0 0e 23 f0       	mov    %eax,0xf0230ef0$/;"	l
f010159d	obj/kern/kernel.asm	/^f010159d:	a1 e8 0e 23 f0       	mov    0xf0230ee8,%eax$/;"	l
f01015a2	obj/kern/kernel.asm	/^f01015a2:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f01015a9	obj/kern/kernel.asm	/^f01015a9:	a1 f0 0e 23 f0       	mov    0xf0230ef0,%eax$/;"	l
f01015ae	obj/kern/kernel.asm	/^f01015ae:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01015b1	obj/kern/kernel.asm	/^f01015b1:	52                   	push   %edx$/;"	l
f01015b2	obj/kern/kernel.asm	/^f01015b2:	6a 00                	push   $0x0$/;"	l
f01015b4	obj/kern/kernel.asm	/^f01015b4:	50                   	push   %eax$/;"	l
f01015b5	obj/kern/kernel.asm	/^f01015b5:	e8 d5 5c 00 00       	call   f010728f <memset>$/;"	l
f01015ba	obj/kern/kernel.asm	/^f01015ba:	83 c4 10             	add    $0x10,%esp$/;"	l
f01015bd	obj/kern/kernel.asm	/^f01015bd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01015c0	obj/kern/kernel.asm	/^f01015c0:	68 00 f0 01 00       	push   $0x1f000$/;"	l
f01015c5	obj/kern/kernel.asm	/^f01015c5:	e8 da fe ff ff       	call   f01014a4 <boot_alloc>$/;"	l
f01015ca	obj/kern/kernel.asm	/^f01015ca:	83 c4 10             	add    $0x10,%esp$/;"	l
f01015cd	obj/kern/kernel.asm	/^f01015cd:	a3 3c 02 23 f0       	mov    %eax,0xf023023c$/;"	l
f01015d2	obj/kern/kernel.asm	/^f01015d2:	a1 3c 02 23 f0       	mov    0xf023023c,%eax$/;"	l
f01015d7	obj/kern/kernel.asm	/^f01015d7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01015da	obj/kern/kernel.asm	/^f01015da:	68 00 f0 01 00       	push   $0x1f000$/;"	l
f01015df	obj/kern/kernel.asm	/^f01015df:	6a 00                	push   $0x0$/;"	l
f01015e1	obj/kern/kernel.asm	/^f01015e1:	50                   	push   %eax$/;"	l
f01015e2	obj/kern/kernel.asm	/^f01015e2:	e8 a8 5c 00 00       	call   f010728f <memset>$/;"	l
f01015e7	obj/kern/kernel.asm	/^f01015e7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01015ea	obj/kern/kernel.asm	/^f01015ea:	e8 fd 01 00 00       	call   f01017ec <page_init>$/;"	l
f01015ef	obj/kern/kernel.asm	/^f01015ef:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01015f2	obj/kern/kernel.asm	/^f01015f2:	6a 01                	push   $0x1$/;"	l
f01015f4	obj/kern/kernel.asm	/^f01015f4:	e8 f1 07 00 00       	call   f0101dea <check_page_free_list>$/;"	l
f01015f9	obj/kern/kernel.asm	/^f01015f9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01015fc	obj/kern/kernel.asm	/^f01015fc:	e8 3f 0b 00 00       	call   f0102140 <check_page_alloc>$/;"	l
f0101601	obj/kern/kernel.asm	/^f0101601:	e8 c1 14 00 00       	call   f0102ac7 <check_page>$/;"	l
f0101606	obj/kern/kernel.asm	/^f0101606:	a1 f0 0e 23 f0       	mov    0xf0230ef0,%eax$/;"	l
f010160b	obj/kern/kernel.asm	/^f010160b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010160e	obj/kern/kernel.asm	/^f010160e:	50                   	push   %eax$/;"	l
f010160f	obj/kern/kernel.asm	/^f010160f:	68 bf 00 00 00       	push   $0xbf$/;"	l
f0101614	obj/kern/kernel.asm	/^f0101614:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0101619	obj/kern/kernel.asm	/^f0101619:	e8 e0 fc ff ff       	call   f01012fe <_paddr>$/;"	l
f010161e	obj/kern/kernel.asm	/^f010161e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101621	obj/kern/kernel.asm	/^f0101621:	89 c1                	mov    %eax,%ecx$/;"	l
f0101623	obj/kern/kernel.asm	/^f0101623:	a1 e8 0e 23 f0       	mov    0xf0230ee8,%eax$/;"	l
f0101628	obj/kern/kernel.asm	/^f0101628:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f010162f	obj/kern/kernel.asm	/^f010162f:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0101634	obj/kern/kernel.asm	/^f0101634:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101637	obj/kern/kernel.asm	/^f0101637:	6a 05                	push   $0x5$/;"	l
f0101639	obj/kern/kernel.asm	/^f0101639:	51                   	push   %ecx$/;"	l
f010163a	obj/kern/kernel.asm	/^f010163a:	52                   	push   %edx$/;"	l
f010163b	obj/kern/kernel.asm	/^f010163b:	68 00 00 00 ef       	push   $0xef000000$/;"	l
f0101640	obj/kern/kernel.asm	/^f0101640:	50                   	push   %eax$/;"	l
f0101641	obj/kern/kernel.asm	/^f0101641:	e8 fb 03 00 00       	call   f0101a41 <boot_map_region>$/;"	l
f0101646	obj/kern/kernel.asm	/^f0101646:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101649	obj/kern/kernel.asm	/^f0101649:	a1 3c 02 23 f0       	mov    0xf023023c,%eax$/;"	l
f010164e	obj/kern/kernel.asm	/^f010164e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101651	obj/kern/kernel.asm	/^f0101651:	50                   	push   %eax$/;"	l
f0101652	obj/kern/kernel.asm	/^f0101652:	68 c9 00 00 00       	push   $0xc9$/;"	l
f0101657	obj/kern/kernel.asm	/^f0101657:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f010165c	obj/kern/kernel.asm	/^f010165c:	e8 9d fc ff ff       	call   f01012fe <_paddr>$/;"	l
f0101661	obj/kern/kernel.asm	/^f0101661:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101664	obj/kern/kernel.asm	/^f0101664:	89 c2                	mov    %eax,%edx$/;"	l
f0101666	obj/kern/kernel.asm	/^f0101666:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f010166b	obj/kern/kernel.asm	/^f010166b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010166e	obj/kern/kernel.asm	/^f010166e:	6a 05                	push   $0x5$/;"	l
f0101670	obj/kern/kernel.asm	/^f0101670:	52                   	push   %edx$/;"	l
f0101671	obj/kern/kernel.asm	/^f0101671:	68 00 f0 01 00       	push   $0x1f000$/;"	l
f0101676	obj/kern/kernel.asm	/^f0101676:	68 00 00 c0 ee       	push   $0xeec00000$/;"	l
f010167b	obj/kern/kernel.asm	/^f010167b:	50                   	push   %eax$/;"	l
f010167c	obj/kern/kernel.asm	/^f010167c:	e8 c0 03 00 00       	call   f0101a41 <boot_map_region>$/;"	l
f0101681	obj/kern/kernel.asm	/^f0101681:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101684	obj/kern/kernel.asm	/^f0101684:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101687	obj/kern/kernel.asm	/^f0101687:	68 00 b0 11 f0       	push   $0xf011b000$/;"	l
f010168c	obj/kern/kernel.asm	/^f010168c:	68 d7 00 00 00       	push   $0xd7$/;"	l
f0101691	obj/kern/kernel.asm	/^f0101691:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0101696	obj/kern/kernel.asm	/^f0101696:	e8 63 fc ff ff       	call   f01012fe <_paddr>$/;"	l
f010169b	obj/kern/kernel.asm	/^f010169b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010169e	obj/kern/kernel.asm	/^f010169e:	89 c2                	mov    %eax,%edx$/;"	l
f01016a0	obj/kern/kernel.asm	/^f01016a0:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f01016a5	obj/kern/kernel.asm	/^f01016a5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01016a8	obj/kern/kernel.asm	/^f01016a8:	6a 03                	push   $0x3$/;"	l
f01016aa	obj/kern/kernel.asm	/^f01016aa:	52                   	push   %edx$/;"	l
f01016ab	obj/kern/kernel.asm	/^f01016ab:	68 00 80 00 00       	push   $0x8000$/;"	l
f01016b0	obj/kern/kernel.asm	/^f01016b0:	68 00 80 ff ef       	push   $0xefff8000$/;"	l
f01016b5	obj/kern/kernel.asm	/^f01016b5:	50                   	push   %eax$/;"	l
f01016b6	obj/kern/kernel.asm	/^f01016b6:	e8 86 03 00 00       	call   f0101a41 <boot_map_region>$/;"	l
f01016bb	obj/kern/kernel.asm	/^f01016bb:	83 c4 20             	add    $0x20,%esp$/;"	l
f01016be	obj/kern/kernel.asm	/^f01016be:	e8 2a fc ff ff       	call   f01012ed <rcr4>$/;"	l
f01016c3	obj/kern/kernel.asm	/^f01016c3:	83 c8 10             	or     $0x10,%eax$/;"	l
f01016c6	obj/kern/kernel.asm	/^f01016c6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01016c9	obj/kern/kernel.asm	/^f01016c9:	50                   	push   %eax$/;"	l
f01016ca	obj/kern/kernel.asm	/^f01016ca:	e8 12 fc ff ff       	call   f01012e1 <lcr4>$/;"	l
f01016cf	obj/kern/kernel.asm	/^f01016cf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01016d2	obj/kern/kernel.asm	/^f01016d2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01016d9	obj/kern/kernel.asm	/^f01016d9:	eb 2d                	jmp    f0101708 <mem_init+0x1e8>$/;"	l
f01016db	obj/kern/kernel.asm	/^f01016db:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01016de	obj/kern/kernel.asm	/^f01016de:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f01016e1	obj/kern/kernel.asm	/^f01016e1:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01016e6	obj/kern/kernel.asm	/^f01016e6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01016e9	obj/kern/kernel.asm	/^f01016e9:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f01016ee	obj/kern/kernel.asm	/^f01016ee:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01016f1	obj/kern/kernel.asm	/^f01016f1:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f01016f4	obj/kern/kernel.asm	/^f01016f4:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f01016f7	obj/kern/kernel.asm	/^f01016f7:	01 d0                	add    %edx,%eax$/;"	l
f01016f9	obj/kern/kernel.asm	/^f01016f9:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f01016fc	obj/kern/kernel.asm	/^f01016fc:	c1 e2 16             	shl    $0x16,%edx$/;"	l
f01016ff	obj/kern/kernel.asm	/^f01016ff:	80 ca 83             	or     $0x83,%dl$/;"	l
f0101702	obj/kern/kernel.asm	/^f0101702:	89 10                	mov    %edx,(%eax)$/;"	l
f0101704	obj/kern/kernel.asm	/^f0101704:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f0101708	obj/kern/kernel.asm	/^f0101708:	83 7d f4 3f          	cmpl   $0x3f,-0xc(%ebp)$/;"	l
f010170c	obj/kern/kernel.asm	/^f010170c:	7e cd                	jle    f01016db <mem_init+0x1bb>$/;"	l
f010170e	obj/kern/kernel.asm	/^f010170e:	e8 65 00 00 00       	call   f0101778 <mem_init_mp>$/;"	l
f0101713	obj/kern/kernel.asm	/^f0101713:	e8 1e 0f 00 00       	call   f0102636 <check_kern_pgdir>$/;"	l
f0101718	obj/kern/kernel.asm	/^f0101718:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f010171d	obj/kern/kernel.asm	/^f010171d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101720	obj/kern/kernel.asm	/^f0101720:	50                   	push   %eax$/;"	l
f0101721	obj/kern/kernel.asm	/^f0101721:	68 f9 00 00 00       	push   $0xf9$/;"	l
f0101726	obj/kern/kernel.asm	/^f0101726:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f010172b	obj/kern/kernel.asm	/^f010172b:	e8 ce fb ff ff       	call   f01012fe <_paddr>$/;"	l
f0101730	obj/kern/kernel.asm	/^f0101730:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101733	obj/kern/kernel.asm	/^f0101733:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101736	obj/kern/kernel.asm	/^f0101736:	50                   	push   %eax$/;"	l
f0101737	obj/kern/kernel.asm	/^f0101737:	e8 99 fb ff ff       	call   f01012d5 <lcr3>$/;"	l
f010173c	obj/kern/kernel.asm	/^f010173c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010173f	obj/kern/kernel.asm	/^f010173f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101742	obj/kern/kernel.asm	/^f0101742:	6a 00                	push   $0x0$/;"	l
f0101744	obj/kern/kernel.asm	/^f0101744:	e8 a1 06 00 00       	call   f0101dea <check_page_free_list>$/;"	l
f0101749	obj/kern/kernel.asm	/^f0101749:	83 c4 10             	add    $0x10,%esp$/;"	l
f010174c	obj/kern/kernel.asm	/^f010174c:	e8 73 fb ff ff       	call   f01012c4 <rcr0>$/;"	l
f0101751	obj/kern/kernel.asm	/^f0101751:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0101754	obj/kern/kernel.asm	/^f0101754:	81 4d ec 23 00 05 80 	orl    $0x80050023,-0x14(%ebp)$/;"	l
f010175b	obj/kern/kernel.asm	/^f010175b:	83 65 ec f3          	andl   $0xfffffff3,-0x14(%ebp)$/;"	l
f010175f	obj/kern/kernel.asm	/^f010175f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101762	obj/kern/kernel.asm	/^f0101762:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f0101765	obj/kern/kernel.asm	/^f0101765:	e8 4e fb ff ff       	call   f01012b8 <lcr0>$/;"	l
f010176a	obj/kern/kernel.asm	/^f010176a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010176d	obj/kern/kernel.asm	/^f010176d:	e8 76 22 00 00       	call   f01039e8 <check_page_installed_pgdir>$/;"	l
f0101772	obj/kern/kernel.asm	/^f0101772:	90                   	nop$/;"	l
f0101773	obj/kern/kernel.asm	/^f0101773:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0101776	obj/kern/kernel.asm	/^f0101776:	c9                   	leave  $/;"	l
f0101777	obj/kern/kernel.asm	/^f0101777:	c3                   	ret    $/;"	l
f0101778	obj/kern/kernel.asm	/^f0101778 <mem_init_mp>:$/;"	l
f0101778	obj/kern/kernel.asm	/^f0101778:	55                   	push   %ebp$/;"	l
f0101779	obj/kern/kernel.asm	/^f0101779:	89 e5                	mov    %esp,%ebp$/;"	l
f010177b	obj/kern/kernel.asm	/^f010177b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010177e	obj/kern/kernel.asm	/^f010177e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0101785	obj/kern/kernel.asm	/^f0101785:	eb 5c                	jmp    f01017e3 <mem_init_mp+0x6b>$/;"	l
f0101787	obj/kern/kernel.asm	/^f0101787:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010178a	obj/kern/kernel.asm	/^f010178a:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f010178d	obj/kern/kernel.asm	/^f010178d:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f0101792	obj/kern/kernel.asm	/^f0101792:	29 c2                	sub    %eax,%edx$/;"	l
f0101794	obj/kern/kernel.asm	/^f0101794:	89 d0                	mov    %edx,%eax$/;"	l
f0101796	obj/kern/kernel.asm	/^f0101796:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0101799	obj/kern/kernel.asm	/^f0101799:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010179c	obj/kern/kernel.asm	/^f010179c:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f010179f	obj/kern/kernel.asm	/^f010179f:	05 00 20 23 f0       	add    $0xf0232000,%eax$/;"	l
f01017a4	obj/kern/kernel.asm	/^f01017a4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01017a7	obj/kern/kernel.asm	/^f01017a7:	50                   	push   %eax$/;"	l
f01017a8	obj/kern/kernel.asm	/^f01017a8:	68 28 01 00 00       	push   $0x128$/;"	l
f01017ad	obj/kern/kernel.asm	/^f01017ad:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01017b2	obj/kern/kernel.asm	/^f01017b2:	e8 47 fb ff ff       	call   f01012fe <_paddr>$/;"	l
f01017b7	obj/kern/kernel.asm	/^f01017b7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01017ba	obj/kern/kernel.asm	/^f01017ba:	89 c1                	mov    %eax,%ecx$/;"	l
f01017bc	obj/kern/kernel.asm	/^f01017bc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01017bf	obj/kern/kernel.asm	/^f01017bf:	8d 90 00 80 ff ff    	lea    -0x8000(%eax),%edx$/;"	l
f01017c5	obj/kern/kernel.asm	/^f01017c5:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f01017ca	obj/kern/kernel.asm	/^f01017ca:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01017cd	obj/kern/kernel.asm	/^f01017cd:	6a 02                	push   $0x2$/;"	l
f01017cf	obj/kern/kernel.asm	/^f01017cf:	51                   	push   %ecx$/;"	l
f01017d0	obj/kern/kernel.asm	/^f01017d0:	68 00 80 00 00       	push   $0x8000$/;"	l
f01017d5	obj/kern/kernel.asm	/^f01017d5:	52                   	push   %edx$/;"	l
f01017d6	obj/kern/kernel.asm	/^f01017d6:	50                   	push   %eax$/;"	l
f01017d7	obj/kern/kernel.asm	/^f01017d7:	e8 65 02 00 00       	call   f0101a41 <boot_map_region>$/;"	l
f01017dc	obj/kern/kernel.asm	/^f01017dc:	83 c4 20             	add    $0x20,%esp$/;"	l
f01017df	obj/kern/kernel.asm	/^f01017df:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f01017e3	obj/kern/kernel.asm	/^f01017e3:	83 7d f4 07          	cmpl   $0x7,-0xc(%ebp)$/;"	l
f01017e7	obj/kern/kernel.asm	/^f01017e7:	7e 9e                	jle    f0101787 <mem_init_mp+0xf>$/;"	l
f01017e9	obj/kern/kernel.asm	/^f01017e9:	90                   	nop$/;"	l
f01017ea	obj/kern/kernel.asm	/^f01017ea:	c9                   	leave  $/;"	l
f01017eb	obj/kern/kernel.asm	/^f01017eb:	c3                   	ret    $/;"	l
f01017ec	obj/kern/kernel.asm	/^f01017ec <page_init>:$/;"	l
f01017ec	obj/kern/kernel.asm	/^f01017ec:	55                   	push   %ebp$/;"	l
f01017ed	obj/kern/kernel.asm	/^f01017ed:	89 e5                	mov    %esp,%ebp$/;"	l
f01017ef	obj/kern/kernel.asm	/^f01017ef:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01017f2	obj/kern/kernel.asm	/^f01017f2:	c7 05 30 02 23 f0 00 	movl   $0x0,0xf0230230$/;"	l
f01017f9	obj/kern/kernel.asm	/^f01017f9:	00 00 00 $/;"	l
f01017fc	obj/kern/kernel.asm	/^f01017fc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0101803	obj/kern/kernel.asm	/^f0101803:	e9 9b 00 00 00       	jmp    f01018a3 <page_init+0xb7>$/;"	l
f0101808	obj/kern/kernel.asm	/^f0101808:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f010180c	obj/kern/kernel.asm	/^f010180c:	75 15                	jne    f0101823 <page_init+0x37>$/;"	l
f010180e	obj/kern/kernel.asm	/^f010180e:	a1 f0 0e 23 f0       	mov    0xf0230ef0,%eax$/;"	l
f0101813	obj/kern/kernel.asm	/^f0101813:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0101816	obj/kern/kernel.asm	/^f0101816:	c1 e2 03             	shl    $0x3,%edx$/;"	l
f0101819	obj/kern/kernel.asm	/^f0101819:	01 d0                	add    %edx,%eax$/;"	l
f010181b	obj/kern/kernel.asm	/^f010181b:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)$/;"	l
f0101821	obj/kern/kernel.asm	/^f0101821:	eb 7c                	jmp    f010189f <page_init+0xb3>$/;"	l
f0101823	obj/kern/kernel.asm	/^f0101823:	83 7d f4 06          	cmpl   $0x6,-0xc(%ebp)$/;"	l
f0101827	obj/kern/kernel.asm	/^f0101827:	76 3d                	jbe    f0101866 <page_init+0x7a>$/;"	l
f0101829	obj/kern/kernel.asm	/^f0101829:	6a 00                	push   $0x0$/;"	l
f010182b	obj/kern/kernel.asm	/^f010182b:	e8 74 fc ff ff       	call   f01014a4 <boot_alloc>$/;"	l
f0101830	obj/kern/kernel.asm	/^f0101830:	83 c4 04             	add    $0x4,%esp$/;"	l
f0101833	obj/kern/kernel.asm	/^f0101833:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101836	obj/kern/kernel.asm	/^f0101836:	50                   	push   %eax$/;"	l
f0101837	obj/kern/kernel.asm	/^f0101837:	68 56 01 00 00       	push   $0x156$/;"	l
f010183c	obj/kern/kernel.asm	/^f010183c:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0101841	obj/kern/kernel.asm	/^f0101841:	e8 b8 fa ff ff       	call   f01012fe <_paddr>$/;"	l
f0101846	obj/kern/kernel.asm	/^f0101846:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101849	obj/kern/kernel.asm	/^f0101849:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010184c	obj/kern/kernel.asm	/^f010184c:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f010184f	obj/kern/kernel.asm	/^f010184f:	76 15                	jbe    f0101866 <page_init+0x7a>$/;"	l
f0101851	obj/kern/kernel.asm	/^f0101851:	a1 f0 0e 23 f0       	mov    0xf0230ef0,%eax$/;"	l
f0101856	obj/kern/kernel.asm	/^f0101856:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0101859	obj/kern/kernel.asm	/^f0101859:	c1 e2 03             	shl    $0x3,%edx$/;"	l
f010185c	obj/kern/kernel.asm	/^f010185c:	01 d0                	add    %edx,%eax$/;"	l
f010185e	obj/kern/kernel.asm	/^f010185e:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)$/;"	l
f0101864	obj/kern/kernel.asm	/^f0101864:	eb 39                	jmp    f010189f <page_init+0xb3>$/;"	l
f0101866	obj/kern/kernel.asm	/^f0101866:	a1 f0 0e 23 f0       	mov    0xf0230ef0,%eax$/;"	l
f010186b	obj/kern/kernel.asm	/^f010186b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f010186e	obj/kern/kernel.asm	/^f010186e:	c1 e2 03             	shl    $0x3,%edx$/;"	l
f0101871	obj/kern/kernel.asm	/^f0101871:	01 d0                	add    %edx,%eax$/;"	l
f0101873	obj/kern/kernel.asm	/^f0101873:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0101879	obj/kern/kernel.asm	/^f0101879:	a1 f0 0e 23 f0       	mov    0xf0230ef0,%eax$/;"	l
f010187e	obj/kern/kernel.asm	/^f010187e:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0101881	obj/kern/kernel.asm	/^f0101881:	c1 e2 03             	shl    $0x3,%edx$/;"	l
f0101884	obj/kern/kernel.asm	/^f0101884:	01 c2                	add    %eax,%edx$/;"	l
f0101886	obj/kern/kernel.asm	/^f0101886:	a1 30 02 23 f0       	mov    0xf0230230,%eax$/;"	l
f010188b	obj/kern/kernel.asm	/^f010188b:	89 02                	mov    %eax,(%edx)$/;"	l
f010188d	obj/kern/kernel.asm	/^f010188d:	a1 f0 0e 23 f0       	mov    0xf0230ef0,%eax$/;"	l
f0101892	obj/kern/kernel.asm	/^f0101892:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0101895	obj/kern/kernel.asm	/^f0101895:	c1 e2 03             	shl    $0x3,%edx$/;"	l
f0101898	obj/kern/kernel.asm	/^f0101898:	01 d0                	add    %edx,%eax$/;"	l
f010189a	obj/kern/kernel.asm	/^f010189a:	a3 30 02 23 f0       	mov    %eax,0xf0230230$/;"	l
f010189f	obj/kern/kernel.asm	/^f010189f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f01018a3	obj/kern/kernel.asm	/^f01018a3:	a1 e8 0e 23 f0       	mov    0xf0230ee8,%eax$/;"	l
f01018a8	obj/kern/kernel.asm	/^f01018a8:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
f01018ab	obj/kern/kernel.asm	/^f01018ab:	0f 82 57 ff ff ff    	jb     f0101808 <page_init+0x1c>$/;"	l
f01018b1	obj/kern/kernel.asm	/^f01018b1:	90                   	nop$/;"	l
f01018b2	obj/kern/kernel.asm	/^f01018b2:	c9                   	leave  $/;"	l
f01018b3	obj/kern/kernel.asm	/^f01018b3:	c3                   	ret    $/;"	l
f01018b4	obj/kern/kernel.asm	/^f01018b4 <page_alloc>:$/;"	l
f01018b4	obj/kern/kernel.asm	/^f01018b4:	55                   	push   %ebp$/;"	l
f01018b5	obj/kern/kernel.asm	/^f01018b5:	89 e5                	mov    %esp,%ebp$/;"	l
f01018b7	obj/kern/kernel.asm	/^f01018b7:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01018ba	obj/kern/kernel.asm	/^f01018ba:	a1 30 02 23 f0       	mov    0xf0230230,%eax$/;"	l
f01018bf	obj/kern/kernel.asm	/^f01018bf:	85 c0                	test   %eax,%eax$/;"	l
f01018c1	obj/kern/kernel.asm	/^f01018c1:	75 07                	jne    f01018ca <page_alloc+0x16>$/;"	l
f01018c3	obj/kern/kernel.asm	/^f01018c3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01018c8	obj/kern/kernel.asm	/^f01018c8:	eb 4b                	jmp    f0101915 <page_alloc+0x61>$/;"	l
f01018ca	obj/kern/kernel.asm	/^f01018ca:	a1 30 02 23 f0       	mov    0xf0230230,%eax$/;"	l
f01018cf	obj/kern/kernel.asm	/^f01018cf:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01018d2	obj/kern/kernel.asm	/^f01018d2:	a1 30 02 23 f0       	mov    0xf0230230,%eax$/;"	l
f01018d7	obj/kern/kernel.asm	/^f01018d7:	8b 00                	mov    (%eax),%eax$/;"	l
f01018d9	obj/kern/kernel.asm	/^f01018d9:	a3 30 02 23 f0       	mov    %eax,0xf0230230$/;"	l
f01018de	obj/kern/kernel.asm	/^f01018de:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01018e1	obj/kern/kernel.asm	/^f01018e1:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01018e7	obj/kern/kernel.asm	/^f01018e7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01018ea	obj/kern/kernel.asm	/^f01018ea:	83 e0 01             	and    $0x1,%eax$/;"	l
f01018ed	obj/kern/kernel.asm	/^f01018ed:	85 c0                	test   %eax,%eax$/;"	l
f01018ef	obj/kern/kernel.asm	/^f01018ef:	74 21                	je     f0101912 <page_alloc+0x5e>$/;"	l
f01018f1	obj/kern/kernel.asm	/^f01018f1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01018f4	obj/kern/kernel.asm	/^f01018f4:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f01018f7	obj/kern/kernel.asm	/^f01018f7:	e8 b6 fa ff ff       	call   f01013b2 <page2kva>$/;"	l
f01018fc	obj/kern/kernel.asm	/^f01018fc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01018ff	obj/kern/kernel.asm	/^f01018ff:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101902	obj/kern/kernel.asm	/^f0101902:	68 00 10 00 00       	push   $0x1000$/;"	l
f0101907	obj/kern/kernel.asm	/^f0101907:	6a 00                	push   $0x0$/;"	l
f0101909	obj/kern/kernel.asm	/^f0101909:	50                   	push   %eax$/;"	l
f010190a	obj/kern/kernel.asm	/^f010190a:	e8 80 59 00 00       	call   f010728f <memset>$/;"	l
f010190f	obj/kern/kernel.asm	/^f010190f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101912	obj/kern/kernel.asm	/^f0101912:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101915	obj/kern/kernel.asm	/^f0101915:	c9                   	leave  $/;"	l
f0101916	obj/kern/kernel.asm	/^f0101916:	c3                   	ret    $/;"	l
f0101917	obj/kern/kernel.asm	/^f0101917 <page_free>:$/;"	l
f0101917	obj/kern/kernel.asm	/^f0101917:	55                   	push   %ebp$/;"	l
f0101918	obj/kern/kernel.asm	/^f0101918:	89 e5                	mov    %esp,%ebp$/;"	l
f010191a	obj/kern/kernel.asm	/^f010191a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010191d	obj/kern/kernel.asm	/^f010191d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101920	obj/kern/kernel.asm	/^f0101920:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0101924	obj/kern/kernel.asm	/^f0101924:	66 85 c0             	test   %ax,%ax$/;"	l
f0101927	obj/kern/kernel.asm	/^f0101927:	75 09                	jne    f0101932 <page_free+0x1b>$/;"	l
f0101929	obj/kern/kernel.asm	/^f0101929:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010192c	obj/kern/kernel.asm	/^f010192c:	8b 00                	mov    (%eax),%eax$/;"	l
f010192e	obj/kern/kernel.asm	/^f010192e:	85 c0                	test   %eax,%eax$/;"	l
f0101930	obj/kern/kernel.asm	/^f0101930:	74 17                	je     f0101949 <page_free+0x32>$/;"	l
f0101932	obj/kern/kernel.asm	/^f0101932:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101935	obj/kern/kernel.asm	/^f0101935:	68 c8 8a 10 f0       	push   $0xf0108ac8$/;"	l
f010193a	obj/kern/kernel.asm	/^f010193a:	68 89 01 00 00       	push   $0x189$/;"	l
f010193f	obj/kern/kernel.asm	/^f010193f:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0101944	obj/kern/kernel.asm	/^f0101944:	e8 97 e9 ff ff       	call   f01002e0 <_panic>$/;"	l
f0101949	obj/kern/kernel.asm	/^f0101949:	8b 15 30 02 23 f0    	mov    0xf0230230,%edx$/;"	l
f010194f	obj/kern/kernel.asm	/^f010194f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101952	obj/kern/kernel.asm	/^f0101952:	89 10                	mov    %edx,(%eax)$/;"	l
f0101954	obj/kern/kernel.asm	/^f0101954:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101957	obj/kern/kernel.asm	/^f0101957:	a3 30 02 23 f0       	mov    %eax,0xf0230230$/;"	l
f010195c	obj/kern/kernel.asm	/^f010195c:	90                   	nop$/;"	l
f010195d	obj/kern/kernel.asm	/^f010195d:	c9                   	leave  $/;"	l
f010195e	obj/kern/kernel.asm	/^f010195e:	c3                   	ret    $/;"	l
f010195f	obj/kern/kernel.asm	/^f010195f <page_decref>:$/;"	l
f010195f	obj/kern/kernel.asm	/^f010195f:	55                   	push   %ebp$/;"	l
f0101960	obj/kern/kernel.asm	/^f0101960:	89 e5                	mov    %esp,%ebp$/;"	l
f0101962	obj/kern/kernel.asm	/^f0101962:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101965	obj/kern/kernel.asm	/^f0101965:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101968	obj/kern/kernel.asm	/^f0101968:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f010196c	obj/kern/kernel.asm	/^f010196c:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f010196f	obj/kern/kernel.asm	/^f010196f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101972	obj/kern/kernel.asm	/^f0101972:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f0101976	obj/kern/kernel.asm	/^f0101976:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101979	obj/kern/kernel.asm	/^f0101979:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f010197d	obj/kern/kernel.asm	/^f010197d:	66 85 c0             	test   %ax,%ax$/;"	l
f0101980	obj/kern/kernel.asm	/^f0101980:	75 0e                	jne    f0101990 <page_decref+0x31>$/;"	l
f0101982	obj/kern/kernel.asm	/^f0101982:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101985	obj/kern/kernel.asm	/^f0101985:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101988	obj/kern/kernel.asm	/^f0101988:	e8 8a ff ff ff       	call   f0101917 <page_free>$/;"	l
f010198d	obj/kern/kernel.asm	/^f010198d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101990	obj/kern/kernel.asm	/^f0101990:	90                   	nop$/;"	l
f0101991	obj/kern/kernel.asm	/^f0101991:	c9                   	leave  $/;"	l
f0101992	obj/kern/kernel.asm	/^f0101992:	c3                   	ret    $/;"	l
f0101993	obj/kern/kernel.asm	/^f0101993 <pgdir_walk>:$/;"	l
f0101993	obj/kern/kernel.asm	/^f0101993:	55                   	push   %ebp$/;"	l
f0101994	obj/kern/kernel.asm	/^f0101994:	89 e5                	mov    %esp,%ebp$/;"	l
f0101996	obj/kern/kernel.asm	/^f0101996:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101999	obj/kern/kernel.asm	/^f0101999:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010199c	obj/kern/kernel.asm	/^f010199c:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f010199f	obj/kern/kernel.asm	/^f010199f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f01019a6	obj/kern/kernel.asm	/^f01019a6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01019a9	obj/kern/kernel.asm	/^f01019a9:	01 d0                	add    %edx,%eax$/;"	l
f01019ab	obj/kern/kernel.asm	/^f01019ab:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01019ae	obj/kern/kernel.asm	/^f01019ae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01019b1	obj/kern/kernel.asm	/^f01019b1:	8b 00                	mov    (%eax),%eax$/;"	l
f01019b3	obj/kern/kernel.asm	/^f01019b3:	83 e0 01             	and    $0x1,%eax$/;"	l
f01019b6	obj/kern/kernel.asm	/^f01019b6:	85 c0                	test   %eax,%eax$/;"	l
f01019b8	obj/kern/kernel.asm	/^f01019b8:	75 53                	jne    f0101a0d <pgdir_walk+0x7a>$/;"	l
f01019ba	obj/kern/kernel.asm	/^f01019ba:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f01019be	obj/kern/kernel.asm	/^f01019be:	75 07                	jne    f01019c7 <pgdir_walk+0x34>$/;"	l
f01019c0	obj/kern/kernel.asm	/^f01019c0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01019c5	obj/kern/kernel.asm	/^f01019c5:	eb 78                	jmp    f0101a3f <pgdir_walk+0xac>$/;"	l
f01019c7	obj/kern/kernel.asm	/^f01019c7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01019ca	obj/kern/kernel.asm	/^f01019ca:	6a 01                	push   $0x1$/;"	l
f01019cc	obj/kern/kernel.asm	/^f01019cc:	e8 e3 fe ff ff       	call   f01018b4 <page_alloc>$/;"	l
f01019d1	obj/kern/kernel.asm	/^f01019d1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01019d4	obj/kern/kernel.asm	/^f01019d4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01019d7	obj/kern/kernel.asm	/^f01019d7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f01019db	obj/kern/kernel.asm	/^f01019db:	75 07                	jne    f01019e4 <pgdir_walk+0x51>$/;"	l
f01019dd	obj/kern/kernel.asm	/^f01019dd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01019e2	obj/kern/kernel.asm	/^f01019e2:	eb 5b                	jmp    f0101a3f <pgdir_walk+0xac>$/;"	l
f01019e4	obj/kern/kernel.asm	/^f01019e4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01019e7	obj/kern/kernel.asm	/^f01019e7:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f01019eb	obj/kern/kernel.asm	/^f01019eb:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01019ee	obj/kern/kernel.asm	/^f01019ee:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01019f1	obj/kern/kernel.asm	/^f01019f1:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f01019f5	obj/kern/kernel.asm	/^f01019f5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01019f8	obj/kern/kernel.asm	/^f01019f8:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f01019fb	obj/kern/kernel.asm	/^f01019fb:	e8 5f f9 ff ff       	call   f010135f <page2pa>$/;"	l
f0101a00	obj/kern/kernel.asm	/^f0101a00:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a03	obj/kern/kernel.asm	/^f0101a03:	83 c8 07             	or     $0x7,%eax$/;"	l
f0101a06	obj/kern/kernel.asm	/^f0101a06:	89 c2                	mov    %eax,%edx$/;"	l
f0101a08	obj/kern/kernel.asm	/^f0101a08:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101a0b	obj/kern/kernel.asm	/^f0101a0b:	89 10                	mov    %edx,(%eax)$/;"	l
f0101a0d	obj/kern/kernel.asm	/^f0101a0d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101a10	obj/kern/kernel.asm	/^f0101a10:	8b 00                	mov    (%eax),%eax$/;"	l
f0101a12	obj/kern/kernel.asm	/^f0101a12:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101a17	obj/kern/kernel.asm	/^f0101a17:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101a1a	obj/kern/kernel.asm	/^f0101a1a:	50                   	push   %eax$/;"	l
f0101a1b	obj/kern/kernel.asm	/^f0101a1b:	68 c5 01 00 00       	push   $0x1c5$/;"	l
f0101a20	obj/kern/kernel.asm	/^f0101a20:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0101a25	obj/kern/kernel.asm	/^f0101a25:	e8 01 f9 ff ff       	call   f010132b <_kaddr>$/;"	l
f0101a2a	obj/kern/kernel.asm	/^f0101a2a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a2d	obj/kern/kernel.asm	/^f0101a2d:	89 c2                	mov    %eax,%edx$/;"	l
f0101a2f	obj/kern/kernel.asm	/^f0101a2f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101a32	obj/kern/kernel.asm	/^f0101a32:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101a35	obj/kern/kernel.asm	/^f0101a35:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0101a3a	obj/kern/kernel.asm	/^f0101a3a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0101a3d	obj/kern/kernel.asm	/^f0101a3d:	01 d0                	add    %edx,%eax$/;"	l
f0101a3f	obj/kern/kernel.asm	/^f0101a3f:	c9                   	leave  $/;"	l
f0101a40	obj/kern/kernel.asm	/^f0101a40:	c3                   	ret    $/;"	l
f0101a41	obj/kern/kernel.asm	/^f0101a41 <boot_map_region>:$/;"	l
f0101a41	obj/kern/kernel.asm	/^f0101a41:	55                   	push   %ebp$/;"	l
f0101a42	obj/kern/kernel.asm	/^f0101a42:	89 e5                	mov    %esp,%ebp$/;"	l
f0101a44	obj/kern/kernel.asm	/^f0101a44:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101a47	obj/kern/kernel.asm	/^f0101a47:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101a4a	obj/kern/kernel.asm	/^f0101a4a:	f7 d8                	neg    %eax$/;"	l
f0101a4c	obj/kern/kernel.asm	/^f0101a4c:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
f0101a4f	obj/kern/kernel.asm	/^f0101a4f:	73 17                	jae    f0101a68 <boot_map_region+0x27>$/;"	l
f0101a51	obj/kern/kernel.asm	/^f0101a51:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101a54	obj/kern/kernel.asm	/^f0101a54:	68 ec 8a 10 f0       	push   $0xf0108aec$/;"	l
f0101a59	obj/kern/kernel.asm	/^f0101a59:	68 da 01 00 00       	push   $0x1da$/;"	l
f0101a5e	obj/kern/kernel.asm	/^f0101a5e:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0101a63	obj/kern/kernel.asm	/^f0101a63:	e8 78 e8 ff ff       	call   f01002e0 <_panic>$/;"	l
f0101a68	obj/kern/kernel.asm	/^f0101a68:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0101a6f	obj/kern/kernel.asm	/^f0101a6f:	eb 56                	jmp    f0101ac7 <boot_map_region+0x86>$/;"	l
f0101a71	obj/kern/kernel.asm	/^f0101a71:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101a74	obj/kern/kernel.asm	/^f0101a74:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101a77	obj/kern/kernel.asm	/^f0101a77:	6a 01                	push   $0x1$/;"	l
f0101a79	obj/kern/kernel.asm	/^f0101a79:	50                   	push   %eax$/;"	l
f0101a7a	obj/kern/kernel.asm	/^f0101a7a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101a7d	obj/kern/kernel.asm	/^f0101a7d:	e8 11 ff ff ff       	call   f0101993 <pgdir_walk>$/;"	l
f0101a82	obj/kern/kernel.asm	/^f0101a82:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101a85	obj/kern/kernel.asm	/^f0101a85:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0101a88	obj/kern/kernel.asm	/^f0101a88:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0101a8c	obj/kern/kernel.asm	/^f0101a8c:	75 17                	jne    f0101aa5 <boot_map_region+0x64>$/;"	l
f0101a8e	obj/kern/kernel.asm	/^f0101a8e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101a91	obj/kern/kernel.asm	/^f0101a91:	68 14 8b 10 f0       	push   $0xf0108b14$/;"	l
f0101a96	obj/kern/kernel.asm	/^f0101a96:	68 e0 01 00 00       	push   $0x1e0$/;"	l
f0101a9b	obj/kern/kernel.asm	/^f0101a9b:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0101aa0	obj/kern/kernel.asm	/^f0101aa0:	e8 3b e8 ff ff       	call   f01002e0 <_panic>$/;"	l
f0101aa5	obj/kern/kernel.asm	/^f0101aa5:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0101aa8	obj/kern/kernel.asm	/^f0101aa8:	0b 45 14             	or     0x14(%ebp),%eax$/;"	l
f0101aab	obj/kern/kernel.asm	/^f0101aab:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101aae	obj/kern/kernel.asm	/^f0101aae:	89 c2                	mov    %eax,%edx$/;"	l
f0101ab0	obj/kern/kernel.asm	/^f0101ab0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0101ab3	obj/kern/kernel.asm	/^f0101ab3:	89 10                	mov    %edx,(%eax)$/;"	l
f0101ab5	obj/kern/kernel.asm	/^f0101ab5:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
f0101abc	obj/kern/kernel.asm	/^f0101abc:	81 45 14 00 10 00 00 	addl   $0x1000,0x14(%ebp)$/;"	l
f0101ac3	obj/kern/kernel.asm	/^f0101ac3:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f0101ac7	obj/kern/kernel.asm	/^f0101ac7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101aca	obj/kern/kernel.asm	/^f0101aca:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0101acd	obj/kern/kernel.asm	/^f0101acd:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f0101ad0	obj/kern/kernel.asm	/^f0101ad0:	77 9f                	ja     f0101a71 <boot_map_region+0x30>$/;"	l
f0101ad2	obj/kern/kernel.asm	/^f0101ad2:	90                   	nop$/;"	l
f0101ad3	obj/kern/kernel.asm	/^f0101ad3:	c9                   	leave  $/;"	l
f0101ad4	obj/kern/kernel.asm	/^f0101ad4:	c3                   	ret    $/;"	l
f0101ad5	obj/kern/kernel.asm	/^f0101ad5 <page_insert>:$/;"	l
f0101ad5	obj/kern/kernel.asm	/^f0101ad5:	55                   	push   %ebp$/;"	l
f0101ad6	obj/kern/kernel.asm	/^f0101ad6:	89 e5                	mov    %esp,%ebp$/;"	l
f0101ad8	obj/kern/kernel.asm	/^f0101ad8:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101adb	obj/kern/kernel.asm	/^f0101adb:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101ade	obj/kern/kernel.asm	/^f0101ade:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101ae1	obj/kern/kernel.asm	/^f0101ae1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101ae4	obj/kern/kernel.asm	/^f0101ae4:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101ae9	obj/kern/kernel.asm	/^f0101ae9:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
f0101aec	obj/kern/kernel.asm	/^f0101aec:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101aef	obj/kern/kernel.asm	/^f0101aef:	6a 01                	push   $0x1$/;"	l
f0101af1	obj/kern/kernel.asm	/^f0101af1:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0101af4	obj/kern/kernel.asm	/^f0101af4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101af7	obj/kern/kernel.asm	/^f0101af7:	e8 97 fe ff ff       	call   f0101993 <pgdir_walk>$/;"	l
f0101afc	obj/kern/kernel.asm	/^f0101afc:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101aff	obj/kern/kernel.asm	/^f0101aff:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0101b02	obj/kern/kernel.asm	/^f0101b02:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0101b06	obj/kern/kernel.asm	/^f0101b06:	75 07                	jne    f0101b0f <page_insert+0x3a>$/;"	l
f0101b08	obj/kern/kernel.asm	/^f0101b08:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0101b0d	obj/kern/kernel.asm	/^f0101b0d:	eb 52                	jmp    f0101b61 <page_insert+0x8c>$/;"	l
f0101b0f	obj/kern/kernel.asm	/^f0101b0f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101b12	obj/kern/kernel.asm	/^f0101b12:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0101b16	obj/kern/kernel.asm	/^f0101b16:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0101b19	obj/kern/kernel.asm	/^f0101b19:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101b1c	obj/kern/kernel.asm	/^f0101b1c:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f0101b20	obj/kern/kernel.asm	/^f0101b20:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0101b23	obj/kern/kernel.asm	/^f0101b23:	8b 00                	mov    (%eax),%eax$/;"	l
f0101b25	obj/kern/kernel.asm	/^f0101b25:	83 e0 01             	and    $0x1,%eax$/;"	l
f0101b28	obj/kern/kernel.asm	/^f0101b28:	85 c0                	test   %eax,%eax$/;"	l
f0101b2a	obj/kern/kernel.asm	/^f0101b2a:	74 11                	je     f0101b3d <page_insert+0x68>$/;"	l
f0101b2c	obj/kern/kernel.asm	/^f0101b2c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101b2f	obj/kern/kernel.asm	/^f0101b2f:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0101b32	obj/kern/kernel.asm	/^f0101b32:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101b35	obj/kern/kernel.asm	/^f0101b35:	e8 7e 00 00 00       	call   f0101bb8 <page_remove>$/;"	l
f0101b3a	obj/kern/kernel.asm	/^f0101b3a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b3d	obj/kern/kernel.asm	/^f0101b3d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101b40	obj/kern/kernel.asm	/^f0101b40:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101b43	obj/kern/kernel.asm	/^f0101b43:	e8 17 f8 ff ff       	call   f010135f <page2pa>$/;"	l
f0101b48	obj/kern/kernel.asm	/^f0101b48:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b4b	obj/kern/kernel.asm	/^f0101b4b:	89 c2                	mov    %eax,%edx$/;"	l
f0101b4d	obj/kern/kernel.asm	/^f0101b4d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101b50	obj/kern/kernel.asm	/^f0101b50:	09 d0                	or     %edx,%eax$/;"	l
f0101b52	obj/kern/kernel.asm	/^f0101b52:	83 c8 01             	or     $0x1,%eax$/;"	l
f0101b55	obj/kern/kernel.asm	/^f0101b55:	89 c2                	mov    %eax,%edx$/;"	l
f0101b57	obj/kern/kernel.asm	/^f0101b57:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0101b5a	obj/kern/kernel.asm	/^f0101b5a:	89 10                	mov    %edx,(%eax)$/;"	l
f0101b5c	obj/kern/kernel.asm	/^f0101b5c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101b61	obj/kern/kernel.asm	/^f0101b61:	c9                   	leave  $/;"	l
f0101b62	obj/kern/kernel.asm	/^f0101b62:	c3                   	ret    $/;"	l
f0101b63	obj/kern/kernel.asm	/^f0101b63 <page_lookup>:$/;"	l
f0101b63	obj/kern/kernel.asm	/^f0101b63:	55                   	push   %ebp$/;"	l
f0101b64	obj/kern/kernel.asm	/^f0101b64:	89 e5                	mov    %esp,%ebp$/;"	l
f0101b66	obj/kern/kernel.asm	/^f0101b66:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101b69	obj/kern/kernel.asm	/^f0101b69:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101b6c	obj/kern/kernel.asm	/^f0101b6c:	6a 00                	push   $0x0$/;"	l
f0101b6e	obj/kern/kernel.asm	/^f0101b6e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101b71	obj/kern/kernel.asm	/^f0101b71:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101b74	obj/kern/kernel.asm	/^f0101b74:	e8 1a fe ff ff       	call   f0101993 <pgdir_walk>$/;"	l
f0101b79	obj/kern/kernel.asm	/^f0101b79:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101b7c	obj/kern/kernel.asm	/^f0101b7c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101b7f	obj/kern/kernel.asm	/^f0101b7f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0101b83	obj/kern/kernel.asm	/^f0101b83:	74 0c                	je     f0101b91 <page_lookup+0x2e>$/;"	l
f0101b85	obj/kern/kernel.asm	/^f0101b85:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101b88	obj/kern/kernel.asm	/^f0101b88:	8b 00                	mov    (%eax),%eax$/;"	l
f0101b8a	obj/kern/kernel.asm	/^f0101b8a:	83 e0 01             	and    $0x1,%eax$/;"	l
f0101b8d	obj/kern/kernel.asm	/^f0101b8d:	85 c0                	test   %eax,%eax$/;"	l
f0101b8f	obj/kern/kernel.asm	/^f0101b8f:	75 07                	jne    f0101b98 <page_lookup+0x35>$/;"	l
f0101b91	obj/kern/kernel.asm	/^f0101b91:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101b96	obj/kern/kernel.asm	/^f0101b96:	eb 1e                	jmp    f0101bb6 <page_lookup+0x53>$/;"	l
f0101b98	obj/kern/kernel.asm	/^f0101b98:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101b9b	obj/kern/kernel.asm	/^f0101b9b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0101b9e	obj/kern/kernel.asm	/^f0101b9e:	89 10                	mov    %edx,(%eax)$/;"	l
f0101ba0	obj/kern/kernel.asm	/^f0101ba0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101ba3	obj/kern/kernel.asm	/^f0101ba3:	8b 00                	mov    (%eax),%eax$/;"	l
f0101ba5	obj/kern/kernel.asm	/^f0101ba5:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101baa	obj/kern/kernel.asm	/^f0101baa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101bad	obj/kern/kernel.asm	/^f0101bad:	50                   	push   %eax$/;"	l
f0101bae	obj/kern/kernel.asm	/^f0101bae:	e8 c2 f7 ff ff       	call   f0101375 <pa2page>$/;"	l
f0101bb3	obj/kern/kernel.asm	/^f0101bb3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101bb6	obj/kern/kernel.asm	/^f0101bb6:	c9                   	leave  $/;"	l
f0101bb7	obj/kern/kernel.asm	/^f0101bb7:	c3                   	ret    $/;"	l
f0101bb8	obj/kern/kernel.asm	/^f0101bb8 <page_remove>:$/;"	l
f0101bb8	obj/kern/kernel.asm	/^f0101bb8:	55                   	push   %ebp$/;"	l
f0101bb9	obj/kern/kernel.asm	/^f0101bb9:	89 e5                	mov    %esp,%ebp$/;"	l
f0101bbb	obj/kern/kernel.asm	/^f0101bbb:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101bbe	obj/kern/kernel.asm	/^f0101bbe:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101bc1	obj/kern/kernel.asm	/^f0101bc1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101bc4	obj/kern/kernel.asm	/^f0101bc4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101bc7	obj/kern/kernel.asm	/^f0101bc7:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101bcc	obj/kern/kernel.asm	/^f0101bcc:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
f0101bcf	obj/kern/kernel.asm	/^f0101bcf:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
f0101bd6	obj/kern/kernel.asm	/^f0101bd6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101bd9	obj/kern/kernel.asm	/^f0101bd9:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0101bdc	obj/kern/kernel.asm	/^f0101bdc:	50                   	push   %eax$/;"	l
f0101bdd	obj/kern/kernel.asm	/^f0101bdd:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101be0	obj/kern/kernel.asm	/^f0101be0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101be3	obj/kern/kernel.asm	/^f0101be3:	e8 7b ff ff ff       	call   f0101b63 <page_lookup>$/;"	l
f0101be8	obj/kern/kernel.asm	/^f0101be8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101beb	obj/kern/kernel.asm	/^f0101beb:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0101bee	obj/kern/kernel.asm	/^f0101bee:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0101bf2	obj/kern/kernel.asm	/^f0101bf2:	74 36                	je     f0101c2a <page_remove+0x72>$/;"	l
f0101bf4	obj/kern/kernel.asm	/^f0101bf4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101bf7	obj/kern/kernel.asm	/^f0101bf7:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f0101bfa	obj/kern/kernel.asm	/^f0101bfa:	e8 60 fd ff ff       	call   f010195f <page_decref>$/;"	l
f0101bff	obj/kern/kernel.asm	/^f0101bff:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c02	obj/kern/kernel.asm	/^f0101c02:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0101c05	obj/kern/kernel.asm	/^f0101c05:	8b 00                	mov    (%eax),%eax$/;"	l
f0101c07	obj/kern/kernel.asm	/^f0101c07:	83 e0 01             	and    $0x1,%eax$/;"	l
f0101c0a	obj/kern/kernel.asm	/^f0101c0a:	85 c0                	test   %eax,%eax$/;"	l
f0101c0c	obj/kern/kernel.asm	/^f0101c0c:	74 1d                	je     f0101c2b <page_remove+0x73>$/;"	l
f0101c0e	obj/kern/kernel.asm	/^f0101c0e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0101c11	obj/kern/kernel.asm	/^f0101c11:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101c17	obj/kern/kernel.asm	/^f0101c17:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101c1a	obj/kern/kernel.asm	/^f0101c1a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101c1d	obj/kern/kernel.asm	/^f0101c1d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101c20	obj/kern/kernel.asm	/^f0101c20:	e8 08 00 00 00       	call   f0101c2d <tlb_invalidate>$/;"	l
f0101c25	obj/kern/kernel.asm	/^f0101c25:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c28	obj/kern/kernel.asm	/^f0101c28:	eb 01                	jmp    f0101c2b <page_remove+0x73>$/;"	l
f0101c2a	obj/kern/kernel.asm	/^f0101c2a:	90                   	nop$/;"	l
f0101c2b	obj/kern/kernel.asm	/^f0101c2b:	c9                   	leave  $/;"	l
f0101c2c	obj/kern/kernel.asm	/^f0101c2c:	c3                   	ret    $/;"	l
f0101c2d	obj/kern/kernel.asm	/^f0101c2d <tlb_invalidate>:$/;"	l
f0101c2d	obj/kern/kernel.asm	/^f0101c2d:	55                   	push   %ebp$/;"	l
f0101c2e	obj/kern/kernel.asm	/^f0101c2e:	89 e5                	mov    %esp,%ebp$/;"	l
f0101c30	obj/kern/kernel.asm	/^f0101c30:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101c33	obj/kern/kernel.asm	/^f0101c33:	e8 27 61 00 00       	call   f0107d5f <cpunum>$/;"	l
f0101c38	obj/kern/kernel.asm	/^f0101c38:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0101c3b	obj/kern/kernel.asm	/^f0101c3b:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0101c40	obj/kern/kernel.asm	/^f0101c40:	8b 00                	mov    (%eax),%eax$/;"	l
f0101c42	obj/kern/kernel.asm	/^f0101c42:	85 c0                	test   %eax,%eax$/;"	l
f0101c44	obj/kern/kernel.asm	/^f0101c44:	74 17                	je     f0101c5d <tlb_invalidate+0x30>$/;"	l
f0101c46	obj/kern/kernel.asm	/^f0101c46:	e8 14 61 00 00       	call   f0107d5f <cpunum>$/;"	l
f0101c4b	obj/kern/kernel.asm	/^f0101c4b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0101c4e	obj/kern/kernel.asm	/^f0101c4e:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0101c53	obj/kern/kernel.asm	/^f0101c53:	8b 00                	mov    (%eax),%eax$/;"	l
f0101c55	obj/kern/kernel.asm	/^f0101c55:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0101c58	obj/kern/kernel.asm	/^f0101c58:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
f0101c5b	obj/kern/kernel.asm	/^f0101c5b:	75 0e                	jne    f0101c6b <tlb_invalidate+0x3e>$/;"	l
f0101c5d	obj/kern/kernel.asm	/^f0101c5d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101c60	obj/kern/kernel.asm	/^f0101c60:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101c63	obj/kern/kernel.asm	/^f0101c63:	e8 44 f6 ff ff       	call   f01012ac <invlpg>$/;"	l
f0101c68	obj/kern/kernel.asm	/^f0101c68:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101c6b	obj/kern/kernel.asm	/^f0101c6b:	90                   	nop$/;"	l
f0101c6c	obj/kern/kernel.asm	/^f0101c6c:	c9                   	leave  $/;"	l
f0101c6d	obj/kern/kernel.asm	/^f0101c6d:	c3                   	ret    $/;"	l
f0101c6e	obj/kern/kernel.asm	/^f0101c6e <mmio_map_region>:$/;"	l
f0101c6e	obj/kern/kernel.asm	/^f0101c6e:	55                   	push   %ebp$/;"	l
f0101c6f	obj/kern/kernel.asm	/^f0101c6f:	89 e5                	mov    %esp,%ebp$/;"	l
f0101c71	obj/kern/kernel.asm	/^f0101c71:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101c74	obj/kern/kernel.asm	/^f0101c74:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)$/;"	l
f0101c7b	obj/kern/kernel.asm	/^f0101c7b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0101c7e	obj/kern/kernel.asm	/^f0101c7e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101c81	obj/kern/kernel.asm	/^f0101c81:	01 d0                	add    %edx,%eax$/;"	l
f0101c83	obj/kern/kernel.asm	/^f0101c83:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0101c86	obj/kern/kernel.asm	/^f0101c86:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0101c89	obj/kern/kernel.asm	/^f0101c89:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0101c8c	obj/kern/kernel.asm	/^f0101c8c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101c91	obj/kern/kernel.asm	/^f0101c91:	f7 75 f4             	divl   -0xc(%ebp)$/;"	l
f0101c94	obj/kern/kernel.asm	/^f0101c94:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0101c97	obj/kern/kernel.asm	/^f0101c97:	29 d0                	sub    %edx,%eax$/;"	l
f0101c99	obj/kern/kernel.asm	/^f0101c99:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
f0101c9c	obj/kern/kernel.asm	/^f0101c9c:	8b 15 5c 55 12 f0    	mov    0xf012555c,%edx$/;"	l
f0101ca2	obj/kern/kernel.asm	/^f0101ca2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101ca5	obj/kern/kernel.asm	/^f0101ca5:	01 d0                	add    %edx,%eax$/;"	l
f0101ca7	obj/kern/kernel.asm	/^f0101ca7:	3d 00 00 c0 ef       	cmp    $0xefc00000,%eax$/;"	l
f0101cac	obj/kern/kernel.asm	/^f0101cac:	76 17                	jbe    f0101cc5 <mmio_map_region+0x57>$/;"	l
f0101cae	obj/kern/kernel.asm	/^f0101cae:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101cb1	obj/kern/kernel.asm	/^f0101cb1:	68 3a 8b 10 f0       	push   $0xf0108b3a$/;"	l
f0101cb6	obj/kern/kernel.asm	/^f0101cb6:	68 81 02 00 00       	push   $0x281$/;"	l
f0101cbb	obj/kern/kernel.asm	/^f0101cbb:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0101cc0	obj/kern/kernel.asm	/^f0101cc0:	e8 1b e6 ff ff       	call   f01002e0 <_panic>$/;"	l
f0101cc5	obj/kern/kernel.asm	/^f0101cc5:	8b 15 5c 55 12 f0    	mov    0xf012555c,%edx$/;"	l
f0101ccb	obj/kern/kernel.asm	/^f0101ccb:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0101cd0	obj/kern/kernel.asm	/^f0101cd0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101cd3	obj/kern/kernel.asm	/^f0101cd3:	6a 1a                	push   $0x1a$/;"	l
f0101cd5	obj/kern/kernel.asm	/^f0101cd5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101cd8	obj/kern/kernel.asm	/^f0101cd8:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101cdb	obj/kern/kernel.asm	/^f0101cdb:	52                   	push   %edx$/;"	l
f0101cdc	obj/kern/kernel.asm	/^f0101cdc:	50                   	push   %eax$/;"	l
f0101cdd	obj/kern/kernel.asm	/^f0101cdd:	e8 5f fd ff ff       	call   f0101a41 <boot_map_region>$/;"	l
f0101ce2	obj/kern/kernel.asm	/^f0101ce2:	83 c4 20             	add    $0x20,%esp$/;"	l
f0101ce5	obj/kern/kernel.asm	/^f0101ce5:	a1 5c 55 12 f0       	mov    0xf012555c,%eax$/;"	l
f0101cea	obj/kern/kernel.asm	/^f0101cea:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0101ced	obj/kern/kernel.asm	/^f0101ced:	8b 15 5c 55 12 f0    	mov    0xf012555c,%edx$/;"	l
f0101cf3	obj/kern/kernel.asm	/^f0101cf3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101cf6	obj/kern/kernel.asm	/^f0101cf6:	01 d0                	add    %edx,%eax$/;"	l
f0101cf8	obj/kern/kernel.asm	/^f0101cf8:	a3 5c 55 12 f0       	mov    %eax,0xf012555c$/;"	l
f0101cfd	obj/kern/kernel.asm	/^f0101cfd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0101d00	obj/kern/kernel.asm	/^f0101d00:	c9                   	leave  $/;"	l
f0101d01	obj/kern/kernel.asm	/^f0101d01:	c3                   	ret    $/;"	l
f0101d02	obj/kern/kernel.asm	/^f0101d02 <user_mem_check>:$/;"	l
f0101d02	obj/kern/kernel.asm	/^f0101d02:	55                   	push   %ebp$/;"	l
f0101d03	obj/kern/kernel.asm	/^f0101d03:	89 e5                	mov    %esp,%ebp$/;"	l
f0101d05	obj/kern/kernel.asm	/^f0101d05:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0101d08	obj/kern/kernel.asm	/^f0101d08:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0101d0b	obj/kern/kernel.asm	/^f0101d0b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0101d0e	obj/kern/kernel.asm	/^f0101d0e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0101d11	obj/kern/kernel.asm	/^f0101d11:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0101d14	obj/kern/kernel.asm	/^f0101d14:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0101d17	obj/kern/kernel.asm	/^f0101d17:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0101d1c	obj/kern/kernel.asm	/^f0101d1c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101d1f	obj/kern/kernel.asm	/^f0101d1f:	eb 64                	jmp    f0101d85 <user_mem_check+0x83>$/;"	l
f0101d21	obj/kern/kernel.asm	/^f0101d21:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0101d24	obj/kern/kernel.asm	/^f0101d24:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101d27	obj/kern/kernel.asm	/^f0101d27:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0101d2a	obj/kern/kernel.asm	/^f0101d2a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101d2d	obj/kern/kernel.asm	/^f0101d2d:	6a 00                	push   $0x0$/;"	l
f0101d2f	obj/kern/kernel.asm	/^f0101d2f:	52                   	push   %edx$/;"	l
f0101d30	obj/kern/kernel.asm	/^f0101d30:	50                   	push   %eax$/;"	l
f0101d31	obj/kern/kernel.asm	/^f0101d31:	e8 5d fc ff ff       	call   f0101993 <pgdir_walk>$/;"	l
f0101d36	obj/kern/kernel.asm	/^f0101d36:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101d39	obj/kern/kernel.asm	/^f0101d39:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0101d3c	obj/kern/kernel.asm	/^f0101d3c:	81 7d f4 ff ff 7f ef 	cmpl   $0xef7fffff,-0xc(%ebp)$/;"	l
f0101d43	obj/kern/kernel.asm	/^f0101d43:	77 23                	ja     f0101d68 <user_mem_check+0x66>$/;"	l
f0101d45	obj/kern/kernel.asm	/^f0101d45:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0101d49	obj/kern/kernel.asm	/^f0101d49:	74 1d                	je     f0101d68 <user_mem_check+0x66>$/;"	l
f0101d4b	obj/kern/kernel.asm	/^f0101d4b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0101d4e	obj/kern/kernel.asm	/^f0101d4e:	8b 00                	mov    (%eax),%eax$/;"	l
f0101d50	obj/kern/kernel.asm	/^f0101d50:	83 e0 01             	and    $0x1,%eax$/;"	l
f0101d53	obj/kern/kernel.asm	/^f0101d53:	85 c0                	test   %eax,%eax$/;"	l
f0101d55	obj/kern/kernel.asm	/^f0101d55:	74 11                	je     f0101d68 <user_mem_check+0x66>$/;"	l
f0101d57	obj/kern/kernel.asm	/^f0101d57:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0101d5a	obj/kern/kernel.asm	/^f0101d5a:	8b 10                	mov    (%eax),%edx$/;"	l
f0101d5c	obj/kern/kernel.asm	/^f0101d5c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101d5f	obj/kern/kernel.asm	/^f0101d5f:	21 c2                	and    %eax,%edx$/;"	l
f0101d61	obj/kern/kernel.asm	/^f0101d61:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101d64	obj/kern/kernel.asm	/^f0101d64:	39 c2                	cmp    %eax,%edx$/;"	l
f0101d66	obj/kern/kernel.asm	/^f0101d66:	74 16                	je     f0101d7e <user_mem_check+0x7c>$/;"	l
f0101d68	obj/kern/kernel.asm	/^f0101d68:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0101d6b	obj/kern/kernel.asm	/^f0101d6b:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
f0101d6e	obj/kern/kernel.asm	/^f0101d6e:	0f 43 45 f4          	cmovae -0xc(%ebp),%eax$/;"	l
f0101d72	obj/kern/kernel.asm	/^f0101d72:	a3 34 02 23 f0       	mov    %eax,0xf0230234$/;"	l
f0101d77	obj/kern/kernel.asm	/^f0101d77:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0101d7c	obj/kern/kernel.asm	/^f0101d7c:	eb 19                	jmp    f0101d97 <user_mem_check+0x95>$/;"	l
f0101d7e	obj/kern/kernel.asm	/^f0101d7e:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
f0101d85	obj/kern/kernel.asm	/^f0101d85:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0101d88	obj/kern/kernel.asm	/^f0101d88:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0101d8b	obj/kern/kernel.asm	/^f0101d8b:	01 d0                	add    %edx,%eax$/;"	l
f0101d8d	obj/kern/kernel.asm	/^f0101d8d:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f0101d90	obj/kern/kernel.asm	/^f0101d90:	77 8f                	ja     f0101d21 <user_mem_check+0x1f>$/;"	l
f0101d92	obj/kern/kernel.asm	/^f0101d92:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101d97	obj/kern/kernel.asm	/^f0101d97:	c9                   	leave  $/;"	l
f0101d98	obj/kern/kernel.asm	/^f0101d98:	c3                   	ret    $/;"	l
f0101d99	obj/kern/kernel.asm	/^f0101d99 <user_mem_assert>:$/;"	l
f0101d99	obj/kern/kernel.asm	/^f0101d99:	55                   	push   %ebp$/;"	l
f0101d9a	obj/kern/kernel.asm	/^f0101d9a:	89 e5                	mov    %esp,%ebp$/;"	l
f0101d9c	obj/kern/kernel.asm	/^f0101d9c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0101d9f	obj/kern/kernel.asm	/^f0101d9f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0101da2	obj/kern/kernel.asm	/^f0101da2:	83 c8 04             	or     $0x4,%eax$/;"	l
f0101da5	obj/kern/kernel.asm	/^f0101da5:	50                   	push   %eax$/;"	l
f0101da6	obj/kern/kernel.asm	/^f0101da6:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0101da9	obj/kern/kernel.asm	/^f0101da9:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0101dac	obj/kern/kernel.asm	/^f0101dac:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101daf	obj/kern/kernel.asm	/^f0101daf:	e8 4e ff ff ff       	call   f0101d02 <user_mem_check>$/;"	l
f0101db4	obj/kern/kernel.asm	/^f0101db4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101db7	obj/kern/kernel.asm	/^f0101db7:	85 c0                	test   %eax,%eax$/;"	l
f0101db9	obj/kern/kernel.asm	/^f0101db9:	79 2c                	jns    f0101de7 <user_mem_assert+0x4e>$/;"	l
f0101dbb	obj/kern/kernel.asm	/^f0101dbb:	8b 15 34 02 23 f0    	mov    0xf0230234,%edx$/;"	l
f0101dc1	obj/kern/kernel.asm	/^f0101dc1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101dc4	obj/kern/kernel.asm	/^f0101dc4:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0101dc7	obj/kern/kernel.asm	/^f0101dc7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101dca	obj/kern/kernel.asm	/^f0101dca:	52                   	push   %edx$/;"	l
f0101dcb	obj/kern/kernel.asm	/^f0101dcb:	50                   	push   %eax$/;"	l
f0101dcc	obj/kern/kernel.asm	/^f0101dcc:	68 54 8b 10 f0       	push   $0xf0108b54$/;"	l
f0101dd1	obj/kern/kernel.asm	/^f0101dd1:	e8 d8 2b 00 00       	call   f01049ae <cprintf>$/;"	l
f0101dd6	obj/kern/kernel.asm	/^f0101dd6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101dd9	obj/kern/kernel.asm	/^f0101dd9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101ddc	obj/kern/kernel.asm	/^f0101ddc:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0101ddf	obj/kern/kernel.asm	/^f0101ddf:	e8 c2 27 00 00       	call   f01045a6 <env_destroy>$/;"	l
f0101de4	obj/kern/kernel.asm	/^f0101de4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101de7	obj/kern/kernel.asm	/^f0101de7:	90                   	nop$/;"	l
f0101de8	obj/kern/kernel.asm	/^f0101de8:	c9                   	leave  $/;"	l
f0101de9	obj/kern/kernel.asm	/^f0101de9:	c3                   	ret    $/;"	l
f0101dea	obj/kern/kernel.asm	/^f0101dea <check_page_free_list>:$/;"	l
f0101dea	obj/kern/kernel.asm	/^f0101dea:	55                   	push   %ebp$/;"	l
f0101deb	obj/kern/kernel.asm	/^f0101deb:	89 e5                	mov    %esp,%ebp$/;"	l
f0101ded	obj/kern/kernel.asm	/^f0101ded:	83 ec 48             	sub    $0x48,%esp$/;"	l
f0101df0	obj/kern/kernel.asm	/^f0101df0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0101df3	obj/kern/kernel.asm	/^f0101df3:	88 45 c4             	mov    %al,-0x3c(%ebp)$/;"	l
f0101df6	obj/kern/kernel.asm	/^f0101df6:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0101dfa	obj/kern/kernel.asm	/^f0101dfa:	74 07                	je     f0101e03 <check_page_free_list+0x19>$/;"	l
f0101dfc	obj/kern/kernel.asm	/^f0101dfc:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0101e01	obj/kern/kernel.asm	/^f0101e01:	eb 05                	jmp    f0101e08 <check_page_free_list+0x1e>$/;"	l
f0101e03	obj/kern/kernel.asm	/^f0101e03:	b8 00 04 00 00       	mov    $0x400,%eax$/;"	l
f0101e08	obj/kern/kernel.asm	/^f0101e08:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0101e0b	obj/kern/kernel.asm	/^f0101e0b:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f0101e12	obj/kern/kernel.asm	/^f0101e12:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
f0101e19	obj/kern/kernel.asm	/^f0101e19:	a1 30 02 23 f0       	mov    0xf0230230,%eax$/;"	l
f0101e1e	obj/kern/kernel.asm	/^f0101e1e:	85 c0                	test   %eax,%eax$/;"	l
f0101e20	obj/kern/kernel.asm	/^f0101e20:	75 17                	jne    f0101e39 <check_page_free_list+0x4f>$/;"	l
f0101e22	obj/kern/kernel.asm	/^f0101e22:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101e25	obj/kern/kernel.asm	/^f0101e25:	68 8c 8b 10 f0       	push   $0xf0108b8c$/;"	l
f0101e2a	obj/kern/kernel.asm	/^f0101e2a:	68 d1 02 00 00       	push   $0x2d1$/;"	l
f0101e2f	obj/kern/kernel.asm	/^f0101e2f:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0101e34	obj/kern/kernel.asm	/^f0101e34:	e8 a7 e4 ff ff       	call   f01002e0 <_panic>$/;"	l
f0101e39	obj/kern/kernel.asm	/^f0101e39:	80 7d c4 00          	cmpb   $0x0,-0x3c(%ebp)$/;"	l
f0101e3d	obj/kern/kernel.asm	/^f0101e3d:	74 70                	je     f0101eaf <check_page_free_list+0xc5>$/;"	l
f0101e3f	obj/kern/kernel.asm	/^f0101e3f:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f0101e42	obj/kern/kernel.asm	/^f0101e42:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0101e45	obj/kern/kernel.asm	/^f0101e45:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
f0101e48	obj/kern/kernel.asm	/^f0101e48:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0101e4b	obj/kern/kernel.asm	/^f0101e4b:	a1 30 02 23 f0       	mov    0xf0230230,%eax$/;"	l
f0101e50	obj/kern/kernel.asm	/^f0101e50:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101e53	obj/kern/kernel.asm	/^f0101e53:	eb 3b                	jmp    f0101e90 <check_page_free_list+0xa6>$/;"	l
f0101e55	obj/kern/kernel.asm	/^f0101e55:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101e58	obj/kern/kernel.asm	/^f0101e58:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0101e5b	obj/kern/kernel.asm	/^f0101e5b:	e8 ff f4 ff ff       	call   f010135f <page2pa>$/;"	l
f0101e60	obj/kern/kernel.asm	/^f0101e60:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101e63	obj/kern/kernel.asm	/^f0101e63:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0101e66	obj/kern/kernel.asm	/^f0101e66:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
f0101e69	obj/kern/kernel.asm	/^f0101e69:	0f 93 c0             	setae  %al$/;"	l
f0101e6c	obj/kern/kernel.asm	/^f0101e6c:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0101e6f	obj/kern/kernel.asm	/^f0101e6f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0101e72	obj/kern/kernel.asm	/^f0101e72:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101e75	obj/kern/kernel.asm	/^f0101e75:	8b 44 85 d0          	mov    -0x30(%ebp,%eax,4),%eax$/;"	l
f0101e79	obj/kern/kernel.asm	/^f0101e79:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0101e7c	obj/kern/kernel.asm	/^f0101e7c:	89 10                	mov    %edx,(%eax)$/;"	l
f0101e7e	obj/kern/kernel.asm	/^f0101e7e:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0101e81	obj/kern/kernel.asm	/^f0101e81:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0101e84	obj/kern/kernel.asm	/^f0101e84:	89 54 85 d0          	mov    %edx,-0x30(%ebp,%eax,4)$/;"	l
f0101e88	obj/kern/kernel.asm	/^f0101e88:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101e8b	obj/kern/kernel.asm	/^f0101e8b:	8b 00                	mov    (%eax),%eax$/;"	l
f0101e8d	obj/kern/kernel.asm	/^f0101e8d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101e90	obj/kern/kernel.asm	/^f0101e90:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0101e94	obj/kern/kernel.asm	/^f0101e94:	75 bf                	jne    f0101e55 <check_page_free_list+0x6b>$/;"	l
f0101e96	obj/kern/kernel.asm	/^f0101e96:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0101e99	obj/kern/kernel.asm	/^f0101e99:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0101e9f	obj/kern/kernel.asm	/^f0101e9f:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0101ea2	obj/kern/kernel.asm	/^f0101ea2:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0101ea5	obj/kern/kernel.asm	/^f0101ea5:	89 10                	mov    %edx,(%eax)$/;"	l
f0101ea7	obj/kern/kernel.asm	/^f0101ea7:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0101eaa	obj/kern/kernel.asm	/^f0101eaa:	a3 30 02 23 f0       	mov    %eax,0xf0230230$/;"	l
f0101eaf	obj/kern/kernel.asm	/^f0101eaf:	a1 30 02 23 f0       	mov    0xf0230230,%eax$/;"	l
f0101eb4	obj/kern/kernel.asm	/^f0101eb4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101eb7	obj/kern/kernel.asm	/^f0101eb7:	eb 42                	jmp    f0101efb <check_page_free_list+0x111>$/;"	l
f0101eb9	obj/kern/kernel.asm	/^f0101eb9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101ebc	obj/kern/kernel.asm	/^f0101ebc:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0101ebf	obj/kern/kernel.asm	/^f0101ebf:	e8 9b f4 ff ff       	call   f010135f <page2pa>$/;"	l
f0101ec4	obj/kern/kernel.asm	/^f0101ec4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ec7	obj/kern/kernel.asm	/^f0101ec7:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0101eca	obj/kern/kernel.asm	/^f0101eca:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
f0101ecd	obj/kern/kernel.asm	/^f0101ecd:	73 24                	jae    f0101ef3 <check_page_free_list+0x109>$/;"	l
f0101ecf	obj/kern/kernel.asm	/^f0101ecf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101ed2	obj/kern/kernel.asm	/^f0101ed2:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0101ed5	obj/kern/kernel.asm	/^f0101ed5:	e8 d8 f4 ff ff       	call   f01013b2 <page2kva>$/;"	l
f0101eda	obj/kern/kernel.asm	/^f0101eda:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101edd	obj/kern/kernel.asm	/^f0101edd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0101ee0	obj/kern/kernel.asm	/^f0101ee0:	68 80 00 00 00       	push   $0x80$/;"	l
f0101ee5	obj/kern/kernel.asm	/^f0101ee5:	68 97 00 00 00       	push   $0x97$/;"	l
f0101eea	obj/kern/kernel.asm	/^f0101eea:	50                   	push   %eax$/;"	l
f0101eeb	obj/kern/kernel.asm	/^f0101eeb:	e8 9f 53 00 00       	call   f010728f <memset>$/;"	l
f0101ef0	obj/kern/kernel.asm	/^f0101ef0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101ef3	obj/kern/kernel.asm	/^f0101ef3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101ef6	obj/kern/kernel.asm	/^f0101ef6:	8b 00                	mov    (%eax),%eax$/;"	l
f0101ef8	obj/kern/kernel.asm	/^f0101ef8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101efb	obj/kern/kernel.asm	/^f0101efb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0101eff	obj/kern/kernel.asm	/^f0101eff:	75 b8                	jne    f0101eb9 <check_page_free_list+0xcf>$/;"	l
f0101f01	obj/kern/kernel.asm	/^f0101f01:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101f04	obj/kern/kernel.asm	/^f0101f04:	6a 00                	push   $0x0$/;"	l
f0101f06	obj/kern/kernel.asm	/^f0101f06:	e8 99 f5 ff ff       	call   f01014a4 <boot_alloc>$/;"	l
f0101f0b	obj/kern/kernel.asm	/^f0101f0b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101f0e	obj/kern/kernel.asm	/^f0101f0e:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0101f11	obj/kern/kernel.asm	/^f0101f11:	a1 30 02 23 f0       	mov    0xf0230230,%eax$/;"	l
f0101f16	obj/kern/kernel.asm	/^f0101f16:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0101f19	obj/kern/kernel.asm	/^f0101f19:	e9 c7 01 00 00       	jmp    f01020e5 <check_page_free_list+0x2fb>$/;"	l
f0101f1e	obj/kern/kernel.asm	/^f0101f1e:	a1 f0 0e 23 f0       	mov    0xf0230ef0,%eax$/;"	l
f0101f23	obj/kern/kernel.asm	/^f0101f23:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
f0101f26	obj/kern/kernel.asm	/^f0101f26:	73 19                	jae    f0101f41 <check_page_free_list+0x157>$/;"	l
f0101f28	obj/kern/kernel.asm	/^f0101f28:	68 b0 8b 10 f0       	push   $0xf0108bb0$/;"	l
f0101f2d	obj/kern/kernel.asm	/^f0101f2d:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0101f32	obj/kern/kernel.asm	/^f0101f32:	68 eb 02 00 00       	push   $0x2eb$/;"	l
f0101f37	obj/kern/kernel.asm	/^f0101f37:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0101f3c	obj/kern/kernel.asm	/^f0101f3c:	e8 9f e3 ff ff       	call   f01002e0 <_panic>$/;"	l
f0101f41	obj/kern/kernel.asm	/^f0101f41:	a1 f0 0e 23 f0       	mov    0xf0230ef0,%eax$/;"	l
f0101f46	obj/kern/kernel.asm	/^f0101f46:	8b 15 e8 0e 23 f0    	mov    0xf0230ee8,%edx$/;"	l
f0101f4c	obj/kern/kernel.asm	/^f0101f4c:	c1 e2 03             	shl    $0x3,%edx$/;"	l
f0101f4f	obj/kern/kernel.asm	/^f0101f4f:	01 d0                	add    %edx,%eax$/;"	l
f0101f51	obj/kern/kernel.asm	/^f0101f51:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f0101f54	obj/kern/kernel.asm	/^f0101f54:	77 19                	ja     f0101f6f <check_page_free_list+0x185>$/;"	l
f0101f56	obj/kern/kernel.asm	/^f0101f56:	68 d1 8b 10 f0       	push   $0xf0108bd1$/;"	l
f0101f5b	obj/kern/kernel.asm	/^f0101f5b:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0101f60	obj/kern/kernel.asm	/^f0101f60:	68 ec 02 00 00       	push   $0x2ec$/;"	l
f0101f65	obj/kern/kernel.asm	/^f0101f65:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0101f6a	obj/kern/kernel.asm	/^f0101f6a:	e8 71 e3 ff ff       	call   f01002e0 <_panic>$/;"	l
f0101f6f	obj/kern/kernel.asm	/^f0101f6f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0101f72	obj/kern/kernel.asm	/^f0101f72:	8b 15 f0 0e 23 f0    	mov    0xf0230ef0,%edx$/;"	l
f0101f78	obj/kern/kernel.asm	/^f0101f78:	29 d0                	sub    %edx,%eax$/;"	l
f0101f7a	obj/kern/kernel.asm	/^f0101f7a:	83 e0 07             	and    $0x7,%eax$/;"	l
f0101f7d	obj/kern/kernel.asm	/^f0101f7d:	85 c0                	test   %eax,%eax$/;"	l
f0101f7f	obj/kern/kernel.asm	/^f0101f7f:	74 19                	je     f0101f9a <check_page_free_list+0x1b0>$/;"	l
f0101f81	obj/kern/kernel.asm	/^f0101f81:	68 e8 8b 10 f0       	push   $0xf0108be8$/;"	l
f0101f86	obj/kern/kernel.asm	/^f0101f86:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0101f8b	obj/kern/kernel.asm	/^f0101f8b:	68 ed 02 00 00       	push   $0x2ed$/;"	l
f0101f90	obj/kern/kernel.asm	/^f0101f90:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0101f95	obj/kern/kernel.asm	/^f0101f95:	e8 46 e3 ff ff       	call   f01002e0 <_panic>$/;"	l
f0101f9a	obj/kern/kernel.asm	/^f0101f9a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101f9d	obj/kern/kernel.asm	/^f0101f9d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0101fa0	obj/kern/kernel.asm	/^f0101fa0:	e8 ba f3 ff ff       	call   f010135f <page2pa>$/;"	l
f0101fa5	obj/kern/kernel.asm	/^f0101fa5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101fa8	obj/kern/kernel.asm	/^f0101fa8:	85 c0                	test   %eax,%eax$/;"	l
f0101faa	obj/kern/kernel.asm	/^f0101faa:	75 19                	jne    f0101fc5 <check_page_free_list+0x1db>$/;"	l
f0101fac	obj/kern/kernel.asm	/^f0101fac:	68 1a 8c 10 f0       	push   $0xf0108c1a$/;"	l
f0101fb1	obj/kern/kernel.asm	/^f0101fb1:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0101fb6	obj/kern/kernel.asm	/^f0101fb6:	68 f0 02 00 00       	push   $0x2f0$/;"	l
f0101fbb	obj/kern/kernel.asm	/^f0101fbb:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0101fc0	obj/kern/kernel.asm	/^f0101fc0:	e8 1b e3 ff ff       	call   f01002e0 <_panic>$/;"	l
f0101fc5	obj/kern/kernel.asm	/^f0101fc5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101fc8	obj/kern/kernel.asm	/^f0101fc8:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0101fcb	obj/kern/kernel.asm	/^f0101fcb:	e8 8f f3 ff ff       	call   f010135f <page2pa>$/;"	l
f0101fd0	obj/kern/kernel.asm	/^f0101fd0:	83 c4 10             	add    $0x10,%esp$/;"	l
f0101fd3	obj/kern/kernel.asm	/^f0101fd3:	3d 00 00 0a 00       	cmp    $0xa0000,%eax$/;"	l
f0101fd8	obj/kern/kernel.asm	/^f0101fd8:	75 19                	jne    f0101ff3 <check_page_free_list+0x209>$/;"	l
f0101fda	obj/kern/kernel.asm	/^f0101fda:	68 2b 8c 10 f0       	push   $0xf0108c2b$/;"	l
f0101fdf	obj/kern/kernel.asm	/^f0101fdf:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0101fe4	obj/kern/kernel.asm	/^f0101fe4:	68 f1 02 00 00       	push   $0x2f1$/;"	l
f0101fe9	obj/kern/kernel.asm	/^f0101fe9:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0101fee	obj/kern/kernel.asm	/^f0101fee:	e8 ed e2 ff ff       	call   f01002e0 <_panic>$/;"	l
f0101ff3	obj/kern/kernel.asm	/^f0101ff3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0101ff6	obj/kern/kernel.asm	/^f0101ff6:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0101ff9	obj/kern/kernel.asm	/^f0101ff9:	e8 61 f3 ff ff       	call   f010135f <page2pa>$/;"	l
f0101ffe	obj/kern/kernel.asm	/^f0101ffe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102001	obj/kern/kernel.asm	/^f0102001:	3d 00 f0 0f 00       	cmp    $0xff000,%eax$/;"	l
f0102006	obj/kern/kernel.asm	/^f0102006:	75 19                	jne    f0102021 <check_page_free_list+0x237>$/;"	l
f0102008	obj/kern/kernel.asm	/^f0102008:	68 44 8c 10 f0       	push   $0xf0108c44$/;"	l
f010200d	obj/kern/kernel.asm	/^f010200d:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102012	obj/kern/kernel.asm	/^f0102012:	68 f2 02 00 00       	push   $0x2f2$/;"	l
f0102017	obj/kern/kernel.asm	/^f0102017:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f010201c	obj/kern/kernel.asm	/^f010201c:	e8 bf e2 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102021	obj/kern/kernel.asm	/^f0102021:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102024	obj/kern/kernel.asm	/^f0102024:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0102027	obj/kern/kernel.asm	/^f0102027:	e8 33 f3 ff ff       	call   f010135f <page2pa>$/;"	l
f010202c	obj/kern/kernel.asm	/^f010202c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010202f	obj/kern/kernel.asm	/^f010202f:	3d 00 00 10 00       	cmp    $0x100000,%eax$/;"	l
f0102034	obj/kern/kernel.asm	/^f0102034:	75 19                	jne    f010204f <check_page_free_list+0x265>$/;"	l
f0102036	obj/kern/kernel.asm	/^f0102036:	68 67 8c 10 f0       	push   $0xf0108c67$/;"	l
f010203b	obj/kern/kernel.asm	/^f010203b:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102040	obj/kern/kernel.asm	/^f0102040:	68 f3 02 00 00       	push   $0x2f3$/;"	l
f0102045	obj/kern/kernel.asm	/^f0102045:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f010204a	obj/kern/kernel.asm	/^f010204a:	e8 91 e2 ff ff       	call   f01002e0 <_panic>$/;"	l
f010204f	obj/kern/kernel.asm	/^f010204f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102052	obj/kern/kernel.asm	/^f0102052:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0102055	obj/kern/kernel.asm	/^f0102055:	e8 05 f3 ff ff       	call   f010135f <page2pa>$/;"	l
f010205a	obj/kern/kernel.asm	/^f010205a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010205d	obj/kern/kernel.asm	/^f010205d:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f0102062	obj/kern/kernel.asm	/^f0102062:	76 2c                	jbe    f0102090 <check_page_free_list+0x2a6>$/;"	l
f0102064	obj/kern/kernel.asm	/^f0102064:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102067	obj/kern/kernel.asm	/^f0102067:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f010206a	obj/kern/kernel.asm	/^f010206a:	e8 43 f3 ff ff       	call   f01013b2 <page2kva>$/;"	l
f010206f	obj/kern/kernel.asm	/^f010206f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102072	obj/kern/kernel.asm	/^f0102072:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f0102075	obj/kern/kernel.asm	/^f0102075:	73 19                	jae    f0102090 <check_page_free_list+0x2a6>$/;"	l
f0102077	obj/kern/kernel.asm	/^f0102077:	68 84 8c 10 f0       	push   $0xf0108c84$/;"	l
f010207c	obj/kern/kernel.asm	/^f010207c:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102081	obj/kern/kernel.asm	/^f0102081:	68 f4 02 00 00       	push   $0x2f4$/;"	l
f0102086	obj/kern/kernel.asm	/^f0102086:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f010208b	obj/kern/kernel.asm	/^f010208b:	e8 50 e2 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102090	obj/kern/kernel.asm	/^f0102090:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102093	obj/kern/kernel.asm	/^f0102093:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0102096	obj/kern/kernel.asm	/^f0102096:	e8 c4 f2 ff ff       	call   f010135f <page2pa>$/;"	l
f010209b	obj/kern/kernel.asm	/^f010209b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010209e	obj/kern/kernel.asm	/^f010209e:	3d 00 70 00 00       	cmp    $0x7000,%eax$/;"	l
f01020a3	obj/kern/kernel.asm	/^f01020a3:	75 19                	jne    f01020be <check_page_free_list+0x2d4>$/;"	l
f01020a5	obj/kern/kernel.asm	/^f01020a5:	68 c9 8c 10 f0       	push   $0xf0108cc9$/;"	l
f01020aa	obj/kern/kernel.asm	/^f01020aa:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01020af	obj/kern/kernel.asm	/^f01020af:	68 f6 02 00 00       	push   $0x2f6$/;"	l
f01020b4	obj/kern/kernel.asm	/^f01020b4:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01020b9	obj/kern/kernel.asm	/^f01020b9:	e8 22 e2 ff ff       	call   f01002e0 <_panic>$/;"	l
f01020be	obj/kern/kernel.asm	/^f01020be:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01020c1	obj/kern/kernel.asm	/^f01020c1:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f01020c4	obj/kern/kernel.asm	/^f01020c4:	e8 96 f2 ff ff       	call   f010135f <page2pa>$/;"	l
f01020c9	obj/kern/kernel.asm	/^f01020c9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01020cc	obj/kern/kernel.asm	/^f01020cc:	3d ff ff 0f 00       	cmp    $0xfffff,%eax$/;"	l
f01020d1	obj/kern/kernel.asm	/^f01020d1:	77 06                	ja     f01020d9 <check_page_free_list+0x2ef>$/;"	l
f01020d3	obj/kern/kernel.asm	/^f01020d3:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
f01020d7	obj/kern/kernel.asm	/^f01020d7:	eb 04                	jmp    f01020dd <check_page_free_list+0x2f3>$/;"	l
f01020d9	obj/kern/kernel.asm	/^f01020d9:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
f01020dd	obj/kern/kernel.asm	/^f01020dd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01020e0	obj/kern/kernel.asm	/^f01020e0:	8b 00                	mov    (%eax),%eax$/;"	l
f01020e2	obj/kern/kernel.asm	/^f01020e2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01020e5	obj/kern/kernel.asm	/^f01020e5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f01020e9	obj/kern/kernel.asm	/^f01020e9:	0f 85 2f fe ff ff    	jne    f0101f1e <check_page_free_list+0x134>$/;"	l
f01020ef	obj/kern/kernel.asm	/^f01020ef:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f01020f3	obj/kern/kernel.asm	/^f01020f3:	7f 19                	jg     f010210e <check_page_free_list+0x324>$/;"	l
f01020f5	obj/kern/kernel.asm	/^f01020f5:	68 e6 8c 10 f0       	push   $0xf0108ce6$/;"	l
f01020fa	obj/kern/kernel.asm	/^f01020fa:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01020ff	obj/kern/kernel.asm	/^f01020ff:	68 fe 02 00 00       	push   $0x2fe$/;"	l
f0102104	obj/kern/kernel.asm	/^f0102104:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102109	obj/kern/kernel.asm	/^f0102109:	e8 d2 e1 ff ff       	call   f01002e0 <_panic>$/;"	l
f010210e	obj/kern/kernel.asm	/^f010210e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f0102112	obj/kern/kernel.asm	/^f0102112:	7f 19                	jg     f010212d <check_page_free_list+0x343>$/;"	l
f0102114	obj/kern/kernel.asm	/^f0102114:	68 f8 8c 10 f0       	push   $0xf0108cf8$/;"	l
f0102119	obj/kern/kernel.asm	/^f0102119:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f010211e	obj/kern/kernel.asm	/^f010211e:	68 ff 02 00 00       	push   $0x2ff$/;"	l
f0102123	obj/kern/kernel.asm	/^f0102123:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102128	obj/kern/kernel.asm	/^f0102128:	e8 b3 e1 ff ff       	call   f01002e0 <_panic>$/;"	l
f010212d	obj/kern/kernel.asm	/^f010212d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102130	obj/kern/kernel.asm	/^f0102130:	68 0c 8d 10 f0       	push   $0xf0108d0c$/;"	l
f0102135	obj/kern/kernel.asm	/^f0102135:	e8 74 28 00 00       	call   f01049ae <cprintf>$/;"	l
f010213a	obj/kern/kernel.asm	/^f010213a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010213d	obj/kern/kernel.asm	/^f010213d:	90                   	nop$/;"	l
f010213e	obj/kern/kernel.asm	/^f010213e:	c9                   	leave  $/;"	l
f010213f	obj/kern/kernel.asm	/^f010213f:	c3                   	ret    $/;"	l
f0102140	obj/kern/kernel.asm	/^f0102140 <check_page_alloc>:$/;"	l
f0102140	obj/kern/kernel.asm	/^f0102140:	55                   	push   %ebp$/;"	l
f0102141	obj/kern/kernel.asm	/^f0102141:	89 e5                	mov    %esp,%ebp$/;"	l
f0102143	obj/kern/kernel.asm	/^f0102143:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0102146	obj/kern/kernel.asm	/^f0102146:	a1 f0 0e 23 f0       	mov    0xf0230ef0,%eax$/;"	l
f010214b	obj/kern/kernel.asm	/^f010214b:	85 c0                	test   %eax,%eax$/;"	l
f010214d	obj/kern/kernel.asm	/^f010214d:	75 17                	jne    f0102166 <check_page_alloc+0x26>$/;"	l
f010214f	obj/kern/kernel.asm	/^f010214f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102152	obj/kern/kernel.asm	/^f0102152:	68 2f 8d 10 f0       	push   $0xf0108d2f$/;"	l
f0102157	obj/kern/kernel.asm	/^f0102157:	68 12 03 00 00       	push   $0x312$/;"	l
f010215c	obj/kern/kernel.asm	/^f010215c:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102161	obj/kern/kernel.asm	/^f0102161:	e8 7a e1 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102166	obj/kern/kernel.asm	/^f0102166:	a1 30 02 23 f0       	mov    0xf0230230,%eax$/;"	l
f010216b	obj/kern/kernel.asm	/^f010216b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f010216e	obj/kern/kernel.asm	/^f010216e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f0102175	obj/kern/kernel.asm	/^f0102175:	eb 0c                	jmp    f0102183 <check_page_alloc+0x43>$/;"	l
f0102177	obj/kern/kernel.asm	/^f0102177:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
f010217b	obj/kern/kernel.asm	/^f010217b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010217e	obj/kern/kernel.asm	/^f010217e:	8b 00                	mov    (%eax),%eax$/;"	l
f0102180	obj/kern/kernel.asm	/^f0102180:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0102183	obj/kern/kernel.asm	/^f0102183:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0102187	obj/kern/kernel.asm	/^f0102187:	75 ee                	jne    f0102177 <check_page_alloc+0x37>$/;"	l
f0102189	obj/kern/kernel.asm	/^f0102189:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0102190	obj/kern/kernel.asm	/^f0102190:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0102193	obj/kern/kernel.asm	/^f0102193:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102196	obj/kern/kernel.asm	/^f0102196:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0102199	obj/kern/kernel.asm	/^f0102199:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f010219c	obj/kern/kernel.asm	/^f010219c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010219f	obj/kern/kernel.asm	/^f010219f:	6a 00                	push   $0x0$/;"	l
f01021a1	obj/kern/kernel.asm	/^f01021a1:	e8 0e f7 ff ff       	call   f01018b4 <page_alloc>$/;"	l
f01021a6	obj/kern/kernel.asm	/^f01021a6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01021a9	obj/kern/kernel.asm	/^f01021a9:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01021ac	obj/kern/kernel.asm	/^f01021ac:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f01021b0	obj/kern/kernel.asm	/^f01021b0:	75 19                	jne    f01021cb <check_page_alloc+0x8b>$/;"	l
f01021b2	obj/kern/kernel.asm	/^f01021b2:	68 4a 8d 10 f0       	push   $0xf0108d4a$/;"	l
f01021b7	obj/kern/kernel.asm	/^f01021b7:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01021bc	obj/kern/kernel.asm	/^f01021bc:	68 1a 03 00 00       	push   $0x31a$/;"	l
f01021c1	obj/kern/kernel.asm	/^f01021c1:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01021c6	obj/kern/kernel.asm	/^f01021c6:	e8 15 e1 ff ff       	call   f01002e0 <_panic>$/;"	l
f01021cb	obj/kern/kernel.asm	/^f01021cb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01021ce	obj/kern/kernel.asm	/^f01021ce:	6a 00                	push   $0x0$/;"	l
f01021d0	obj/kern/kernel.asm	/^f01021d0:	e8 df f6 ff ff       	call   f01018b4 <page_alloc>$/;"	l
f01021d5	obj/kern/kernel.asm	/^f01021d5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01021d8	obj/kern/kernel.asm	/^f01021d8:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01021db	obj/kern/kernel.asm	/^f01021db:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f01021df	obj/kern/kernel.asm	/^f01021df:	75 19                	jne    f01021fa <check_page_alloc+0xba>$/;"	l
f01021e1	obj/kern/kernel.asm	/^f01021e1:	68 60 8d 10 f0       	push   $0xf0108d60$/;"	l
f01021e6	obj/kern/kernel.asm	/^f01021e6:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01021eb	obj/kern/kernel.asm	/^f01021eb:	68 1b 03 00 00       	push   $0x31b$/;"	l
f01021f0	obj/kern/kernel.asm	/^f01021f0:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01021f5	obj/kern/kernel.asm	/^f01021f5:	e8 e6 e0 ff ff       	call   f01002e0 <_panic>$/;"	l
f01021fa	obj/kern/kernel.asm	/^f01021fa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01021fd	obj/kern/kernel.asm	/^f01021fd:	6a 00                	push   $0x0$/;"	l
f01021ff	obj/kern/kernel.asm	/^f01021ff:	e8 b0 f6 ff ff       	call   f01018b4 <page_alloc>$/;"	l
f0102204	obj/kern/kernel.asm	/^f0102204:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102207	obj/kern/kernel.asm	/^f0102207:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f010220a	obj/kern/kernel.asm	/^f010220a:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f010220e	obj/kern/kernel.asm	/^f010220e:	75 19                	jne    f0102229 <check_page_alloc+0xe9>$/;"	l
f0102210	obj/kern/kernel.asm	/^f0102210:	68 76 8d 10 f0       	push   $0xf0108d76$/;"	l
f0102215	obj/kern/kernel.asm	/^f0102215:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f010221a	obj/kern/kernel.asm	/^f010221a:	68 1c 03 00 00       	push   $0x31c$/;"	l
f010221f	obj/kern/kernel.asm	/^f010221f:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102224	obj/kern/kernel.asm	/^f0102224:	e8 b7 e0 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102229	obj/kern/kernel.asm	/^f0102229:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f010222d	obj/kern/kernel.asm	/^f010222d:	75 19                	jne    f0102248 <check_page_alloc+0x108>$/;"	l
f010222f	obj/kern/kernel.asm	/^f010222f:	68 8c 8d 10 f0       	push   $0xf0108d8c$/;"	l
f0102234	obj/kern/kernel.asm	/^f0102234:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102239	obj/kern/kernel.asm	/^f0102239:	68 1e 03 00 00       	push   $0x31e$/;"	l
f010223e	obj/kern/kernel.asm	/^f010223e:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102243	obj/kern/kernel.asm	/^f0102243:	e8 98 e0 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102248	obj/kern/kernel.asm	/^f0102248:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f010224c	obj/kern/kernel.asm	/^f010224c:	74 08                	je     f0102256 <check_page_alloc+0x116>$/;"	l
f010224e	obj/kern/kernel.asm	/^f010224e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0102251	obj/kern/kernel.asm	/^f0102251:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f0102254	obj/kern/kernel.asm	/^f0102254:	75 19                	jne    f010226f <check_page_alloc+0x12f>$/;"	l
f0102256	obj/kern/kernel.asm	/^f0102256:	68 90 8d 10 f0       	push   $0xf0108d90$/;"	l
f010225b	obj/kern/kernel.asm	/^f010225b:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102260	obj/kern/kernel.asm	/^f0102260:	68 1f 03 00 00       	push   $0x31f$/;"	l
f0102265	obj/kern/kernel.asm	/^f0102265:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f010226a	obj/kern/kernel.asm	/^f010226a:	e8 71 e0 ff ff       	call   f01002e0 <_panic>$/;"	l
f010226f	obj/kern/kernel.asm	/^f010226f:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0102273	obj/kern/kernel.asm	/^f0102273:	74 10                	je     f0102285 <check_page_alloc+0x145>$/;"	l
f0102275	obj/kern/kernel.asm	/^f0102275:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0102278	obj/kern/kernel.asm	/^f0102278:	3b 45 e4             	cmp    -0x1c(%ebp),%eax$/;"	l
f010227b	obj/kern/kernel.asm	/^f010227b:	74 08                	je     f0102285 <check_page_alloc+0x145>$/;"	l
f010227d	obj/kern/kernel.asm	/^f010227d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0102280	obj/kern/kernel.asm	/^f0102280:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f0102283	obj/kern/kernel.asm	/^f0102283:	75 19                	jne    f010229e <check_page_alloc+0x15e>$/;"	l
f0102285	obj/kern/kernel.asm	/^f0102285:	68 a4 8d 10 f0       	push   $0xf0108da4$/;"	l
f010228a	obj/kern/kernel.asm	/^f010228a:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f010228f	obj/kern/kernel.asm	/^f010228f:	68 20 03 00 00       	push   $0x320$/;"	l
f0102294	obj/kern/kernel.asm	/^f0102294:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102299	obj/kern/kernel.asm	/^f0102299:	e8 42 e0 ff ff       	call   f01002e0 <_panic>$/;"	l
f010229e	obj/kern/kernel.asm	/^f010229e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01022a1	obj/kern/kernel.asm	/^f01022a1:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f01022a4	obj/kern/kernel.asm	/^f01022a4:	e8 b6 f0 ff ff       	call   f010135f <page2pa>$/;"	l
f01022a9	obj/kern/kernel.asm	/^f01022a9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01022ac	obj/kern/kernel.asm	/^f01022ac:	89 c2                	mov    %eax,%edx$/;"	l
f01022ae	obj/kern/kernel.asm	/^f01022ae:	a1 e8 0e 23 f0       	mov    0xf0230ee8,%eax$/;"	l
f01022b3	obj/kern/kernel.asm	/^f01022b3:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01022b6	obj/kern/kernel.asm	/^f01022b6:	39 c2                	cmp    %eax,%edx$/;"	l
f01022b8	obj/kern/kernel.asm	/^f01022b8:	72 19                	jb     f01022d3 <check_page_alloc+0x193>$/;"	l
f01022ba	obj/kern/kernel.asm	/^f01022ba:	68 c4 8d 10 f0       	push   $0xf0108dc4$/;"	l
f01022bf	obj/kern/kernel.asm	/^f01022bf:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01022c4	obj/kern/kernel.asm	/^f01022c4:	68 21 03 00 00       	push   $0x321$/;"	l
f01022c9	obj/kern/kernel.asm	/^f01022c9:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01022ce	obj/kern/kernel.asm	/^f01022ce:	e8 0d e0 ff ff       	call   f01002e0 <_panic>$/;"	l
f01022d3	obj/kern/kernel.asm	/^f01022d3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01022d6	obj/kern/kernel.asm	/^f01022d6:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f01022d9	obj/kern/kernel.asm	/^f01022d9:	e8 81 f0 ff ff       	call   f010135f <page2pa>$/;"	l
f01022de	obj/kern/kernel.asm	/^f01022de:	83 c4 10             	add    $0x10,%esp$/;"	l
f01022e1	obj/kern/kernel.asm	/^f01022e1:	89 c2                	mov    %eax,%edx$/;"	l
f01022e3	obj/kern/kernel.asm	/^f01022e3:	a1 e8 0e 23 f0       	mov    0xf0230ee8,%eax$/;"	l
f01022e8	obj/kern/kernel.asm	/^f01022e8:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01022eb	obj/kern/kernel.asm	/^f01022eb:	39 c2                	cmp    %eax,%edx$/;"	l
f01022ed	obj/kern/kernel.asm	/^f01022ed:	72 19                	jb     f0102308 <check_page_alloc+0x1c8>$/;"	l
f01022ef	obj/kern/kernel.asm	/^f01022ef:	68 e1 8d 10 f0       	push   $0xf0108de1$/;"	l
f01022f4	obj/kern/kernel.asm	/^f01022f4:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01022f9	obj/kern/kernel.asm	/^f01022f9:	68 22 03 00 00       	push   $0x322$/;"	l
f01022fe	obj/kern/kernel.asm	/^f01022fe:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102303	obj/kern/kernel.asm	/^f0102303:	e8 d8 df ff ff       	call   f01002e0 <_panic>$/;"	l
f0102308	obj/kern/kernel.asm	/^f0102308:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010230b	obj/kern/kernel.asm	/^f010230b:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
f010230e	obj/kern/kernel.asm	/^f010230e:	e8 4c f0 ff ff       	call   f010135f <page2pa>$/;"	l
f0102313	obj/kern/kernel.asm	/^f0102313:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102316	obj/kern/kernel.asm	/^f0102316:	89 c2                	mov    %eax,%edx$/;"	l
f0102318	obj/kern/kernel.asm	/^f0102318:	a1 e8 0e 23 f0       	mov    0xf0230ee8,%eax$/;"	l
f010231d	obj/kern/kernel.asm	/^f010231d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102320	obj/kern/kernel.asm	/^f0102320:	39 c2                	cmp    %eax,%edx$/;"	l
f0102322	obj/kern/kernel.asm	/^f0102322:	72 19                	jb     f010233d <check_page_alloc+0x1fd>$/;"	l
f0102324	obj/kern/kernel.asm	/^f0102324:	68 fe 8d 10 f0       	push   $0xf0108dfe$/;"	l
f0102329	obj/kern/kernel.asm	/^f0102329:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f010232e	obj/kern/kernel.asm	/^f010232e:	68 23 03 00 00       	push   $0x323$/;"	l
f0102333	obj/kern/kernel.asm	/^f0102333:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102338	obj/kern/kernel.asm	/^f0102338:	e8 a3 df ff ff       	call   f01002e0 <_panic>$/;"	l
f010233d	obj/kern/kernel.asm	/^f010233d:	a1 30 02 23 f0       	mov    0xf0230230,%eax$/;"	l
f0102342	obj/kern/kernel.asm	/^f0102342:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f0102345	obj/kern/kernel.asm	/^f0102345:	c7 05 30 02 23 f0 00 	movl   $0x0,0xf0230230$/;"	l
f010234c	obj/kern/kernel.asm	/^f010234c:	00 00 00 $/;"	l
f010234f	obj/kern/kernel.asm	/^f010234f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102352	obj/kern/kernel.asm	/^f0102352:	6a 00                	push   $0x0$/;"	l
f0102354	obj/kern/kernel.asm	/^f0102354:	e8 5b f5 ff ff       	call   f01018b4 <page_alloc>$/;"	l
f0102359	obj/kern/kernel.asm	/^f0102359:	83 c4 10             	add    $0x10,%esp$/;"	l
f010235c	obj/kern/kernel.asm	/^f010235c:	85 c0                	test   %eax,%eax$/;"	l
f010235e	obj/kern/kernel.asm	/^f010235e:	74 19                	je     f0102379 <check_page_alloc+0x239>$/;"	l
f0102360	obj/kern/kernel.asm	/^f0102360:	68 1b 8e 10 f0       	push   $0xf0108e1b$/;"	l
f0102365	obj/kern/kernel.asm	/^f0102365:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f010236a	obj/kern/kernel.asm	/^f010236a:	68 2a 03 00 00       	push   $0x32a$/;"	l
f010236f	obj/kern/kernel.asm	/^f010236f:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102374	obj/kern/kernel.asm	/^f0102374:	e8 67 df ff ff       	call   f01002e0 <_panic>$/;"	l
f0102379	obj/kern/kernel.asm	/^f0102379:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010237c	obj/kern/kernel.asm	/^f010237c:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f010237f	obj/kern/kernel.asm	/^f010237f:	e8 93 f5 ff ff       	call   f0101917 <page_free>$/;"	l
f0102384	obj/kern/kernel.asm	/^f0102384:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102387	obj/kern/kernel.asm	/^f0102387:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010238a	obj/kern/kernel.asm	/^f010238a:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f010238d	obj/kern/kernel.asm	/^f010238d:	e8 85 f5 ff ff       	call   f0101917 <page_free>$/;"	l
f0102392	obj/kern/kernel.asm	/^f0102392:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102395	obj/kern/kernel.asm	/^f0102395:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102398	obj/kern/kernel.asm	/^f0102398:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
f010239b	obj/kern/kernel.asm	/^f010239b:	e8 77 f5 ff ff       	call   f0101917 <page_free>$/;"	l
f01023a0	obj/kern/kernel.asm	/^f01023a0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01023a3	obj/kern/kernel.asm	/^f01023a3:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f01023aa	obj/kern/kernel.asm	/^f01023aa:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f01023ad	obj/kern/kernel.asm	/^f01023ad:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01023b0	obj/kern/kernel.asm	/^f01023b0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01023b3	obj/kern/kernel.asm	/^f01023b3:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01023b6	obj/kern/kernel.asm	/^f01023b6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01023b9	obj/kern/kernel.asm	/^f01023b9:	6a 00                	push   $0x0$/;"	l
f01023bb	obj/kern/kernel.asm	/^f01023bb:	e8 f4 f4 ff ff       	call   f01018b4 <page_alloc>$/;"	l
f01023c0	obj/kern/kernel.asm	/^f01023c0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01023c3	obj/kern/kernel.asm	/^f01023c3:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01023c6	obj/kern/kernel.asm	/^f01023c6:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f01023ca	obj/kern/kernel.asm	/^f01023ca:	75 19                	jne    f01023e5 <check_page_alloc+0x2a5>$/;"	l
f01023cc	obj/kern/kernel.asm	/^f01023cc:	68 4a 8d 10 f0       	push   $0xf0108d4a$/;"	l
f01023d1	obj/kern/kernel.asm	/^f01023d1:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01023d6	obj/kern/kernel.asm	/^f01023d6:	68 31 03 00 00       	push   $0x331$/;"	l
f01023db	obj/kern/kernel.asm	/^f01023db:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01023e0	obj/kern/kernel.asm	/^f01023e0:	e8 fb de ff ff       	call   f01002e0 <_panic>$/;"	l
f01023e5	obj/kern/kernel.asm	/^f01023e5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01023e8	obj/kern/kernel.asm	/^f01023e8:	6a 00                	push   $0x0$/;"	l
f01023ea	obj/kern/kernel.asm	/^f01023ea:	e8 c5 f4 ff ff       	call   f01018b4 <page_alloc>$/;"	l
f01023ef	obj/kern/kernel.asm	/^f01023ef:	83 c4 10             	add    $0x10,%esp$/;"	l
f01023f2	obj/kern/kernel.asm	/^f01023f2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f01023f5	obj/kern/kernel.asm	/^f01023f5:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f01023f9	obj/kern/kernel.asm	/^f01023f9:	75 19                	jne    f0102414 <check_page_alloc+0x2d4>$/;"	l
f01023fb	obj/kern/kernel.asm	/^f01023fb:	68 60 8d 10 f0       	push   $0xf0108d60$/;"	l
f0102400	obj/kern/kernel.asm	/^f0102400:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102405	obj/kern/kernel.asm	/^f0102405:	68 32 03 00 00       	push   $0x332$/;"	l
f010240a	obj/kern/kernel.asm	/^f010240a:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f010240f	obj/kern/kernel.asm	/^f010240f:	e8 cc de ff ff       	call   f01002e0 <_panic>$/;"	l
f0102414	obj/kern/kernel.asm	/^f0102414:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102417	obj/kern/kernel.asm	/^f0102417:	6a 00                	push   $0x0$/;"	l
f0102419	obj/kern/kernel.asm	/^f0102419:	e8 96 f4 ff ff       	call   f01018b4 <page_alloc>$/;"	l
f010241e	obj/kern/kernel.asm	/^f010241e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102421	obj/kern/kernel.asm	/^f0102421:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0102424	obj/kern/kernel.asm	/^f0102424:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0102428	obj/kern/kernel.asm	/^f0102428:	75 19                	jne    f0102443 <check_page_alloc+0x303>$/;"	l
f010242a	obj/kern/kernel.asm	/^f010242a:	68 76 8d 10 f0       	push   $0xf0108d76$/;"	l
f010242f	obj/kern/kernel.asm	/^f010242f:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102434	obj/kern/kernel.asm	/^f0102434:	68 33 03 00 00       	push   $0x333$/;"	l
f0102439	obj/kern/kernel.asm	/^f0102439:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f010243e	obj/kern/kernel.asm	/^f010243e:	e8 9d de ff ff       	call   f01002e0 <_panic>$/;"	l
f0102443	obj/kern/kernel.asm	/^f0102443:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0102447	obj/kern/kernel.asm	/^f0102447:	75 19                	jne    f0102462 <check_page_alloc+0x322>$/;"	l
f0102449	obj/kern/kernel.asm	/^f0102449:	68 8c 8d 10 f0       	push   $0xf0108d8c$/;"	l
f010244e	obj/kern/kernel.asm	/^f010244e:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102453	obj/kern/kernel.asm	/^f0102453:	68 34 03 00 00       	push   $0x334$/;"	l
f0102458	obj/kern/kernel.asm	/^f0102458:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f010245d	obj/kern/kernel.asm	/^f010245d:	e8 7e de ff ff       	call   f01002e0 <_panic>$/;"	l
f0102462	obj/kern/kernel.asm	/^f0102462:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0102466	obj/kern/kernel.asm	/^f0102466:	74 08                	je     f0102470 <check_page_alloc+0x330>$/;"	l
f0102468	obj/kern/kernel.asm	/^f0102468:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010246b	obj/kern/kernel.asm	/^f010246b:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f010246e	obj/kern/kernel.asm	/^f010246e:	75 19                	jne    f0102489 <check_page_alloc+0x349>$/;"	l
f0102470	obj/kern/kernel.asm	/^f0102470:	68 90 8d 10 f0       	push   $0xf0108d90$/;"	l
f0102475	obj/kern/kernel.asm	/^f0102475:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f010247a	obj/kern/kernel.asm	/^f010247a:	68 35 03 00 00       	push   $0x335$/;"	l
f010247f	obj/kern/kernel.asm	/^f010247f:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102484	obj/kern/kernel.asm	/^f0102484:	e8 57 de ff ff       	call   f01002e0 <_panic>$/;"	l
f0102489	obj/kern/kernel.asm	/^f0102489:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f010248d	obj/kern/kernel.asm	/^f010248d:	74 10                	je     f010249f <check_page_alloc+0x35f>$/;"	l
f010248f	obj/kern/kernel.asm	/^f010248f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0102492	obj/kern/kernel.asm	/^f0102492:	3b 45 e4             	cmp    -0x1c(%ebp),%eax$/;"	l
f0102495	obj/kern/kernel.asm	/^f0102495:	74 08                	je     f010249f <check_page_alloc+0x35f>$/;"	l
f0102497	obj/kern/kernel.asm	/^f0102497:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f010249a	obj/kern/kernel.asm	/^f010249a:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
f010249d	obj/kern/kernel.asm	/^f010249d:	75 19                	jne    f01024b8 <check_page_alloc+0x378>$/;"	l
f010249f	obj/kern/kernel.asm	/^f010249f:	68 a4 8d 10 f0       	push   $0xf0108da4$/;"	l
f01024a4	obj/kern/kernel.asm	/^f01024a4:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01024a9	obj/kern/kernel.asm	/^f01024a9:	68 36 03 00 00       	push   $0x336$/;"	l
f01024ae	obj/kern/kernel.asm	/^f01024ae:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01024b3	obj/kern/kernel.asm	/^f01024b3:	e8 28 de ff ff       	call   f01002e0 <_panic>$/;"	l
f01024b8	obj/kern/kernel.asm	/^f01024b8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01024bb	obj/kern/kernel.asm	/^f01024bb:	6a 00                	push   $0x0$/;"	l
f01024bd	obj/kern/kernel.asm	/^f01024bd:	e8 f2 f3 ff ff       	call   f01018b4 <page_alloc>$/;"	l
f01024c2	obj/kern/kernel.asm	/^f01024c2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01024c5	obj/kern/kernel.asm	/^f01024c5:	85 c0                	test   %eax,%eax$/;"	l
f01024c7	obj/kern/kernel.asm	/^f01024c7:	74 19                	je     f01024e2 <check_page_alloc+0x3a2>$/;"	l
f01024c9	obj/kern/kernel.asm	/^f01024c9:	68 1b 8e 10 f0       	push   $0xf0108e1b$/;"	l
f01024ce	obj/kern/kernel.asm	/^f01024ce:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01024d3	obj/kern/kernel.asm	/^f01024d3:	68 37 03 00 00       	push   $0x337$/;"	l
f01024d8	obj/kern/kernel.asm	/^f01024d8:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01024dd	obj/kern/kernel.asm	/^f01024dd:	e8 fe dd ff ff       	call   f01002e0 <_panic>$/;"	l
f01024e2	obj/kern/kernel.asm	/^f01024e2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01024e5	obj/kern/kernel.asm	/^f01024e5:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f01024e8	obj/kern/kernel.asm	/^f01024e8:	e8 c5 ee ff ff       	call   f01013b2 <page2kva>$/;"	l
f01024ed	obj/kern/kernel.asm	/^f01024ed:	83 c4 10             	add    $0x10,%esp$/;"	l
f01024f0	obj/kern/kernel.asm	/^f01024f0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01024f3	obj/kern/kernel.asm	/^f01024f3:	68 00 10 00 00       	push   $0x1000$/;"	l
f01024f8	obj/kern/kernel.asm	/^f01024f8:	6a 01                	push   $0x1$/;"	l
f01024fa	obj/kern/kernel.asm	/^f01024fa:	50                   	push   %eax$/;"	l
f01024fb	obj/kern/kernel.asm	/^f01024fb:	e8 8f 4d 00 00       	call   f010728f <memset>$/;"	l
f0102500	obj/kern/kernel.asm	/^f0102500:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102503	obj/kern/kernel.asm	/^f0102503:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102506	obj/kern/kernel.asm	/^f0102506:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f0102509	obj/kern/kernel.asm	/^f0102509:	e8 09 f4 ff ff       	call   f0101917 <page_free>$/;"	l
f010250e	obj/kern/kernel.asm	/^f010250e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102511	obj/kern/kernel.asm	/^f0102511:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102514	obj/kern/kernel.asm	/^f0102514:	6a 01                	push   $0x1$/;"	l
f0102516	obj/kern/kernel.asm	/^f0102516:	e8 99 f3 ff ff       	call   f01018b4 <page_alloc>$/;"	l
f010251b	obj/kern/kernel.asm	/^f010251b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010251e	obj/kern/kernel.asm	/^f010251e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0102521	obj/kern/kernel.asm	/^f0102521:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0102525	obj/kern/kernel.asm	/^f0102525:	75 19                	jne    f0102540 <check_page_alloc+0x400>$/;"	l
f0102527	obj/kern/kernel.asm	/^f0102527:	68 2a 8e 10 f0       	push   $0xf0108e2a$/;"	l
f010252c	obj/kern/kernel.asm	/^f010252c:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102531	obj/kern/kernel.asm	/^f0102531:	68 3c 03 00 00       	push   $0x33c$/;"	l
f0102536	obj/kern/kernel.asm	/^f0102536:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f010253b	obj/kern/kernel.asm	/^f010253b:	e8 a0 dd ff ff       	call   f01002e0 <_panic>$/;"	l
f0102540	obj/kern/kernel.asm	/^f0102540:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0102544	obj/kern/kernel.asm	/^f0102544:	74 08                	je     f010254e <check_page_alloc+0x40e>$/;"	l
f0102546	obj/kern/kernel.asm	/^f0102546:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0102549	obj/kern/kernel.asm	/^f0102549:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f010254c	obj/kern/kernel.asm	/^f010254c:	74 19                	je     f0102567 <check_page_alloc+0x427>$/;"	l
f010254e	obj/kern/kernel.asm	/^f010254e:	68 48 8e 10 f0       	push   $0xf0108e48$/;"	l
f0102553	obj/kern/kernel.asm	/^f0102553:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102558	obj/kern/kernel.asm	/^f0102558:	68 3d 03 00 00       	push   $0x33d$/;"	l
f010255d	obj/kern/kernel.asm	/^f010255d:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102562	obj/kern/kernel.asm	/^f0102562:	e8 79 dd ff ff       	call   f01002e0 <_panic>$/;"	l
f0102567	obj/kern/kernel.asm	/^f0102567:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010256a	obj/kern/kernel.asm	/^f010256a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f010256d	obj/kern/kernel.asm	/^f010256d:	e8 40 ee ff ff       	call   f01013b2 <page2kva>$/;"	l
f0102572	obj/kern/kernel.asm	/^f0102572:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102575	obj/kern/kernel.asm	/^f0102575:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0102578	obj/kern/kernel.asm	/^f0102578:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
f010257f	obj/kern/kernel.asm	/^f010257f:	eb 2c                	jmp    f01025ad <check_page_alloc+0x46d>$/;"	l
f0102581	obj/kern/kernel.asm	/^f0102581:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f0102584	obj/kern/kernel.asm	/^f0102584:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0102587	obj/kern/kernel.asm	/^f0102587:	01 d0                	add    %edx,%eax$/;"	l
f0102589	obj/kern/kernel.asm	/^f0102589:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010258c	obj/kern/kernel.asm	/^f010258c:	84 c0                	test   %al,%al$/;"	l
f010258e	obj/kern/kernel.asm	/^f010258e:	74 19                	je     f01025a9 <check_page_alloc+0x469>$/;"	l
f0102590	obj/kern/kernel.asm	/^f0102590:	68 58 8e 10 f0       	push   $0xf0108e58$/;"	l
f0102595	obj/kern/kernel.asm	/^f0102595:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f010259a	obj/kern/kernel.asm	/^f010259a:	68 40 03 00 00       	push   $0x340$/;"	l
f010259f	obj/kern/kernel.asm	/^f010259f:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01025a4	obj/kern/kernel.asm	/^f01025a4:	e8 37 dd ff ff       	call   f01002e0 <_panic>$/;"	l
f01025a9	obj/kern/kernel.asm	/^f01025a9:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
f01025ad	obj/kern/kernel.asm	/^f01025ad:	81 7d ec ff 0f 00 00 	cmpl   $0xfff,-0x14(%ebp)$/;"	l
f01025b4	obj/kern/kernel.asm	/^f01025b4:	7e cb                	jle    f0102581 <check_page_alloc+0x441>$/;"	l
f01025b6	obj/kern/kernel.asm	/^f01025b6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01025b9	obj/kern/kernel.asm	/^f01025b9:	a3 30 02 23 f0       	mov    %eax,0xf0230230$/;"	l
f01025be	obj/kern/kernel.asm	/^f01025be:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01025c1	obj/kern/kernel.asm	/^f01025c1:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
f01025c4	obj/kern/kernel.asm	/^f01025c4:	e8 4e f3 ff ff       	call   f0101917 <page_free>$/;"	l
f01025c9	obj/kern/kernel.asm	/^f01025c9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01025cc	obj/kern/kernel.asm	/^f01025cc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01025cf	obj/kern/kernel.asm	/^f01025cf:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f01025d2	obj/kern/kernel.asm	/^f01025d2:	e8 40 f3 ff ff       	call   f0101917 <page_free>$/;"	l
f01025d7	obj/kern/kernel.asm	/^f01025d7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01025da	obj/kern/kernel.asm	/^f01025da:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01025dd	obj/kern/kernel.asm	/^f01025dd:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
f01025e0	obj/kern/kernel.asm	/^f01025e0:	e8 32 f3 ff ff       	call   f0101917 <page_free>$/;"	l
f01025e5	obj/kern/kernel.asm	/^f01025e5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01025e8	obj/kern/kernel.asm	/^f01025e8:	a1 30 02 23 f0       	mov    0xf0230230,%eax$/;"	l
f01025ed	obj/kern/kernel.asm	/^f01025ed:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01025f0	obj/kern/kernel.asm	/^f01025f0:	eb 0c                	jmp    f01025fe <check_page_alloc+0x4be>$/;"	l
f01025f2	obj/kern/kernel.asm	/^f01025f2:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)$/;"	l
f01025f6	obj/kern/kernel.asm	/^f01025f6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01025f9	obj/kern/kernel.asm	/^f01025f9:	8b 00                	mov    (%eax),%eax$/;"	l
f01025fb	obj/kern/kernel.asm	/^f01025fb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01025fe	obj/kern/kernel.asm	/^f01025fe:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0102602	obj/kern/kernel.asm	/^f0102602:	75 ee                	jne    f01025f2 <check_page_alloc+0x4b2>$/;"	l
f0102604	obj/kern/kernel.asm	/^f0102604:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0102608	obj/kern/kernel.asm	/^f0102608:	74 19                	je     f0102623 <check_page_alloc+0x4e3>$/;"	l
f010260a	obj/kern/kernel.asm	/^f010260a:	68 62 8e 10 f0       	push   $0xf0108e62$/;"	l
f010260f	obj/kern/kernel.asm	/^f010260f:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102614	obj/kern/kernel.asm	/^f0102614:	68 4d 03 00 00       	push   $0x34d$/;"	l
f0102619	obj/kern/kernel.asm	/^f0102619:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f010261e	obj/kern/kernel.asm	/^f010261e:	e8 bd dc ff ff       	call   f01002e0 <_panic>$/;"	l
f0102623	obj/kern/kernel.asm	/^f0102623:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102626	obj/kern/kernel.asm	/^f0102626:	68 70 8e 10 f0       	push   $0xf0108e70$/;"	l
f010262b	obj/kern/kernel.asm	/^f010262b:	e8 7e 23 00 00       	call   f01049ae <cprintf>$/;"	l
f0102630	obj/kern/kernel.asm	/^f0102630:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102633	obj/kern/kernel.asm	/^f0102633:	90                   	nop$/;"	l
f0102634	obj/kern/kernel.asm	/^f0102634:	c9                   	leave  $/;"	l
f0102635	obj/kern/kernel.asm	/^f0102635:	c3                   	ret    $/;"	l
f0102636	obj/kern/kernel.asm	/^f0102636 <check_kern_pgdir>:$/;"	l
f0102636	obj/kern/kernel.asm	/^f0102636:	55                   	push   %ebp$/;"	l
f0102637	obj/kern/kernel.asm	/^f0102637:	89 e5                	mov    %esp,%ebp$/;"	l
f0102639	obj/kern/kernel.asm	/^f0102639:	53                   	push   %ebx$/;"	l
f010263a	obj/kern/kernel.asm	/^f010263a:	83 ec 34             	sub    $0x34,%esp$/;"	l
f010263d	obj/kern/kernel.asm	/^f010263d:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0102642	obj/kern/kernel.asm	/^f0102642:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0102645	obj/kern/kernel.asm	/^f0102645:	c7 45 e8 00 10 00 00 	movl   $0x1000,-0x18(%ebp)$/;"	l
f010264c	obj/kern/kernel.asm	/^f010264c:	a1 e8 0e 23 f0       	mov    0xf0230ee8,%eax$/;"	l
f0102651	obj/kern/kernel.asm	/^f0102651:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
f0102658	obj/kern/kernel.asm	/^f0102658:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f010265b	obj/kern/kernel.asm	/^f010265b:	01 d0                	add    %edx,%eax$/;"	l
f010265d	obj/kern/kernel.asm	/^f010265d:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0102660	obj/kern/kernel.asm	/^f0102660:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102663	obj/kern/kernel.asm	/^f0102663:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0102666	obj/kern/kernel.asm	/^f0102666:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010266b	obj/kern/kernel.asm	/^f010266b:	f7 75 e8             	divl   -0x18(%ebp)$/;"	l
f010266e	obj/kern/kernel.asm	/^f010266e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0102671	obj/kern/kernel.asm	/^f0102671:	29 d0                	sub    %edx,%eax$/;"	l
f0102673	obj/kern/kernel.asm	/^f0102673:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0102676	obj/kern/kernel.asm	/^f0102676:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f010267d	obj/kern/kernel.asm	/^f010267d:	eb 5f                	jmp    f01026de <check_kern_pgdir+0xa8>$/;"	l
f010267f	obj/kern/kernel.asm	/^f010267f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102682	obj/kern/kernel.asm	/^f0102682:	2d 00 00 00 11       	sub    $0x11000000,%eax$/;"	l
f0102687	obj/kern/kernel.asm	/^f0102687:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010268a	obj/kern/kernel.asm	/^f010268a:	50                   	push   %eax$/;"	l
f010268b	obj/kern/kernel.asm	/^f010268b:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f010268e	obj/kern/kernel.asm	/^f010268e:	e8 81 03 00 00       	call   f0102a14 <check_va2pa>$/;"	l
f0102693	obj/kern/kernel.asm	/^f0102693:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102696	obj/kern/kernel.asm	/^f0102696:	89 c3                	mov    %eax,%ebx$/;"	l
f0102698	obj/kern/kernel.asm	/^f0102698:	a1 f0 0e 23 f0       	mov    0xf0230ef0,%eax$/;"	l
f010269d	obj/kern/kernel.asm	/^f010269d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01026a0	obj/kern/kernel.asm	/^f01026a0:	50                   	push   %eax$/;"	l
f01026a1	obj/kern/kernel.asm	/^f01026a1:	68 65 03 00 00       	push   $0x365$/;"	l
f01026a6	obj/kern/kernel.asm	/^f01026a6:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01026ab	obj/kern/kernel.asm	/^f01026ab:	e8 4e ec ff ff       	call   f01012fe <_paddr>$/;"	l
f01026b0	obj/kern/kernel.asm	/^f01026b0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01026b3	obj/kern/kernel.asm	/^f01026b3:	89 c2                	mov    %eax,%edx$/;"	l
f01026b5	obj/kern/kernel.asm	/^f01026b5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01026b8	obj/kern/kernel.asm	/^f01026b8:	01 d0                	add    %edx,%eax$/;"	l
f01026ba	obj/kern/kernel.asm	/^f01026ba:	39 c3                	cmp    %eax,%ebx$/;"	l
f01026bc	obj/kern/kernel.asm	/^f01026bc:	74 19                	je     f01026d7 <check_kern_pgdir+0xa1>$/;"	l
f01026be	obj/kern/kernel.asm	/^f01026be:	68 90 8e 10 f0       	push   $0xf0108e90$/;"	l
f01026c3	obj/kern/kernel.asm	/^f01026c3:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01026c8	obj/kern/kernel.asm	/^f01026c8:	68 65 03 00 00       	push   $0x365$/;"	l
f01026cd	obj/kern/kernel.asm	/^f01026cd:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01026d2	obj/kern/kernel.asm	/^f01026d2:	e8 09 dc ff ff       	call   f01002e0 <_panic>$/;"	l
f01026d7	obj/kern/kernel.asm	/^f01026d7:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
f01026de	obj/kern/kernel.asm	/^f01026de:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01026e1	obj/kern/kernel.asm	/^f01026e1:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
f01026e4	obj/kern/kernel.asm	/^f01026e4:	72 99                	jb     f010267f <check_kern_pgdir+0x49>$/;"	l
f01026e6	obj/kern/kernel.asm	/^f01026e6:	c7 45 e0 00 10 00 00 	movl   $0x1000,-0x20(%ebp)$/;"	l
f01026ed	obj/kern/kernel.asm	/^f01026ed:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01026f0	obj/kern/kernel.asm	/^f01026f0:	05 ff ef 01 00       	add    $0x1efff,%eax$/;"	l
f01026f5	obj/kern/kernel.asm	/^f01026f5:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01026f8	obj/kern/kernel.asm	/^f01026f8:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01026fb	obj/kern/kernel.asm	/^f01026fb:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102700	obj/kern/kernel.asm	/^f0102700:	f7 75 e0             	divl   -0x20(%ebp)$/;"	l
f0102703	obj/kern/kernel.asm	/^f0102703:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0102706	obj/kern/kernel.asm	/^f0102706:	29 d0                	sub    %edx,%eax$/;"	l
f0102708	obj/kern/kernel.asm	/^f0102708:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010270b	obj/kern/kernel.asm	/^f010270b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0102712	obj/kern/kernel.asm	/^f0102712:	eb 5f                	jmp    f0102773 <check_kern_pgdir+0x13d>$/;"	l
f0102714	obj/kern/kernel.asm	/^f0102714:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102717	obj/kern/kernel.asm	/^f0102717:	2d 00 00 40 11       	sub    $0x11400000,%eax$/;"	l
f010271c	obj/kern/kernel.asm	/^f010271c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010271f	obj/kern/kernel.asm	/^f010271f:	50                   	push   %eax$/;"	l
f0102720	obj/kern/kernel.asm	/^f0102720:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f0102723	obj/kern/kernel.asm	/^f0102723:	e8 ec 02 00 00       	call   f0102a14 <check_va2pa>$/;"	l
f0102728	obj/kern/kernel.asm	/^f0102728:	83 c4 10             	add    $0x10,%esp$/;"	l
f010272b	obj/kern/kernel.asm	/^f010272b:	89 c3                	mov    %eax,%ebx$/;"	l
f010272d	obj/kern/kernel.asm	/^f010272d:	a1 3c 02 23 f0       	mov    0xf023023c,%eax$/;"	l
f0102732	obj/kern/kernel.asm	/^f0102732:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102735	obj/kern/kernel.asm	/^f0102735:	50                   	push   %eax$/;"	l
f0102736	obj/kern/kernel.asm	/^f0102736:	68 6a 03 00 00       	push   $0x36a$/;"	l
f010273b	obj/kern/kernel.asm	/^f010273b:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102740	obj/kern/kernel.asm	/^f0102740:	e8 b9 eb ff ff       	call   f01012fe <_paddr>$/;"	l
f0102745	obj/kern/kernel.asm	/^f0102745:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102748	obj/kern/kernel.asm	/^f0102748:	89 c2                	mov    %eax,%edx$/;"	l
f010274a	obj/kern/kernel.asm	/^f010274a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010274d	obj/kern/kernel.asm	/^f010274d:	01 d0                	add    %edx,%eax$/;"	l
f010274f	obj/kern/kernel.asm	/^f010274f:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102751	obj/kern/kernel.asm	/^f0102751:	74 19                	je     f010276c <check_kern_pgdir+0x136>$/;"	l
f0102753	obj/kern/kernel.asm	/^f0102753:	68 c4 8e 10 f0       	push   $0xf0108ec4$/;"	l
f0102758	obj/kern/kernel.asm	/^f0102758:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f010275d	obj/kern/kernel.asm	/^f010275d:	68 6a 03 00 00       	push   $0x36a$/;"	l
f0102762	obj/kern/kernel.asm	/^f0102762:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102767	obj/kern/kernel.asm	/^f0102767:	e8 74 db ff ff       	call   f01002e0 <_panic>$/;"	l
f010276c	obj/kern/kernel.asm	/^f010276c:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
f0102773	obj/kern/kernel.asm	/^f0102773:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102776	obj/kern/kernel.asm	/^f0102776:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
f0102779	obj/kern/kernel.asm	/^f0102779:	72 99                	jb     f0102714 <check_kern_pgdir+0xde>$/;"	l
f010277b	obj/kern/kernel.asm	/^f010277b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0102782	obj/kern/kernel.asm	/^f0102782:	eb 74                	jmp    f01027f8 <check_kern_pgdir+0x1c2>$/;"	l
f0102784	obj/kern/kernel.asm	/^f0102784:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102787	obj/kern/kernel.asm	/^f0102787:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010278c	obj/kern/kernel.asm	/^f010278c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010278f	obj/kern/kernel.asm	/^f010278f:	50                   	push   %eax$/;"	l
f0102790	obj/kern/kernel.asm	/^f0102790:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f0102793	obj/kern/kernel.asm	/^f0102793:	e8 7c 02 00 00       	call   f0102a14 <check_va2pa>$/;"	l
f0102798	obj/kern/kernel.asm	/^f0102798:	83 c4 10             	add    $0x10,%esp$/;"	l
f010279b	obj/kern/kernel.asm	/^f010279b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010279e	obj/kern/kernel.asm	/^f010279e:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01027a1	obj/kern/kernel.asm	/^f01027a1:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f01027a4	obj/kern/kernel.asm	/^f01027a4:	74 16                	je     f01027bc <check_kern_pgdir+0x186>$/;"	l
f01027a6	obj/kern/kernel.asm	/^f01027a6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01027a9	obj/kern/kernel.asm	/^f01027a9:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f01027ac	obj/kern/kernel.asm	/^f01027ac:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
f01027af	obj/kern/kernel.asm	/^f01027af:	68 f8 8e 10 f0       	push   $0xf0108ef8$/;"	l
f01027b4	obj/kern/kernel.asm	/^f01027b4:	e8 f5 21 00 00       	call   f01049ae <cprintf>$/;"	l
f01027b9	obj/kern/kernel.asm	/^f01027b9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01027bc	obj/kern/kernel.asm	/^f01027bc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01027bf	obj/kern/kernel.asm	/^f01027bf:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01027c4	obj/kern/kernel.asm	/^f01027c4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01027c7	obj/kern/kernel.asm	/^f01027c7:	50                   	push   %eax$/;"	l
f01027c8	obj/kern/kernel.asm	/^f01027c8:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f01027cb	obj/kern/kernel.asm	/^f01027cb:	e8 44 02 00 00       	call   f0102a14 <check_va2pa>$/;"	l
f01027d0	obj/kern/kernel.asm	/^f01027d0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01027d3	obj/kern/kernel.asm	/^f01027d3:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f01027d6	obj/kern/kernel.asm	/^f01027d6:	74 19                	je     f01027f1 <check_kern_pgdir+0x1bb>$/;"	l
f01027d8	obj/kern/kernel.asm	/^f01027d8:	68 1c 8f 10 f0       	push   $0xf0108f1c$/;"	l
f01027dd	obj/kern/kernel.asm	/^f01027dd:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01027e2	obj/kern/kernel.asm	/^f01027e2:	68 71 03 00 00       	push   $0x371$/;"	l
f01027e7	obj/kern/kernel.asm	/^f01027e7:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01027ec	obj/kern/kernel.asm	/^f01027ec:	e8 ef da ff ff       	call   f01002e0 <_panic>$/;"	l
f01027f1	obj/kern/kernel.asm	/^f01027f1:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
f01027f8	obj/kern/kernel.asm	/^f01027f8:	a1 e8 0e 23 f0       	mov    0xf0230ee8,%eax$/;"	l
f01027fd	obj/kern/kernel.asm	/^f01027fd:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0102800	obj/kern/kernel.asm	/^f0102800:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f0102803	obj/kern/kernel.asm	/^f0102803:	0f 87 7b ff ff ff    	ja     f0102784 <check_kern_pgdir+0x14e>$/;"	l
f0102809	obj/kern/kernel.asm	/^f0102809:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f0102810	obj/kern/kernel.asm	/^f0102810:	e9 e3 00 00 00       	jmp    f01028f8 <check_kern_pgdir+0x2c2>$/;"	l
f0102815	obj/kern/kernel.asm	/^f0102815:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0102818	obj/kern/kernel.asm	/^f0102818:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010281d	obj/kern/kernel.asm	/^f010281d:	29 d0                	sub    %edx,%eax$/;"	l
f010281f	obj/kern/kernel.asm	/^f010281f:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f0102822	obj/kern/kernel.asm	/^f0102822:	2d 00 00 01 10       	sub    $0x10010000,%eax$/;"	l
f0102827	obj/kern/kernel.asm	/^f0102827:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010282a	obj/kern/kernel.asm	/^f010282a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0102831	obj/kern/kernel.asm	/^f0102831:	eb 6a                	jmp    f010289d <check_kern_pgdir+0x267>$/;"	l
f0102833	obj/kern/kernel.asm	/^f0102833:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0102836	obj/kern/kernel.asm	/^f0102836:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102839	obj/kern/kernel.asm	/^f0102839:	01 d0                	add    %edx,%eax$/;"	l
f010283b	obj/kern/kernel.asm	/^f010283b:	05 00 80 00 00       	add    $0x8000,%eax$/;"	l
f0102840	obj/kern/kernel.asm	/^f0102840:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102843	obj/kern/kernel.asm	/^f0102843:	50                   	push   %eax$/;"	l
f0102844	obj/kern/kernel.asm	/^f0102844:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f0102847	obj/kern/kernel.asm	/^f0102847:	e8 c8 01 00 00       	call   f0102a14 <check_va2pa>$/;"	l
f010284c	obj/kern/kernel.asm	/^f010284c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010284f	obj/kern/kernel.asm	/^f010284f:	89 c3                	mov    %eax,%ebx$/;"	l
f0102851	obj/kern/kernel.asm	/^f0102851:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0102854	obj/kern/kernel.asm	/^f0102854:	c1 e0 0f             	shl    $0xf,%eax$/;"	l
f0102857	obj/kern/kernel.asm	/^f0102857:	05 00 20 23 f0       	add    $0xf0232000,%eax$/;"	l
f010285c	obj/kern/kernel.asm	/^f010285c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010285f	obj/kern/kernel.asm	/^f010285f:	50                   	push   %eax$/;"	l
f0102860	obj/kern/kernel.asm	/^f0102860:	68 79 03 00 00       	push   $0x379$/;"	l
f0102865	obj/kern/kernel.asm	/^f0102865:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f010286a	obj/kern/kernel.asm	/^f010286a:	e8 8f ea ff ff       	call   f01012fe <_paddr>$/;"	l
f010286f	obj/kern/kernel.asm	/^f010286f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102872	obj/kern/kernel.asm	/^f0102872:	89 c2                	mov    %eax,%edx$/;"	l
f0102874	obj/kern/kernel.asm	/^f0102874:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102877	obj/kern/kernel.asm	/^f0102877:	01 d0                	add    %edx,%eax$/;"	l
f0102879	obj/kern/kernel.asm	/^f0102879:	39 c3                	cmp    %eax,%ebx$/;"	l
f010287b	obj/kern/kernel.asm	/^f010287b:	74 19                	je     f0102896 <check_kern_pgdir+0x260>$/;"	l
f010287d	obj/kern/kernel.asm	/^f010287d:	68 44 8f 10 f0       	push   $0xf0108f44$/;"	l
f0102882	obj/kern/kernel.asm	/^f0102882:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102887	obj/kern/kernel.asm	/^f0102887:	68 79 03 00 00       	push   $0x379$/;"	l
f010288c	obj/kern/kernel.asm	/^f010288c:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102891	obj/kern/kernel.asm	/^f0102891:	e8 4a da ff ff       	call   f01002e0 <_panic>$/;"	l
f0102896	obj/kern/kernel.asm	/^f0102896:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
f010289d	obj/kern/kernel.asm	/^f010289d:	81 7d f4 ff 7f 00 00 	cmpl   $0x7fff,-0xc(%ebp)$/;"	l
f01028a4	obj/kern/kernel.asm	/^f01028a4:	76 8d                	jbe    f0102833 <check_kern_pgdir+0x1fd>$/;"	l
f01028a6	obj/kern/kernel.asm	/^f01028a6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01028ad	obj/kern/kernel.asm	/^f01028ad:	eb 3c                	jmp    f01028eb <check_kern_pgdir+0x2b5>$/;"	l
f01028af	obj/kern/kernel.asm	/^f01028af:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f01028b2	obj/kern/kernel.asm	/^f01028b2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01028b5	obj/kern/kernel.asm	/^f01028b5:	01 d0                	add    %edx,%eax$/;"	l
f01028b7	obj/kern/kernel.asm	/^f01028b7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01028ba	obj/kern/kernel.asm	/^f01028ba:	50                   	push   %eax$/;"	l
f01028bb	obj/kern/kernel.asm	/^f01028bb:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f01028be	obj/kern/kernel.asm	/^f01028be:	e8 51 01 00 00       	call   f0102a14 <check_va2pa>$/;"	l
f01028c3	obj/kern/kernel.asm	/^f01028c3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01028c6	obj/kern/kernel.asm	/^f01028c6:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01028c9	obj/kern/kernel.asm	/^f01028c9:	74 19                	je     f01028e4 <check_kern_pgdir+0x2ae>$/;"	l
f01028cb	obj/kern/kernel.asm	/^f01028cb:	68 8c 8f 10 f0       	push   $0xf0108f8c$/;"	l
f01028d0	obj/kern/kernel.asm	/^f01028d0:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01028d5	obj/kern/kernel.asm	/^f01028d5:	68 7b 03 00 00       	push   $0x37b$/;"	l
f01028da	obj/kern/kernel.asm	/^f01028da:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01028df	obj/kern/kernel.asm	/^f01028df:	e8 fc d9 ff ff       	call   f01002e0 <_panic>$/;"	l
f01028e4	obj/kern/kernel.asm	/^f01028e4:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
f01028eb	obj/kern/kernel.asm	/^f01028eb:	81 7d f4 ff 7f 00 00 	cmpl   $0x7fff,-0xc(%ebp)$/;"	l
f01028f2	obj/kern/kernel.asm	/^f01028f2:	76 bb                	jbe    f01028af <check_kern_pgdir+0x279>$/;"	l
f01028f4	obj/kern/kernel.asm	/^f01028f4:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
f01028f8	obj/kern/kernel.asm	/^f01028f8:	83 7d f0 07          	cmpl   $0x7,-0x10(%ebp)$/;"	l
f01028fc	obj/kern/kernel.asm	/^f01028fc:	0f 86 13 ff ff ff    	jbe    f0102815 <check_kern_pgdir+0x1df>$/;"	l
f0102902	obj/kern/kernel.asm	/^f0102902:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0102909	obj/kern/kernel.asm	/^f0102909:	e9 e3 00 00 00       	jmp    f01029f1 <check_kern_pgdir+0x3bb>$/;"	l
f010290e	obj/kern/kernel.asm	/^f010290e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102911	obj/kern/kernel.asm	/^f0102911:	2d bb 03 00 00       	sub    $0x3bb,%eax$/;"	l
f0102916	obj/kern/kernel.asm	/^f0102916:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f0102919	obj/kern/kernel.asm	/^f0102919:	77 35                	ja     f0102950 <check_kern_pgdir+0x31a>$/;"	l
f010291b	obj/kern/kernel.asm	/^f010291b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010291e	obj/kern/kernel.asm	/^f010291e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f0102925	obj/kern/kernel.asm	/^f0102925:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102928	obj/kern/kernel.asm	/^f0102928:	01 d0                	add    %edx,%eax$/;"	l
f010292a	obj/kern/kernel.asm	/^f010292a:	8b 00                	mov    (%eax),%eax$/;"	l
f010292c	obj/kern/kernel.asm	/^f010292c:	83 e0 01             	and    $0x1,%eax$/;"	l
f010292f	obj/kern/kernel.asm	/^f010292f:	85 c0                	test   %eax,%eax$/;"	l
f0102931	obj/kern/kernel.asm	/^f0102931:	0f 85 b2 00 00 00    	jne    f01029e9 <check_kern_pgdir+0x3b3>$/;"	l
f0102937	obj/kern/kernel.asm	/^f0102937:	68 af 8f 10 f0       	push   $0xf0108faf$/;"	l
f010293c	obj/kern/kernel.asm	/^f010293c:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102941	obj/kern/kernel.asm	/^f0102941:	68 86 03 00 00       	push   $0x386$/;"	l
f0102946	obj/kern/kernel.asm	/^f0102946:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f010294b	obj/kern/kernel.asm	/^f010294b:	e8 90 d9 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102950	obj/kern/kernel.asm	/^f0102950:	81 7d f4 bf 03 00 00 	cmpl   $0x3bf,-0xc(%ebp)$/;"	l
f0102957	obj/kern/kernel.asm	/^f0102957:	76 62                	jbe    f01029bb <check_kern_pgdir+0x385>$/;"	l
f0102959	obj/kern/kernel.asm	/^f0102959:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010295c	obj/kern/kernel.asm	/^f010295c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f0102963	obj/kern/kernel.asm	/^f0102963:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102966	obj/kern/kernel.asm	/^f0102966:	01 d0                	add    %edx,%eax$/;"	l
f0102968	obj/kern/kernel.asm	/^f0102968:	8b 00                	mov    (%eax),%eax$/;"	l
f010296a	obj/kern/kernel.asm	/^f010296a:	83 e0 01             	and    $0x1,%eax$/;"	l
f010296d	obj/kern/kernel.asm	/^f010296d:	85 c0                	test   %eax,%eax$/;"	l
f010296f	obj/kern/kernel.asm	/^f010296f:	75 19                	jne    f010298a <check_kern_pgdir+0x354>$/;"	l
f0102971	obj/kern/kernel.asm	/^f0102971:	68 af 8f 10 f0       	push   $0xf0108faf$/;"	l
f0102976	obj/kern/kernel.asm	/^f0102976:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f010297b	obj/kern/kernel.asm	/^f010297b:	68 8a 03 00 00       	push   $0x38a$/;"	l
f0102980	obj/kern/kernel.asm	/^f0102980:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102985	obj/kern/kernel.asm	/^f0102985:	e8 56 d9 ff ff       	call   f01002e0 <_panic>$/;"	l
f010298a	obj/kern/kernel.asm	/^f010298a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010298d	obj/kern/kernel.asm	/^f010298d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f0102994	obj/kern/kernel.asm	/^f0102994:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102997	obj/kern/kernel.asm	/^f0102997:	01 d0                	add    %edx,%eax$/;"	l
f0102999	obj/kern/kernel.asm	/^f0102999:	8b 00                	mov    (%eax),%eax$/;"	l
f010299b	obj/kern/kernel.asm	/^f010299b:	83 e0 02             	and    $0x2,%eax$/;"	l
f010299e	obj/kern/kernel.asm	/^f010299e:	85 c0                	test   %eax,%eax$/;"	l
f01029a0	obj/kern/kernel.asm	/^f01029a0:	75 4a                	jne    f01029ec <check_kern_pgdir+0x3b6>$/;"	l
f01029a2	obj/kern/kernel.asm	/^f01029a2:	68 c0 8f 10 f0       	push   $0xf0108fc0$/;"	l
f01029a7	obj/kern/kernel.asm	/^f01029a7:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01029ac	obj/kern/kernel.asm	/^f01029ac:	68 8b 03 00 00       	push   $0x38b$/;"	l
f01029b1	obj/kern/kernel.asm	/^f01029b1:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01029b6	obj/kern/kernel.asm	/^f01029b6:	e8 25 d9 ff ff       	call   f01002e0 <_panic>$/;"	l
f01029bb	obj/kern/kernel.asm	/^f01029bb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01029be	obj/kern/kernel.asm	/^f01029be:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f01029c5	obj/kern/kernel.asm	/^f01029c5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01029c8	obj/kern/kernel.asm	/^f01029c8:	01 d0                	add    %edx,%eax$/;"	l
f01029ca	obj/kern/kernel.asm	/^f01029ca:	8b 00                	mov    (%eax),%eax$/;"	l
f01029cc	obj/kern/kernel.asm	/^f01029cc:	85 c0                	test   %eax,%eax$/;"	l
f01029ce	obj/kern/kernel.asm	/^f01029ce:	74 1c                	je     f01029ec <check_kern_pgdir+0x3b6>$/;"	l
f01029d0	obj/kern/kernel.asm	/^f01029d0:	68 d1 8f 10 f0       	push   $0xf0108fd1$/;"	l
f01029d5	obj/kern/kernel.asm	/^f01029d5:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01029da	obj/kern/kernel.asm	/^f01029da:	68 8d 03 00 00       	push   $0x38d$/;"	l
f01029df	obj/kern/kernel.asm	/^f01029df:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01029e4	obj/kern/kernel.asm	/^f01029e4:	e8 f7 d8 ff ff       	call   f01002e0 <_panic>$/;"	l
f01029e9	obj/kern/kernel.asm	/^f01029e9:	90                   	nop$/;"	l
f01029ea	obj/kern/kernel.asm	/^f01029ea:	eb 01                	jmp    f01029ed <check_kern_pgdir+0x3b7>$/;"	l
f01029ec	obj/kern/kernel.asm	/^f01029ec:	90                   	nop$/;"	l
f01029ed	obj/kern/kernel.asm	/^f01029ed:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f01029f1	obj/kern/kernel.asm	/^f01029f1:	81 7d f4 ff 03 00 00 	cmpl   $0x3ff,-0xc(%ebp)$/;"	l
f01029f8	obj/kern/kernel.asm	/^f01029f8:	0f 86 10 ff ff ff    	jbe    f010290e <check_kern_pgdir+0x2d8>$/;"	l
f01029fe	obj/kern/kernel.asm	/^f01029fe:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102a01	obj/kern/kernel.asm	/^f0102a01:	68 e0 8f 10 f0       	push   $0xf0108fe0$/;"	l
f0102a06	obj/kern/kernel.asm	/^f0102a06:	e8 a3 1f 00 00       	call   f01049ae <cprintf>$/;"	l
f0102a0b	obj/kern/kernel.asm	/^f0102a0b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102a0e	obj/kern/kernel.asm	/^f0102a0e:	90                   	nop$/;"	l
f0102a0f	obj/kern/kernel.asm	/^f0102a0f:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0102a12	obj/kern/kernel.asm	/^f0102a12:	c9                   	leave  $/;"	l
f0102a13	obj/kern/kernel.asm	/^f0102a13:	c3                   	ret    $/;"	l
f0102a14	obj/kern/kernel.asm	/^f0102a14 <check_va2pa>:$/;"	l
f0102a14	obj/kern/kernel.asm	/^f0102a14:	55                   	push   %ebp$/;"	l
f0102a15	obj/kern/kernel.asm	/^f0102a15:	89 e5                	mov    %esp,%ebp$/;"	l
f0102a17	obj/kern/kernel.asm	/^f0102a17:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0102a1a	obj/kern/kernel.asm	/^f0102a1a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102a1d	obj/kern/kernel.asm	/^f0102a1d:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0102a20	obj/kern/kernel.asm	/^f0102a20:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0102a23	obj/kern/kernel.asm	/^f0102a23:	01 45 08             	add    %eax,0x8(%ebp)$/;"	l
f0102a26	obj/kern/kernel.asm	/^f0102a26:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102a29	obj/kern/kernel.asm	/^f0102a29:	8b 00                	mov    (%eax),%eax$/;"	l
f0102a2b	obj/kern/kernel.asm	/^f0102a2b:	83 e0 01             	and    $0x1,%eax$/;"	l
f0102a2e	obj/kern/kernel.asm	/^f0102a2e:	85 c0                	test   %eax,%eax$/;"	l
f0102a30	obj/kern/kernel.asm	/^f0102a30:	75 0a                	jne    f0102a3c <check_va2pa+0x28>$/;"	l
f0102a32	obj/kern/kernel.asm	/^f0102a32:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0102a37	obj/kern/kernel.asm	/^f0102a37:	e9 89 00 00 00       	jmp    f0102ac5 <check_va2pa+0xb1>$/;"	l
f0102a3c	obj/kern/kernel.asm	/^f0102a3c:	81 7d 0c ff ff ff ef 	cmpl   $0xefffffff,0xc(%ebp)$/;"	l
f0102a43	obj/kern/kernel.asm	/^f0102a43:	76 18                	jbe    f0102a5d <check_va2pa+0x49>$/;"	l
f0102a45	obj/kern/kernel.asm	/^f0102a45:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102a48	obj/kern/kernel.asm	/^f0102a48:	8b 00                	mov    (%eax),%eax$/;"	l
f0102a4a	obj/kern/kernel.asm	/^f0102a4a:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102a4f	obj/kern/kernel.asm	/^f0102a4f:	89 c2                	mov    %eax,%edx$/;"	l
f0102a51	obj/kern/kernel.asm	/^f0102a51:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102a54	obj/kern/kernel.asm	/^f0102a54:	25 ff ff 3f 00       	and    $0x3fffff,%eax$/;"	l
f0102a59	obj/kern/kernel.asm	/^f0102a59:	01 d0                	add    %edx,%eax$/;"	l
f0102a5b	obj/kern/kernel.asm	/^f0102a5b:	eb 68                	jmp    f0102ac5 <check_va2pa+0xb1>$/;"	l
f0102a5d	obj/kern/kernel.asm	/^f0102a5d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0102a60	obj/kern/kernel.asm	/^f0102a60:	8b 00                	mov    (%eax),%eax$/;"	l
f0102a62	obj/kern/kernel.asm	/^f0102a62:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102a67	obj/kern/kernel.asm	/^f0102a67:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102a6a	obj/kern/kernel.asm	/^f0102a6a:	50                   	push   %eax$/;"	l
f0102a6b	obj/kern/kernel.asm	/^f0102a6b:	68 a4 03 00 00       	push   $0x3a4$/;"	l
f0102a70	obj/kern/kernel.asm	/^f0102a70:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102a75	obj/kern/kernel.asm	/^f0102a75:	e8 b1 e8 ff ff       	call   f010132b <_kaddr>$/;"	l
f0102a7a	obj/kern/kernel.asm	/^f0102a7a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102a7d	obj/kern/kernel.asm	/^f0102a7d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0102a80	obj/kern/kernel.asm	/^f0102a80:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102a83	obj/kern/kernel.asm	/^f0102a83:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102a86	obj/kern/kernel.asm	/^f0102a86:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0102a8b	obj/kern/kernel.asm	/^f0102a8b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f0102a92	obj/kern/kernel.asm	/^f0102a92:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102a95	obj/kern/kernel.asm	/^f0102a95:	01 d0                	add    %edx,%eax$/;"	l
f0102a97	obj/kern/kernel.asm	/^f0102a97:	8b 00                	mov    (%eax),%eax$/;"	l
f0102a99	obj/kern/kernel.asm	/^f0102a99:	83 e0 01             	and    $0x1,%eax$/;"	l
f0102a9c	obj/kern/kernel.asm	/^f0102a9c:	85 c0                	test   %eax,%eax$/;"	l
f0102a9e	obj/kern/kernel.asm	/^f0102a9e:	75 07                	jne    f0102aa7 <check_va2pa+0x93>$/;"	l
f0102aa0	obj/kern/kernel.asm	/^f0102aa0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0102aa5	obj/kern/kernel.asm	/^f0102aa5:	eb 1e                	jmp    f0102ac5 <check_va2pa+0xb1>$/;"	l
f0102aa7	obj/kern/kernel.asm	/^f0102aa7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0102aaa	obj/kern/kernel.asm	/^f0102aaa:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0102aad	obj/kern/kernel.asm	/^f0102aad:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0102ab2	obj/kern/kernel.asm	/^f0102ab2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f0102ab9	obj/kern/kernel.asm	/^f0102ab9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0102abc	obj/kern/kernel.asm	/^f0102abc:	01 d0                	add    %edx,%eax$/;"	l
f0102abe	obj/kern/kernel.asm	/^f0102abe:	8b 00                	mov    (%eax),%eax$/;"	l
f0102ac0	obj/kern/kernel.asm	/^f0102ac0:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102ac5	obj/kern/kernel.asm	/^f0102ac5:	c9                   	leave  $/;"	l
f0102ac6	obj/kern/kernel.asm	/^f0102ac6:	c3                   	ret    $/;"	l
f0102ac7	obj/kern/kernel.asm	/^f0102ac7 <check_page>:$/;"	l
f0102ac7	obj/kern/kernel.asm	/^f0102ac7:	55                   	push   %ebp$/;"	l
f0102ac8	obj/kern/kernel.asm	/^f0102ac8:	89 e5                	mov    %esp,%ebp$/;"	l
f0102aca	obj/kern/kernel.asm	/^f0102aca:	53                   	push   %ebx$/;"	l
f0102acb	obj/kern/kernel.asm	/^f0102acb:	83 ec 34             	sub    $0x34,%esp$/;"	l
f0102ace	obj/kern/kernel.asm	/^f0102ace:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f0102ad5	obj/kern/kernel.asm	/^f0102ad5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0102ad8	obj/kern/kernel.asm	/^f0102ad8:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0102adb	obj/kern/kernel.asm	/^f0102adb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102ade	obj/kern/kernel.asm	/^f0102ade:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0102ae1	obj/kern/kernel.asm	/^f0102ae1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102ae4	obj/kern/kernel.asm	/^f0102ae4:	6a 00                	push   $0x0$/;"	l
f0102ae6	obj/kern/kernel.asm	/^f0102ae6:	e8 c9 ed ff ff       	call   f01018b4 <page_alloc>$/;"	l
f0102aeb	obj/kern/kernel.asm	/^f0102aeb:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102aee	obj/kern/kernel.asm	/^f0102aee:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0102af1	obj/kern/kernel.asm	/^f0102af1:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0102af5	obj/kern/kernel.asm	/^f0102af5:	75 19                	jne    f0102b10 <check_page+0x49>$/;"	l
f0102af7	obj/kern/kernel.asm	/^f0102af7:	68 4a 8d 10 f0       	push   $0xf0108d4a$/;"	l
f0102afc	obj/kern/kernel.asm	/^f0102afc:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102b01	obj/kern/kernel.asm	/^f0102b01:	68 b9 03 00 00       	push   $0x3b9$/;"	l
f0102b06	obj/kern/kernel.asm	/^f0102b06:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102b0b	obj/kern/kernel.asm	/^f0102b0b:	e8 d0 d7 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102b10	obj/kern/kernel.asm	/^f0102b10:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102b13	obj/kern/kernel.asm	/^f0102b13:	6a 00                	push   $0x0$/;"	l
f0102b15	obj/kern/kernel.asm	/^f0102b15:	e8 9a ed ff ff       	call   f01018b4 <page_alloc>$/;"	l
f0102b1a	obj/kern/kernel.asm	/^f0102b1a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102b1d	obj/kern/kernel.asm	/^f0102b1d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0102b20	obj/kern/kernel.asm	/^f0102b20:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f0102b24	obj/kern/kernel.asm	/^f0102b24:	75 19                	jne    f0102b3f <check_page+0x78>$/;"	l
f0102b26	obj/kern/kernel.asm	/^f0102b26:	68 60 8d 10 f0       	push   $0xf0108d60$/;"	l
f0102b2b	obj/kern/kernel.asm	/^f0102b2b:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102b30	obj/kern/kernel.asm	/^f0102b30:	68 ba 03 00 00       	push   $0x3ba$/;"	l
f0102b35	obj/kern/kernel.asm	/^f0102b35:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102b3a	obj/kern/kernel.asm	/^f0102b3a:	e8 a1 d7 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102b3f	obj/kern/kernel.asm	/^f0102b3f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102b42	obj/kern/kernel.asm	/^f0102b42:	6a 00                	push   $0x0$/;"	l
f0102b44	obj/kern/kernel.asm	/^f0102b44:	e8 6b ed ff ff       	call   f01018b4 <page_alloc>$/;"	l
f0102b49	obj/kern/kernel.asm	/^f0102b49:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102b4c	obj/kern/kernel.asm	/^f0102b4c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0102b4f	obj/kern/kernel.asm	/^f0102b4f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0102b53	obj/kern/kernel.asm	/^f0102b53:	75 19                	jne    f0102b6e <check_page+0xa7>$/;"	l
f0102b55	obj/kern/kernel.asm	/^f0102b55:	68 76 8d 10 f0       	push   $0xf0108d76$/;"	l
f0102b5a	obj/kern/kernel.asm	/^f0102b5a:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102b5f	obj/kern/kernel.asm	/^f0102b5f:	68 bb 03 00 00       	push   $0x3bb$/;"	l
f0102b64	obj/kern/kernel.asm	/^f0102b64:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102b69	obj/kern/kernel.asm	/^f0102b69:	e8 72 d7 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102b6e	obj/kern/kernel.asm	/^f0102b6e:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
f0102b72	obj/kern/kernel.asm	/^f0102b72:	75 19                	jne    f0102b8d <check_page+0xc6>$/;"	l
f0102b74	obj/kern/kernel.asm	/^f0102b74:	68 8c 8d 10 f0       	push   $0xf0108d8c$/;"	l
f0102b79	obj/kern/kernel.asm	/^f0102b79:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102b7e	obj/kern/kernel.asm	/^f0102b7e:	68 bd 03 00 00       	push   $0x3bd$/;"	l
f0102b83	obj/kern/kernel.asm	/^f0102b83:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102b88	obj/kern/kernel.asm	/^f0102b88:	e8 53 d7 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102b8d	obj/kern/kernel.asm	/^f0102b8d:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f0102b91	obj/kern/kernel.asm	/^f0102b91:	74 08                	je     f0102b9b <check_page+0xd4>$/;"	l
f0102b93	obj/kern/kernel.asm	/^f0102b93:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102b96	obj/kern/kernel.asm	/^f0102b96:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
f0102b99	obj/kern/kernel.asm	/^f0102b99:	75 19                	jne    f0102bb4 <check_page+0xed>$/;"	l
f0102b9b	obj/kern/kernel.asm	/^f0102b9b:	68 90 8d 10 f0       	push   $0xf0108d90$/;"	l
f0102ba0	obj/kern/kernel.asm	/^f0102ba0:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102ba5	obj/kern/kernel.asm	/^f0102ba5:	68 be 03 00 00       	push   $0x3be$/;"	l
f0102baa	obj/kern/kernel.asm	/^f0102baa:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102baf	obj/kern/kernel.asm	/^f0102baf:	e8 2c d7 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102bb4	obj/kern/kernel.asm	/^f0102bb4:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0102bb8	obj/kern/kernel.asm	/^f0102bb8:	74 10                	je     f0102bca <check_page+0x103>$/;"	l
f0102bba	obj/kern/kernel.asm	/^f0102bba:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0102bbd	obj/kern/kernel.asm	/^f0102bbd:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
f0102bc0	obj/kern/kernel.asm	/^f0102bc0:	74 08                	je     f0102bca <check_page+0x103>$/;"	l
f0102bc2	obj/kern/kernel.asm	/^f0102bc2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0102bc5	obj/kern/kernel.asm	/^f0102bc5:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
f0102bc8	obj/kern/kernel.asm	/^f0102bc8:	75 19                	jne    f0102be3 <check_page+0x11c>$/;"	l
f0102bca	obj/kern/kernel.asm	/^f0102bca:	68 a4 8d 10 f0       	push   $0xf0108da4$/;"	l
f0102bcf	obj/kern/kernel.asm	/^f0102bcf:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102bd4	obj/kern/kernel.asm	/^f0102bd4:	68 bf 03 00 00       	push   $0x3bf$/;"	l
f0102bd9	obj/kern/kernel.asm	/^f0102bd9:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102bde	obj/kern/kernel.asm	/^f0102bde:	e8 fd d6 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102be3	obj/kern/kernel.asm	/^f0102be3:	a1 30 02 23 f0       	mov    0xf0230230,%eax$/;"	l
f0102be8	obj/kern/kernel.asm	/^f0102be8:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0102beb	obj/kern/kernel.asm	/^f0102beb:	c7 05 30 02 23 f0 00 	movl   $0x0,0xf0230230$/;"	l
f0102bf2	obj/kern/kernel.asm	/^f0102bf2:	00 00 00 $/;"	l
f0102bf5	obj/kern/kernel.asm	/^f0102bf5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102bf8	obj/kern/kernel.asm	/^f0102bf8:	6a 00                	push   $0x0$/;"	l
f0102bfa	obj/kern/kernel.asm	/^f0102bfa:	e8 b5 ec ff ff       	call   f01018b4 <page_alloc>$/;"	l
f0102bff	obj/kern/kernel.asm	/^f0102bff:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c02	obj/kern/kernel.asm	/^f0102c02:	85 c0                	test   %eax,%eax$/;"	l
f0102c04	obj/kern/kernel.asm	/^f0102c04:	74 19                	je     f0102c1f <check_page+0x158>$/;"	l
f0102c06	obj/kern/kernel.asm	/^f0102c06:	68 1b 8e 10 f0       	push   $0xf0108e1b$/;"	l
f0102c0b	obj/kern/kernel.asm	/^f0102c0b:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102c10	obj/kern/kernel.asm	/^f0102c10:	68 c6 03 00 00       	push   $0x3c6$/;"	l
f0102c15	obj/kern/kernel.asm	/^f0102c15:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102c1a	obj/kern/kernel.asm	/^f0102c1a:	e8 c1 d6 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102c1f	obj/kern/kernel.asm	/^f0102c1f:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0102c24	obj/kern/kernel.asm	/^f0102c24:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102c27	obj/kern/kernel.asm	/^f0102c27:	8d 55 cc             	lea    -0x34(%ebp),%edx$/;"	l
f0102c2a	obj/kern/kernel.asm	/^f0102c2a:	52                   	push   %edx$/;"	l
f0102c2b	obj/kern/kernel.asm	/^f0102c2b:	6a 00                	push   $0x0$/;"	l
f0102c2d	obj/kern/kernel.asm	/^f0102c2d:	50                   	push   %eax$/;"	l
f0102c2e	obj/kern/kernel.asm	/^f0102c2e:	e8 30 ef ff ff       	call   f0101b63 <page_lookup>$/;"	l
f0102c33	obj/kern/kernel.asm	/^f0102c33:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c36	obj/kern/kernel.asm	/^f0102c36:	85 c0                	test   %eax,%eax$/;"	l
f0102c38	obj/kern/kernel.asm	/^f0102c38:	74 19                	je     f0102c53 <check_page+0x18c>$/;"	l
f0102c3a	obj/kern/kernel.asm	/^f0102c3a:	68 00 90 10 f0       	push   $0xf0109000$/;"	l
f0102c3f	obj/kern/kernel.asm	/^f0102c3f:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102c44	obj/kern/kernel.asm	/^f0102c44:	68 c9 03 00 00       	push   $0x3c9$/;"	l
f0102c49	obj/kern/kernel.asm	/^f0102c49:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102c4e	obj/kern/kernel.asm	/^f0102c4e:	e8 8d d6 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102c53	obj/kern/kernel.asm	/^f0102c53:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0102c58	obj/kern/kernel.asm	/^f0102c58:	6a 02                	push   $0x2$/;"	l
f0102c5a	obj/kern/kernel.asm	/^f0102c5a:	6a 00                	push   $0x0$/;"	l
f0102c5c	obj/kern/kernel.asm	/^f0102c5c:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f0102c5f	obj/kern/kernel.asm	/^f0102c5f:	50                   	push   %eax$/;"	l
f0102c60	obj/kern/kernel.asm	/^f0102c60:	e8 70 ee ff ff       	call   f0101ad5 <page_insert>$/;"	l
f0102c65	obj/kern/kernel.asm	/^f0102c65:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c68	obj/kern/kernel.asm	/^f0102c68:	85 c0                	test   %eax,%eax$/;"	l
f0102c6a	obj/kern/kernel.asm	/^f0102c6a:	78 19                	js     f0102c85 <check_page+0x1be>$/;"	l
f0102c6c	obj/kern/kernel.asm	/^f0102c6c:	68 38 90 10 f0       	push   $0xf0109038$/;"	l
f0102c71	obj/kern/kernel.asm	/^f0102c71:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102c76	obj/kern/kernel.asm	/^f0102c76:	68 cc 03 00 00       	push   $0x3cc$/;"	l
f0102c7b	obj/kern/kernel.asm	/^f0102c7b:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102c80	obj/kern/kernel.asm	/^f0102c80:	e8 5b d6 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102c85	obj/kern/kernel.asm	/^f0102c85:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102c88	obj/kern/kernel.asm	/^f0102c88:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
f0102c8b	obj/kern/kernel.asm	/^f0102c8b:	e8 87 ec ff ff       	call   f0101917 <page_free>$/;"	l
f0102c90	obj/kern/kernel.asm	/^f0102c90:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102c93	obj/kern/kernel.asm	/^f0102c93:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0102c98	obj/kern/kernel.asm	/^f0102c98:	6a 02                	push   $0x2$/;"	l
f0102c9a	obj/kern/kernel.asm	/^f0102c9a:	6a 00                	push   $0x0$/;"	l
f0102c9c	obj/kern/kernel.asm	/^f0102c9c:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f0102c9f	obj/kern/kernel.asm	/^f0102c9f:	50                   	push   %eax$/;"	l
f0102ca0	obj/kern/kernel.asm	/^f0102ca0:	e8 30 ee ff ff       	call   f0101ad5 <page_insert>$/;"	l
f0102ca5	obj/kern/kernel.asm	/^f0102ca5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102ca8	obj/kern/kernel.asm	/^f0102ca8:	85 c0                	test   %eax,%eax$/;"	l
f0102caa	obj/kern/kernel.asm	/^f0102caa:	74 19                	je     f0102cc5 <check_page+0x1fe>$/;"	l
f0102cac	obj/kern/kernel.asm	/^f0102cac:	68 68 90 10 f0       	push   $0xf0109068$/;"	l
f0102cb1	obj/kern/kernel.asm	/^f0102cb1:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102cb6	obj/kern/kernel.asm	/^f0102cb6:	68 d0 03 00 00       	push   $0x3d0$/;"	l
f0102cbb	obj/kern/kernel.asm	/^f0102cbb:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102cc0	obj/kern/kernel.asm	/^f0102cc0:	e8 1b d6 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102cc5	obj/kern/kernel.asm	/^f0102cc5:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0102cca	obj/kern/kernel.asm	/^f0102cca:	8b 00                	mov    (%eax),%eax$/;"	l
f0102ccc	obj/kern/kernel.asm	/^f0102ccc:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102cd1	obj/kern/kernel.asm	/^f0102cd1:	89 c3                	mov    %eax,%ebx$/;"	l
f0102cd3	obj/kern/kernel.asm	/^f0102cd3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102cd6	obj/kern/kernel.asm	/^f0102cd6:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
f0102cd9	obj/kern/kernel.asm	/^f0102cd9:	e8 81 e6 ff ff       	call   f010135f <page2pa>$/;"	l
f0102cde	obj/kern/kernel.asm	/^f0102cde:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102ce1	obj/kern/kernel.asm	/^f0102ce1:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102ce3	obj/kern/kernel.asm	/^f0102ce3:	74 19                	je     f0102cfe <check_page+0x237>$/;"	l
f0102ce5	obj/kern/kernel.asm	/^f0102ce5:	68 98 90 10 f0       	push   $0xf0109098$/;"	l
f0102cea	obj/kern/kernel.asm	/^f0102cea:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102cef	obj/kern/kernel.asm	/^f0102cef:	68 d1 03 00 00       	push   $0x3d1$/;"	l
f0102cf4	obj/kern/kernel.asm	/^f0102cf4:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102cf9	obj/kern/kernel.asm	/^f0102cf9:	e8 e2 d5 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102cfe	obj/kern/kernel.asm	/^f0102cfe:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0102d03	obj/kern/kernel.asm	/^f0102d03:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102d06	obj/kern/kernel.asm	/^f0102d06:	6a 00                	push   $0x0$/;"	l
f0102d08	obj/kern/kernel.asm	/^f0102d08:	50                   	push   %eax$/;"	l
f0102d09	obj/kern/kernel.asm	/^f0102d09:	e8 06 fd ff ff       	call   f0102a14 <check_va2pa>$/;"	l
f0102d0e	obj/kern/kernel.asm	/^f0102d0e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d11	obj/kern/kernel.asm	/^f0102d11:	89 c3                	mov    %eax,%ebx$/;"	l
f0102d13	obj/kern/kernel.asm	/^f0102d13:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102d16	obj/kern/kernel.asm	/^f0102d16:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f0102d19	obj/kern/kernel.asm	/^f0102d19:	e8 41 e6 ff ff       	call   f010135f <page2pa>$/;"	l
f0102d1e	obj/kern/kernel.asm	/^f0102d1e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102d21	obj/kern/kernel.asm	/^f0102d21:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102d23	obj/kern/kernel.asm	/^f0102d23:	74 19                	je     f0102d3e <check_page+0x277>$/;"	l
f0102d25	obj/kern/kernel.asm	/^f0102d25:	68 c0 90 10 f0       	push   $0xf01090c0$/;"	l
f0102d2a	obj/kern/kernel.asm	/^f0102d2a:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102d2f	obj/kern/kernel.asm	/^f0102d2f:	68 d2 03 00 00       	push   $0x3d2$/;"	l
f0102d34	obj/kern/kernel.asm	/^f0102d34:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102d39	obj/kern/kernel.asm	/^f0102d39:	e8 a2 d5 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102d3e	obj/kern/kernel.asm	/^f0102d3e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0102d41	obj/kern/kernel.asm	/^f0102d41:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0102d45	obj/kern/kernel.asm	/^f0102d45:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f0102d49	obj/kern/kernel.asm	/^f0102d49:	74 19                	je     f0102d64 <check_page+0x29d>$/;"	l
f0102d4b	obj/kern/kernel.asm	/^f0102d4b:	68 ed 90 10 f0       	push   $0xf01090ed$/;"	l
f0102d50	obj/kern/kernel.asm	/^f0102d50:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102d55	obj/kern/kernel.asm	/^f0102d55:	68 d3 03 00 00       	push   $0x3d3$/;"	l
f0102d5a	obj/kern/kernel.asm	/^f0102d5a:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102d5f	obj/kern/kernel.asm	/^f0102d5f:	e8 7c d5 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102d64	obj/kern/kernel.asm	/^f0102d64:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0102d67	obj/kern/kernel.asm	/^f0102d67:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0102d6b	obj/kern/kernel.asm	/^f0102d6b:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f0102d6f	obj/kern/kernel.asm	/^f0102d6f:	74 19                	je     f0102d8a <check_page+0x2c3>$/;"	l
f0102d71	obj/kern/kernel.asm	/^f0102d71:	68 fe 90 10 f0       	push   $0xf01090fe$/;"	l
f0102d76	obj/kern/kernel.asm	/^f0102d76:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102d7b	obj/kern/kernel.asm	/^f0102d7b:	68 d4 03 00 00       	push   $0x3d4$/;"	l
f0102d80	obj/kern/kernel.asm	/^f0102d80:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102d85	obj/kern/kernel.asm	/^f0102d85:	e8 56 d5 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102d8a	obj/kern/kernel.asm	/^f0102d8a:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0102d8f	obj/kern/kernel.asm	/^f0102d8f:	6a 02                	push   $0x2$/;"	l
f0102d91	obj/kern/kernel.asm	/^f0102d91:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102d96	obj/kern/kernel.asm	/^f0102d96:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f0102d99	obj/kern/kernel.asm	/^f0102d99:	50                   	push   %eax$/;"	l
f0102d9a	obj/kern/kernel.asm	/^f0102d9a:	e8 36 ed ff ff       	call   f0101ad5 <page_insert>$/;"	l
f0102d9f	obj/kern/kernel.asm	/^f0102d9f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102da2	obj/kern/kernel.asm	/^f0102da2:	85 c0                	test   %eax,%eax$/;"	l
f0102da4	obj/kern/kernel.asm	/^f0102da4:	74 19                	je     f0102dbf <check_page+0x2f8>$/;"	l
f0102da6	obj/kern/kernel.asm	/^f0102da6:	68 10 91 10 f0       	push   $0xf0109110$/;"	l
f0102dab	obj/kern/kernel.asm	/^f0102dab:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102db0	obj/kern/kernel.asm	/^f0102db0:	68 d7 03 00 00       	push   $0x3d7$/;"	l
f0102db5	obj/kern/kernel.asm	/^f0102db5:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102dba	obj/kern/kernel.asm	/^f0102dba:	e8 21 d5 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102dbf	obj/kern/kernel.asm	/^f0102dbf:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0102dc4	obj/kern/kernel.asm	/^f0102dc4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102dc7	obj/kern/kernel.asm	/^f0102dc7:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102dcc	obj/kern/kernel.asm	/^f0102dcc:	50                   	push   %eax$/;"	l
f0102dcd	obj/kern/kernel.asm	/^f0102dcd:	e8 42 fc ff ff       	call   f0102a14 <check_va2pa>$/;"	l
f0102dd2	obj/kern/kernel.asm	/^f0102dd2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102dd5	obj/kern/kernel.asm	/^f0102dd5:	89 c3                	mov    %eax,%ebx$/;"	l
f0102dd7	obj/kern/kernel.asm	/^f0102dd7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102dda	obj/kern/kernel.asm	/^f0102dda:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f0102ddd	obj/kern/kernel.asm	/^f0102ddd:	e8 7d e5 ff ff       	call   f010135f <page2pa>$/;"	l
f0102de2	obj/kern/kernel.asm	/^f0102de2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102de5	obj/kern/kernel.asm	/^f0102de5:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102de7	obj/kern/kernel.asm	/^f0102de7:	74 19                	je     f0102e02 <check_page+0x33b>$/;"	l
f0102de9	obj/kern/kernel.asm	/^f0102de9:	68 4c 91 10 f0       	push   $0xf010914c$/;"	l
f0102dee	obj/kern/kernel.asm	/^f0102dee:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102df3	obj/kern/kernel.asm	/^f0102df3:	68 d8 03 00 00       	push   $0x3d8$/;"	l
f0102df8	obj/kern/kernel.asm	/^f0102df8:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102dfd	obj/kern/kernel.asm	/^f0102dfd:	e8 de d4 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102e02	obj/kern/kernel.asm	/^f0102e02:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0102e05	obj/kern/kernel.asm	/^f0102e05:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0102e09	obj/kern/kernel.asm	/^f0102e09:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f0102e0d	obj/kern/kernel.asm	/^f0102e0d:	74 19                	je     f0102e28 <check_page+0x361>$/;"	l
f0102e0f	obj/kern/kernel.asm	/^f0102e0f:	68 7c 91 10 f0       	push   $0xf010917c$/;"	l
f0102e14	obj/kern/kernel.asm	/^f0102e14:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102e19	obj/kern/kernel.asm	/^f0102e19:	68 d9 03 00 00       	push   $0x3d9$/;"	l
f0102e1e	obj/kern/kernel.asm	/^f0102e1e:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102e23	obj/kern/kernel.asm	/^f0102e23:	e8 b8 d4 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102e28	obj/kern/kernel.asm	/^f0102e28:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102e2b	obj/kern/kernel.asm	/^f0102e2b:	6a 00                	push   $0x0$/;"	l
f0102e2d	obj/kern/kernel.asm	/^f0102e2d:	e8 82 ea ff ff       	call   f01018b4 <page_alloc>$/;"	l
f0102e32	obj/kern/kernel.asm	/^f0102e32:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102e35	obj/kern/kernel.asm	/^f0102e35:	85 c0                	test   %eax,%eax$/;"	l
f0102e37	obj/kern/kernel.asm	/^f0102e37:	74 19                	je     f0102e52 <check_page+0x38b>$/;"	l
f0102e39	obj/kern/kernel.asm	/^f0102e39:	68 1b 8e 10 f0       	push   $0xf0108e1b$/;"	l
f0102e3e	obj/kern/kernel.asm	/^f0102e3e:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102e43	obj/kern/kernel.asm	/^f0102e43:	68 dc 03 00 00       	push   $0x3dc$/;"	l
f0102e48	obj/kern/kernel.asm	/^f0102e48:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102e4d	obj/kern/kernel.asm	/^f0102e4d:	e8 8e d4 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102e52	obj/kern/kernel.asm	/^f0102e52:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0102e57	obj/kern/kernel.asm	/^f0102e57:	6a 02                	push   $0x2$/;"	l
f0102e59	obj/kern/kernel.asm	/^f0102e59:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102e5e	obj/kern/kernel.asm	/^f0102e5e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f0102e61	obj/kern/kernel.asm	/^f0102e61:	50                   	push   %eax$/;"	l
f0102e62	obj/kern/kernel.asm	/^f0102e62:	e8 6e ec ff ff       	call   f0101ad5 <page_insert>$/;"	l
f0102e67	obj/kern/kernel.asm	/^f0102e67:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102e6a	obj/kern/kernel.asm	/^f0102e6a:	85 c0                	test   %eax,%eax$/;"	l
f0102e6c	obj/kern/kernel.asm	/^f0102e6c:	74 19                	je     f0102e87 <check_page+0x3c0>$/;"	l
f0102e6e	obj/kern/kernel.asm	/^f0102e6e:	68 10 91 10 f0       	push   $0xf0109110$/;"	l
f0102e73	obj/kern/kernel.asm	/^f0102e73:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102e78	obj/kern/kernel.asm	/^f0102e78:	68 df 03 00 00       	push   $0x3df$/;"	l
f0102e7d	obj/kern/kernel.asm	/^f0102e7d:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102e82	obj/kern/kernel.asm	/^f0102e82:	e8 59 d4 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102e87	obj/kern/kernel.asm	/^f0102e87:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0102e8c	obj/kern/kernel.asm	/^f0102e8c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102e8f	obj/kern/kernel.asm	/^f0102e8f:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102e94	obj/kern/kernel.asm	/^f0102e94:	50                   	push   %eax$/;"	l
f0102e95	obj/kern/kernel.asm	/^f0102e95:	e8 7a fb ff ff       	call   f0102a14 <check_va2pa>$/;"	l
f0102e9a	obj/kern/kernel.asm	/^f0102e9a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102e9d	obj/kern/kernel.asm	/^f0102e9d:	89 c3                	mov    %eax,%ebx$/;"	l
f0102e9f	obj/kern/kernel.asm	/^f0102e9f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102ea2	obj/kern/kernel.asm	/^f0102ea2:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f0102ea5	obj/kern/kernel.asm	/^f0102ea5:	e8 b5 e4 ff ff       	call   f010135f <page2pa>$/;"	l
f0102eaa	obj/kern/kernel.asm	/^f0102eaa:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102ead	obj/kern/kernel.asm	/^f0102ead:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102eaf	obj/kern/kernel.asm	/^f0102eaf:	74 19                	je     f0102eca <check_page+0x403>$/;"	l
f0102eb1	obj/kern/kernel.asm	/^f0102eb1:	68 4c 91 10 f0       	push   $0xf010914c$/;"	l
f0102eb6	obj/kern/kernel.asm	/^f0102eb6:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102ebb	obj/kern/kernel.asm	/^f0102ebb:	68 e0 03 00 00       	push   $0x3e0$/;"	l
f0102ec0	obj/kern/kernel.asm	/^f0102ec0:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102ec5	obj/kern/kernel.asm	/^f0102ec5:	e8 16 d4 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102eca	obj/kern/kernel.asm	/^f0102eca:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0102ecd	obj/kern/kernel.asm	/^f0102ecd:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0102ed1	obj/kern/kernel.asm	/^f0102ed1:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f0102ed5	obj/kern/kernel.asm	/^f0102ed5:	74 19                	je     f0102ef0 <check_page+0x429>$/;"	l
f0102ed7	obj/kern/kernel.asm	/^f0102ed7:	68 7c 91 10 f0       	push   $0xf010917c$/;"	l
f0102edc	obj/kern/kernel.asm	/^f0102edc:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102ee1	obj/kern/kernel.asm	/^f0102ee1:	68 e1 03 00 00       	push   $0x3e1$/;"	l
f0102ee6	obj/kern/kernel.asm	/^f0102ee6:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102eeb	obj/kern/kernel.asm	/^f0102eeb:	e8 f0 d3 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102ef0	obj/kern/kernel.asm	/^f0102ef0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102ef3	obj/kern/kernel.asm	/^f0102ef3:	6a 00                	push   $0x0$/;"	l
f0102ef5	obj/kern/kernel.asm	/^f0102ef5:	e8 ba e9 ff ff       	call   f01018b4 <page_alloc>$/;"	l
f0102efa	obj/kern/kernel.asm	/^f0102efa:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102efd	obj/kern/kernel.asm	/^f0102efd:	85 c0                	test   %eax,%eax$/;"	l
f0102eff	obj/kern/kernel.asm	/^f0102eff:	74 19                	je     f0102f1a <check_page+0x453>$/;"	l
f0102f01	obj/kern/kernel.asm	/^f0102f01:	68 1b 8e 10 f0       	push   $0xf0108e1b$/;"	l
f0102f06	obj/kern/kernel.asm	/^f0102f06:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102f0b	obj/kern/kernel.asm	/^f0102f0b:	68 e5 03 00 00       	push   $0x3e5$/;"	l
f0102f10	obj/kern/kernel.asm	/^f0102f10:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102f15	obj/kern/kernel.asm	/^f0102f15:	e8 c6 d3 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102f1a	obj/kern/kernel.asm	/^f0102f1a:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0102f1f	obj/kern/kernel.asm	/^f0102f1f:	8b 00                	mov    (%eax),%eax$/;"	l
f0102f21	obj/kern/kernel.asm	/^f0102f21:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0102f26	obj/kern/kernel.asm	/^f0102f26:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102f29	obj/kern/kernel.asm	/^f0102f29:	50                   	push   %eax$/;"	l
f0102f2a	obj/kern/kernel.asm	/^f0102f2a:	68 e8 03 00 00       	push   $0x3e8$/;"	l
f0102f2f	obj/kern/kernel.asm	/^f0102f2f:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102f34	obj/kern/kernel.asm	/^f0102f34:	e8 f2 e3 ff ff       	call   f010132b <_kaddr>$/;"	l
f0102f39	obj/kern/kernel.asm	/^f0102f39:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102f3c	obj/kern/kernel.asm	/^f0102f3c:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f0102f3f	obj/kern/kernel.asm	/^f0102f3f:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0102f44	obj/kern/kernel.asm	/^f0102f44:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0102f47	obj/kern/kernel.asm	/^f0102f47:	6a 00                	push   $0x0$/;"	l
f0102f49	obj/kern/kernel.asm	/^f0102f49:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102f4e	obj/kern/kernel.asm	/^f0102f4e:	50                   	push   %eax$/;"	l
f0102f4f	obj/kern/kernel.asm	/^f0102f4f:	e8 3f ea ff ff       	call   f0101993 <pgdir_walk>$/;"	l
f0102f54	obj/kern/kernel.asm	/^f0102f54:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102f57	obj/kern/kernel.asm	/^f0102f57:	89 c2                	mov    %eax,%edx$/;"	l
f0102f59	obj/kern/kernel.asm	/^f0102f59:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f0102f5c	obj/kern/kernel.asm	/^f0102f5c:	83 c0 04             	add    $0x4,%eax$/;"	l
f0102f5f	obj/kern/kernel.asm	/^f0102f5f:	39 c2                	cmp    %eax,%edx$/;"	l
f0102f61	obj/kern/kernel.asm	/^f0102f61:	74 19                	je     f0102f7c <check_page+0x4b5>$/;"	l
f0102f63	obj/kern/kernel.asm	/^f0102f63:	68 90 91 10 f0       	push   $0xf0109190$/;"	l
f0102f68	obj/kern/kernel.asm	/^f0102f68:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102f6d	obj/kern/kernel.asm	/^f0102f6d:	68 e9 03 00 00       	push   $0x3e9$/;"	l
f0102f72	obj/kern/kernel.asm	/^f0102f72:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102f77	obj/kern/kernel.asm	/^f0102f77:	e8 64 d3 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102f7c	obj/kern/kernel.asm	/^f0102f7c:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0102f81	obj/kern/kernel.asm	/^f0102f81:	6a 06                	push   $0x6$/;"	l
f0102f83	obj/kern/kernel.asm	/^f0102f83:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102f88	obj/kern/kernel.asm	/^f0102f88:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f0102f8b	obj/kern/kernel.asm	/^f0102f8b:	50                   	push   %eax$/;"	l
f0102f8c	obj/kern/kernel.asm	/^f0102f8c:	e8 44 eb ff ff       	call   f0101ad5 <page_insert>$/;"	l
f0102f91	obj/kern/kernel.asm	/^f0102f91:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102f94	obj/kern/kernel.asm	/^f0102f94:	85 c0                	test   %eax,%eax$/;"	l
f0102f96	obj/kern/kernel.asm	/^f0102f96:	74 19                	je     f0102fb1 <check_page+0x4ea>$/;"	l
f0102f98	obj/kern/kernel.asm	/^f0102f98:	68 d0 91 10 f0       	push   $0xf01091d0$/;"	l
f0102f9d	obj/kern/kernel.asm	/^f0102f9d:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102fa2	obj/kern/kernel.asm	/^f0102fa2:	68 ec 03 00 00       	push   $0x3ec$/;"	l
f0102fa7	obj/kern/kernel.asm	/^f0102fa7:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102fac	obj/kern/kernel.asm	/^f0102fac:	e8 2f d3 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102fb1	obj/kern/kernel.asm	/^f0102fb1:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0102fb6	obj/kern/kernel.asm	/^f0102fb6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0102fb9	obj/kern/kernel.asm	/^f0102fb9:	68 00 10 00 00       	push   $0x1000$/;"	l
f0102fbe	obj/kern/kernel.asm	/^f0102fbe:	50                   	push   %eax$/;"	l
f0102fbf	obj/kern/kernel.asm	/^f0102fbf:	e8 50 fa ff ff       	call   f0102a14 <check_va2pa>$/;"	l
f0102fc4	obj/kern/kernel.asm	/^f0102fc4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102fc7	obj/kern/kernel.asm	/^f0102fc7:	89 c3                	mov    %eax,%ebx$/;"	l
f0102fc9	obj/kern/kernel.asm	/^f0102fc9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0102fcc	obj/kern/kernel.asm	/^f0102fcc:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f0102fcf	obj/kern/kernel.asm	/^f0102fcf:	e8 8b e3 ff ff       	call   f010135f <page2pa>$/;"	l
f0102fd4	obj/kern/kernel.asm	/^f0102fd4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0102fd7	obj/kern/kernel.asm	/^f0102fd7:	39 c3                	cmp    %eax,%ebx$/;"	l
f0102fd9	obj/kern/kernel.asm	/^f0102fd9:	74 19                	je     f0102ff4 <check_page+0x52d>$/;"	l
f0102fdb	obj/kern/kernel.asm	/^f0102fdb:	68 4c 91 10 f0       	push   $0xf010914c$/;"	l
f0102fe0	obj/kern/kernel.asm	/^f0102fe0:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0102fe5	obj/kern/kernel.asm	/^f0102fe5:	68 ed 03 00 00       	push   $0x3ed$/;"	l
f0102fea	obj/kern/kernel.asm	/^f0102fea:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0102fef	obj/kern/kernel.asm	/^f0102fef:	e8 ec d2 ff ff       	call   f01002e0 <_panic>$/;"	l
f0102ff4	obj/kern/kernel.asm	/^f0102ff4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0102ff7	obj/kern/kernel.asm	/^f0102ff7:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0102ffb	obj/kern/kernel.asm	/^f0102ffb:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f0102fff	obj/kern/kernel.asm	/^f0102fff:	74 19                	je     f010301a <check_page+0x553>$/;"	l
f0103001	obj/kern/kernel.asm	/^f0103001:	68 7c 91 10 f0       	push   $0xf010917c$/;"	l
f0103006	obj/kern/kernel.asm	/^f0103006:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f010300b	obj/kern/kernel.asm	/^f010300b:	68 ee 03 00 00       	push   $0x3ee$/;"	l
f0103010	obj/kern/kernel.asm	/^f0103010:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103015	obj/kern/kernel.asm	/^f0103015:	e8 c6 d2 ff ff       	call   f01002e0 <_panic>$/;"	l
f010301a	obj/kern/kernel.asm	/^f010301a:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f010301f	obj/kern/kernel.asm	/^f010301f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103022	obj/kern/kernel.asm	/^f0103022:	6a 00                	push   $0x0$/;"	l
f0103024	obj/kern/kernel.asm	/^f0103024:	68 00 10 00 00       	push   $0x1000$/;"	l
f0103029	obj/kern/kernel.asm	/^f0103029:	50                   	push   %eax$/;"	l
f010302a	obj/kern/kernel.asm	/^f010302a:	e8 64 e9 ff ff       	call   f0101993 <pgdir_walk>$/;"	l
f010302f	obj/kern/kernel.asm	/^f010302f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103032	obj/kern/kernel.asm	/^f0103032:	8b 00                	mov    (%eax),%eax$/;"	l
f0103034	obj/kern/kernel.asm	/^f0103034:	83 e0 04             	and    $0x4,%eax$/;"	l
f0103037	obj/kern/kernel.asm	/^f0103037:	85 c0                	test   %eax,%eax$/;"	l
f0103039	obj/kern/kernel.asm	/^f0103039:	75 19                	jne    f0103054 <check_page+0x58d>$/;"	l
f010303b	obj/kern/kernel.asm	/^f010303b:	68 10 92 10 f0       	push   $0xf0109210$/;"	l
f0103040	obj/kern/kernel.asm	/^f0103040:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103045	obj/kern/kernel.asm	/^f0103045:	68 ef 03 00 00       	push   $0x3ef$/;"	l
f010304a	obj/kern/kernel.asm	/^f010304a:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f010304f	obj/kern/kernel.asm	/^f010304f:	e8 8c d2 ff ff       	call   f01002e0 <_panic>$/;"	l
f0103054	obj/kern/kernel.asm	/^f0103054:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0103059	obj/kern/kernel.asm	/^f0103059:	8b 00                	mov    (%eax),%eax$/;"	l
f010305b	obj/kern/kernel.asm	/^f010305b:	83 e0 04             	and    $0x4,%eax$/;"	l
f010305e	obj/kern/kernel.asm	/^f010305e:	85 c0                	test   %eax,%eax$/;"	l
f0103060	obj/kern/kernel.asm	/^f0103060:	75 19                	jne    f010307b <check_page+0x5b4>$/;"	l
f0103062	obj/kern/kernel.asm	/^f0103062:	68 43 92 10 f0       	push   $0xf0109243$/;"	l
f0103067	obj/kern/kernel.asm	/^f0103067:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f010306c	obj/kern/kernel.asm	/^f010306c:	68 f0 03 00 00       	push   $0x3f0$/;"	l
f0103071	obj/kern/kernel.asm	/^f0103071:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103076	obj/kern/kernel.asm	/^f0103076:	e8 65 d2 ff ff       	call   f01002e0 <_panic>$/;"	l
f010307b	obj/kern/kernel.asm	/^f010307b:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0103080	obj/kern/kernel.asm	/^f0103080:	6a 02                	push   $0x2$/;"	l
f0103082	obj/kern/kernel.asm	/^f0103082:	68 00 10 00 00       	push   $0x1000$/;"	l
f0103087	obj/kern/kernel.asm	/^f0103087:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f010308a	obj/kern/kernel.asm	/^f010308a:	50                   	push   %eax$/;"	l
f010308b	obj/kern/kernel.asm	/^f010308b:	e8 45 ea ff ff       	call   f0101ad5 <page_insert>$/;"	l
f0103090	obj/kern/kernel.asm	/^f0103090:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103093	obj/kern/kernel.asm	/^f0103093:	85 c0                	test   %eax,%eax$/;"	l
f0103095	obj/kern/kernel.asm	/^f0103095:	74 19                	je     f01030b0 <check_page+0x5e9>$/;"	l
f0103097	obj/kern/kernel.asm	/^f0103097:	68 10 91 10 f0       	push   $0xf0109110$/;"	l
f010309c	obj/kern/kernel.asm	/^f010309c:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01030a1	obj/kern/kernel.asm	/^f01030a1:	68 f3 03 00 00       	push   $0x3f3$/;"	l
f01030a6	obj/kern/kernel.asm	/^f01030a6:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01030ab	obj/kern/kernel.asm	/^f01030ab:	e8 30 d2 ff ff       	call   f01002e0 <_panic>$/;"	l
f01030b0	obj/kern/kernel.asm	/^f01030b0:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f01030b5	obj/kern/kernel.asm	/^f01030b5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01030b8	obj/kern/kernel.asm	/^f01030b8:	6a 00                	push   $0x0$/;"	l
f01030ba	obj/kern/kernel.asm	/^f01030ba:	68 00 10 00 00       	push   $0x1000$/;"	l
f01030bf	obj/kern/kernel.asm	/^f01030bf:	50                   	push   %eax$/;"	l
f01030c0	obj/kern/kernel.asm	/^f01030c0:	e8 ce e8 ff ff       	call   f0101993 <pgdir_walk>$/;"	l
f01030c5	obj/kern/kernel.asm	/^f01030c5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01030c8	obj/kern/kernel.asm	/^f01030c8:	8b 00                	mov    (%eax),%eax$/;"	l
f01030ca	obj/kern/kernel.asm	/^f01030ca:	83 e0 02             	and    $0x2,%eax$/;"	l
f01030cd	obj/kern/kernel.asm	/^f01030cd:	85 c0                	test   %eax,%eax$/;"	l
f01030cf	obj/kern/kernel.asm	/^f01030cf:	75 19                	jne    f01030ea <check_page+0x623>$/;"	l
f01030d1	obj/kern/kernel.asm	/^f01030d1:	68 5c 92 10 f0       	push   $0xf010925c$/;"	l
f01030d6	obj/kern/kernel.asm	/^f01030d6:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01030db	obj/kern/kernel.asm	/^f01030db:	68 f4 03 00 00       	push   $0x3f4$/;"	l
f01030e0	obj/kern/kernel.asm	/^f01030e0:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01030e5	obj/kern/kernel.asm	/^f01030e5:	e8 f6 d1 ff ff       	call   f01002e0 <_panic>$/;"	l
f01030ea	obj/kern/kernel.asm	/^f01030ea:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f01030ef	obj/kern/kernel.asm	/^f01030ef:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01030f2	obj/kern/kernel.asm	/^f01030f2:	6a 00                	push   $0x0$/;"	l
f01030f4	obj/kern/kernel.asm	/^f01030f4:	68 00 10 00 00       	push   $0x1000$/;"	l
f01030f9	obj/kern/kernel.asm	/^f01030f9:	50                   	push   %eax$/;"	l
f01030fa	obj/kern/kernel.asm	/^f01030fa:	e8 94 e8 ff ff       	call   f0101993 <pgdir_walk>$/;"	l
f01030ff	obj/kern/kernel.asm	/^f01030ff:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103102	obj/kern/kernel.asm	/^f0103102:	8b 00                	mov    (%eax),%eax$/;"	l
f0103104	obj/kern/kernel.asm	/^f0103104:	83 e0 04             	and    $0x4,%eax$/;"	l
f0103107	obj/kern/kernel.asm	/^f0103107:	85 c0                	test   %eax,%eax$/;"	l
f0103109	obj/kern/kernel.asm	/^f0103109:	74 19                	je     f0103124 <check_page+0x65d>$/;"	l
f010310b	obj/kern/kernel.asm	/^f010310b:	68 90 92 10 f0       	push   $0xf0109290$/;"	l
f0103110	obj/kern/kernel.asm	/^f0103110:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103115	obj/kern/kernel.asm	/^f0103115:	68 f5 03 00 00       	push   $0x3f5$/;"	l
f010311a	obj/kern/kernel.asm	/^f010311a:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f010311f	obj/kern/kernel.asm	/^f010311f:	e8 bc d1 ff ff       	call   f01002e0 <_panic>$/;"	l
f0103124	obj/kern/kernel.asm	/^f0103124:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0103129	obj/kern/kernel.asm	/^f0103129:	6a 02                	push   $0x2$/;"	l
f010312b	obj/kern/kernel.asm	/^f010312b:	68 00 00 40 00       	push   $0x400000$/;"	l
f0103130	obj/kern/kernel.asm	/^f0103130:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
f0103133	obj/kern/kernel.asm	/^f0103133:	50                   	push   %eax$/;"	l
f0103134	obj/kern/kernel.asm	/^f0103134:	e8 9c e9 ff ff       	call   f0101ad5 <page_insert>$/;"	l
f0103139	obj/kern/kernel.asm	/^f0103139:	83 c4 10             	add    $0x10,%esp$/;"	l
f010313c	obj/kern/kernel.asm	/^f010313c:	85 c0                	test   %eax,%eax$/;"	l
f010313e	obj/kern/kernel.asm	/^f010313e:	78 19                	js     f0103159 <check_page+0x692>$/;"	l
f0103140	obj/kern/kernel.asm	/^f0103140:	68 c8 92 10 f0       	push   $0xf01092c8$/;"	l
f0103145	obj/kern/kernel.asm	/^f0103145:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f010314a	obj/kern/kernel.asm	/^f010314a:	68 f8 03 00 00       	push   $0x3f8$/;"	l
f010314f	obj/kern/kernel.asm	/^f010314f:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103154	obj/kern/kernel.asm	/^f0103154:	e8 87 d1 ff ff       	call   f01002e0 <_panic>$/;"	l
f0103159	obj/kern/kernel.asm	/^f0103159:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f010315e	obj/kern/kernel.asm	/^f010315e:	6a 02                	push   $0x2$/;"	l
f0103160	obj/kern/kernel.asm	/^f0103160:	68 00 10 00 00       	push   $0x1000$/;"	l
f0103165	obj/kern/kernel.asm	/^f0103165:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f0103168	obj/kern/kernel.asm	/^f0103168:	50                   	push   %eax$/;"	l
f0103169	obj/kern/kernel.asm	/^f0103169:	e8 67 e9 ff ff       	call   f0101ad5 <page_insert>$/;"	l
f010316e	obj/kern/kernel.asm	/^f010316e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103171	obj/kern/kernel.asm	/^f0103171:	85 c0                	test   %eax,%eax$/;"	l
f0103173	obj/kern/kernel.asm	/^f0103173:	74 19                	je     f010318e <check_page+0x6c7>$/;"	l
f0103175	obj/kern/kernel.asm	/^f0103175:	68 00 93 10 f0       	push   $0xf0109300$/;"	l
f010317a	obj/kern/kernel.asm	/^f010317a:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f010317f	obj/kern/kernel.asm	/^f010317f:	68 fb 03 00 00       	push   $0x3fb$/;"	l
f0103184	obj/kern/kernel.asm	/^f0103184:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103189	obj/kern/kernel.asm	/^f0103189:	e8 52 d1 ff ff       	call   f01002e0 <_panic>$/;"	l
f010318e	obj/kern/kernel.asm	/^f010318e:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0103193	obj/kern/kernel.asm	/^f0103193:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103196	obj/kern/kernel.asm	/^f0103196:	6a 00                	push   $0x0$/;"	l
f0103198	obj/kern/kernel.asm	/^f0103198:	68 00 10 00 00       	push   $0x1000$/;"	l
f010319d	obj/kern/kernel.asm	/^f010319d:	50                   	push   %eax$/;"	l
f010319e	obj/kern/kernel.asm	/^f010319e:	e8 f0 e7 ff ff       	call   f0101993 <pgdir_walk>$/;"	l
f01031a3	obj/kern/kernel.asm	/^f01031a3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01031a6	obj/kern/kernel.asm	/^f01031a6:	8b 00                	mov    (%eax),%eax$/;"	l
f01031a8	obj/kern/kernel.asm	/^f01031a8:	83 e0 04             	and    $0x4,%eax$/;"	l
f01031ab	obj/kern/kernel.asm	/^f01031ab:	85 c0                	test   %eax,%eax$/;"	l
f01031ad	obj/kern/kernel.asm	/^f01031ad:	74 19                	je     f01031c8 <check_page+0x701>$/;"	l
f01031af	obj/kern/kernel.asm	/^f01031af:	68 90 92 10 f0       	push   $0xf0109290$/;"	l
f01031b4	obj/kern/kernel.asm	/^f01031b4:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01031b9	obj/kern/kernel.asm	/^f01031b9:	68 fc 03 00 00       	push   $0x3fc$/;"	l
f01031be	obj/kern/kernel.asm	/^f01031be:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01031c3	obj/kern/kernel.asm	/^f01031c3:	e8 18 d1 ff ff       	call   f01002e0 <_panic>$/;"	l
f01031c8	obj/kern/kernel.asm	/^f01031c8:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f01031cd	obj/kern/kernel.asm	/^f01031cd:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01031d0	obj/kern/kernel.asm	/^f01031d0:	6a 00                	push   $0x0$/;"	l
f01031d2	obj/kern/kernel.asm	/^f01031d2:	50                   	push   %eax$/;"	l
f01031d3	obj/kern/kernel.asm	/^f01031d3:	e8 3c f8 ff ff       	call   f0102a14 <check_va2pa>$/;"	l
f01031d8	obj/kern/kernel.asm	/^f01031d8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01031db	obj/kern/kernel.asm	/^f01031db:	89 c3                	mov    %eax,%ebx$/;"	l
f01031dd	obj/kern/kernel.asm	/^f01031dd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01031e0	obj/kern/kernel.asm	/^f01031e0:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f01031e3	obj/kern/kernel.asm	/^f01031e3:	e8 77 e1 ff ff       	call   f010135f <page2pa>$/;"	l
f01031e8	obj/kern/kernel.asm	/^f01031e8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01031eb	obj/kern/kernel.asm	/^f01031eb:	39 c3                	cmp    %eax,%ebx$/;"	l
f01031ed	obj/kern/kernel.asm	/^f01031ed:	74 19                	je     f0103208 <check_page+0x741>$/;"	l
f01031ef	obj/kern/kernel.asm	/^f01031ef:	68 3c 93 10 f0       	push   $0xf010933c$/;"	l
f01031f4	obj/kern/kernel.asm	/^f01031f4:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01031f9	obj/kern/kernel.asm	/^f01031f9:	68 ff 03 00 00       	push   $0x3ff$/;"	l
f01031fe	obj/kern/kernel.asm	/^f01031fe:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103203	obj/kern/kernel.asm	/^f0103203:	e8 d8 d0 ff ff       	call   f01002e0 <_panic>$/;"	l
f0103208	obj/kern/kernel.asm	/^f0103208:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f010320d	obj/kern/kernel.asm	/^f010320d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103210	obj/kern/kernel.asm	/^f0103210:	68 00 10 00 00       	push   $0x1000$/;"	l
f0103215	obj/kern/kernel.asm	/^f0103215:	50                   	push   %eax$/;"	l
f0103216	obj/kern/kernel.asm	/^f0103216:	e8 f9 f7 ff ff       	call   f0102a14 <check_va2pa>$/;"	l
f010321b	obj/kern/kernel.asm	/^f010321b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010321e	obj/kern/kernel.asm	/^f010321e:	89 c3                	mov    %eax,%ebx$/;"	l
f0103220	obj/kern/kernel.asm	/^f0103220:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103223	obj/kern/kernel.asm	/^f0103223:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f0103226	obj/kern/kernel.asm	/^f0103226:	e8 34 e1 ff ff       	call   f010135f <page2pa>$/;"	l
f010322b	obj/kern/kernel.asm	/^f010322b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010322e	obj/kern/kernel.asm	/^f010322e:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103230	obj/kern/kernel.asm	/^f0103230:	74 19                	je     f010324b <check_page+0x784>$/;"	l
f0103232	obj/kern/kernel.asm	/^f0103232:	68 68 93 10 f0       	push   $0xf0109368$/;"	l
f0103237	obj/kern/kernel.asm	/^f0103237:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f010323c	obj/kern/kernel.asm	/^f010323c:	68 00 04 00 00       	push   $0x400$/;"	l
f0103241	obj/kern/kernel.asm	/^f0103241:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103246	obj/kern/kernel.asm	/^f0103246:	e8 95 d0 ff ff       	call   f01002e0 <_panic>$/;"	l
f010324b	obj/kern/kernel.asm	/^f010324b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010324e	obj/kern/kernel.asm	/^f010324e:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0103252	obj/kern/kernel.asm	/^f0103252:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
f0103256	obj/kern/kernel.asm	/^f0103256:	74 19                	je     f0103271 <check_page+0x7aa>$/;"	l
f0103258	obj/kern/kernel.asm	/^f0103258:	68 98 93 10 f0       	push   $0xf0109398$/;"	l
f010325d	obj/kern/kernel.asm	/^f010325d:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103262	obj/kern/kernel.asm	/^f0103262:	68 02 04 00 00       	push   $0x402$/;"	l
f0103267	obj/kern/kernel.asm	/^f0103267:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f010326c	obj/kern/kernel.asm	/^f010326c:	e8 6f d0 ff ff       	call   f01002e0 <_panic>$/;"	l
f0103271	obj/kern/kernel.asm	/^f0103271:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0103274	obj/kern/kernel.asm	/^f0103274:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0103278	obj/kern/kernel.asm	/^f0103278:	66 85 c0             	test   %ax,%ax$/;"	l
f010327b	obj/kern/kernel.asm	/^f010327b:	74 19                	je     f0103296 <check_page+0x7cf>$/;"	l
f010327d	obj/kern/kernel.asm	/^f010327d:	68 a9 93 10 f0       	push   $0xf01093a9$/;"	l
f0103282	obj/kern/kernel.asm	/^f0103282:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103287	obj/kern/kernel.asm	/^f0103287:	68 03 04 00 00       	push   $0x403$/;"	l
f010328c	obj/kern/kernel.asm	/^f010328c:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103291	obj/kern/kernel.asm	/^f0103291:	e8 4a d0 ff ff       	call   f01002e0 <_panic>$/;"	l
f0103296	obj/kern/kernel.asm	/^f0103296:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103299	obj/kern/kernel.asm	/^f0103299:	6a 00                	push   $0x0$/;"	l
f010329b	obj/kern/kernel.asm	/^f010329b:	e8 14 e6 ff ff       	call   f01018b4 <page_alloc>$/;"	l
f01032a0	obj/kern/kernel.asm	/^f01032a0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01032a3	obj/kern/kernel.asm	/^f01032a3:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01032a6	obj/kern/kernel.asm	/^f01032a6:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f01032aa	obj/kern/kernel.asm	/^f01032aa:	74 08                	je     f01032b4 <check_page+0x7ed>$/;"	l
f01032ac	obj/kern/kernel.asm	/^f01032ac:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01032af	obj/kern/kernel.asm	/^f01032af:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
f01032b2	obj/kern/kernel.asm	/^f01032b2:	74 19                	je     f01032cd <check_page+0x806>$/;"	l
f01032b4	obj/kern/kernel.asm	/^f01032b4:	68 bc 93 10 f0       	push   $0xf01093bc$/;"	l
f01032b9	obj/kern/kernel.asm	/^f01032b9:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01032be	obj/kern/kernel.asm	/^f01032be:	68 06 04 00 00       	push   $0x406$/;"	l
f01032c3	obj/kern/kernel.asm	/^f01032c3:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01032c8	obj/kern/kernel.asm	/^f01032c8:	e8 13 d0 ff ff       	call   f01002e0 <_panic>$/;"	l
f01032cd	obj/kern/kernel.asm	/^f01032cd:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f01032d2	obj/kern/kernel.asm	/^f01032d2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01032d5	obj/kern/kernel.asm	/^f01032d5:	6a 00                	push   $0x0$/;"	l
f01032d7	obj/kern/kernel.asm	/^f01032d7:	50                   	push   %eax$/;"	l
f01032d8	obj/kern/kernel.asm	/^f01032d8:	e8 db e8 ff ff       	call   f0101bb8 <page_remove>$/;"	l
f01032dd	obj/kern/kernel.asm	/^f01032dd:	83 c4 10             	add    $0x10,%esp$/;"	l
f01032e0	obj/kern/kernel.asm	/^f01032e0:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f01032e5	obj/kern/kernel.asm	/^f01032e5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01032e8	obj/kern/kernel.asm	/^f01032e8:	6a 00                	push   $0x0$/;"	l
f01032ea	obj/kern/kernel.asm	/^f01032ea:	50                   	push   %eax$/;"	l
f01032eb	obj/kern/kernel.asm	/^f01032eb:	e8 24 f7 ff ff       	call   f0102a14 <check_va2pa>$/;"	l
f01032f0	obj/kern/kernel.asm	/^f01032f0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01032f3	obj/kern/kernel.asm	/^f01032f3:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01032f6	obj/kern/kernel.asm	/^f01032f6:	74 19                	je     f0103311 <check_page+0x84a>$/;"	l
f01032f8	obj/kern/kernel.asm	/^f01032f8:	68 e0 93 10 f0       	push   $0xf01093e0$/;"	l
f01032fd	obj/kern/kernel.asm	/^f01032fd:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103302	obj/kern/kernel.asm	/^f0103302:	68 0a 04 00 00       	push   $0x40a$/;"	l
f0103307	obj/kern/kernel.asm	/^f0103307:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f010330c	obj/kern/kernel.asm	/^f010330c:	e8 cf cf ff ff       	call   f01002e0 <_panic>$/;"	l
f0103311	obj/kern/kernel.asm	/^f0103311:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0103316	obj/kern/kernel.asm	/^f0103316:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103319	obj/kern/kernel.asm	/^f0103319:	68 00 10 00 00       	push   $0x1000$/;"	l
f010331e	obj/kern/kernel.asm	/^f010331e:	50                   	push   %eax$/;"	l
f010331f	obj/kern/kernel.asm	/^f010331f:	e8 f0 f6 ff ff       	call   f0102a14 <check_va2pa>$/;"	l
f0103324	obj/kern/kernel.asm	/^f0103324:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103327	obj/kern/kernel.asm	/^f0103327:	89 c3                	mov    %eax,%ebx$/;"	l
f0103329	obj/kern/kernel.asm	/^f0103329:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010332c	obj/kern/kernel.asm	/^f010332c:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f010332f	obj/kern/kernel.asm	/^f010332f:	e8 2b e0 ff ff       	call   f010135f <page2pa>$/;"	l
f0103334	obj/kern/kernel.asm	/^f0103334:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103337	obj/kern/kernel.asm	/^f0103337:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103339	obj/kern/kernel.asm	/^f0103339:	74 19                	je     f0103354 <check_page+0x88d>$/;"	l
f010333b	obj/kern/kernel.asm	/^f010333b:	68 68 93 10 f0       	push   $0xf0109368$/;"	l
f0103340	obj/kern/kernel.asm	/^f0103340:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103345	obj/kern/kernel.asm	/^f0103345:	68 0b 04 00 00       	push   $0x40b$/;"	l
f010334a	obj/kern/kernel.asm	/^f010334a:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f010334f	obj/kern/kernel.asm	/^f010334f:	e8 8c cf ff ff       	call   f01002e0 <_panic>$/;"	l
f0103354	obj/kern/kernel.asm	/^f0103354:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0103357	obj/kern/kernel.asm	/^f0103357:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f010335b	obj/kern/kernel.asm	/^f010335b:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f010335f	obj/kern/kernel.asm	/^f010335f:	74 19                	je     f010337a <check_page+0x8b3>$/;"	l
f0103361	obj/kern/kernel.asm	/^f0103361:	68 ed 90 10 f0       	push   $0xf01090ed$/;"	l
f0103366	obj/kern/kernel.asm	/^f0103366:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f010336b	obj/kern/kernel.asm	/^f010336b:	68 0c 04 00 00       	push   $0x40c$/;"	l
f0103370	obj/kern/kernel.asm	/^f0103370:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103375	obj/kern/kernel.asm	/^f0103375:	e8 66 cf ff ff       	call   f01002e0 <_panic>$/;"	l
f010337a	obj/kern/kernel.asm	/^f010337a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010337d	obj/kern/kernel.asm	/^f010337d:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0103381	obj/kern/kernel.asm	/^f0103381:	66 85 c0             	test   %ax,%ax$/;"	l
f0103384	obj/kern/kernel.asm	/^f0103384:	74 19                	je     f010339f <check_page+0x8d8>$/;"	l
f0103386	obj/kern/kernel.asm	/^f0103386:	68 a9 93 10 f0       	push   $0xf01093a9$/;"	l
f010338b	obj/kern/kernel.asm	/^f010338b:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103390	obj/kern/kernel.asm	/^f0103390:	68 0d 04 00 00       	push   $0x40d$/;"	l
f0103395	obj/kern/kernel.asm	/^f0103395:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f010339a	obj/kern/kernel.asm	/^f010339a:	e8 41 cf ff ff       	call   f01002e0 <_panic>$/;"	l
f010339f	obj/kern/kernel.asm	/^f010339f:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f01033a4	obj/kern/kernel.asm	/^f01033a4:	6a 00                	push   $0x0$/;"	l
f01033a6	obj/kern/kernel.asm	/^f01033a6:	68 00 10 00 00       	push   $0x1000$/;"	l
f01033ab	obj/kern/kernel.asm	/^f01033ab:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f01033ae	obj/kern/kernel.asm	/^f01033ae:	50                   	push   %eax$/;"	l
f01033af	obj/kern/kernel.asm	/^f01033af:	e8 21 e7 ff ff       	call   f0101ad5 <page_insert>$/;"	l
f01033b4	obj/kern/kernel.asm	/^f01033b4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01033b7	obj/kern/kernel.asm	/^f01033b7:	85 c0                	test   %eax,%eax$/;"	l
f01033b9	obj/kern/kernel.asm	/^f01033b9:	74 19                	je     f01033d4 <check_page+0x90d>$/;"	l
f01033bb	obj/kern/kernel.asm	/^f01033bb:	68 04 94 10 f0       	push   $0xf0109404$/;"	l
f01033c0	obj/kern/kernel.asm	/^f01033c0:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01033c5	obj/kern/kernel.asm	/^f01033c5:	68 10 04 00 00       	push   $0x410$/;"	l
f01033ca	obj/kern/kernel.asm	/^f01033ca:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01033cf	obj/kern/kernel.asm	/^f01033cf:	e8 0c cf ff ff       	call   f01002e0 <_panic>$/;"	l
f01033d4	obj/kern/kernel.asm	/^f01033d4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01033d7	obj/kern/kernel.asm	/^f01033d7:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f01033db	obj/kern/kernel.asm	/^f01033db:	66 85 c0             	test   %ax,%ax$/;"	l
f01033de	obj/kern/kernel.asm	/^f01033de:	75 19                	jne    f01033f9 <check_page+0x932>$/;"	l
f01033e0	obj/kern/kernel.asm	/^f01033e0:	68 39 94 10 f0       	push   $0xf0109439$/;"	l
f01033e5	obj/kern/kernel.asm	/^f01033e5:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01033ea	obj/kern/kernel.asm	/^f01033ea:	68 11 04 00 00       	push   $0x411$/;"	l
f01033ef	obj/kern/kernel.asm	/^f01033ef:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01033f4	obj/kern/kernel.asm	/^f01033f4:	e8 e7 ce ff ff       	call   f01002e0 <_panic>$/;"	l
f01033f9	obj/kern/kernel.asm	/^f01033f9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01033fc	obj/kern/kernel.asm	/^f01033fc:	8b 00                	mov    (%eax),%eax$/;"	l
f01033fe	obj/kern/kernel.asm	/^f01033fe:	85 c0                	test   %eax,%eax$/;"	l
f0103400	obj/kern/kernel.asm	/^f0103400:	74 19                	je     f010341b <check_page+0x954>$/;"	l
f0103402	obj/kern/kernel.asm	/^f0103402:	68 45 94 10 f0       	push   $0xf0109445$/;"	l
f0103407	obj/kern/kernel.asm	/^f0103407:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f010340c	obj/kern/kernel.asm	/^f010340c:	68 12 04 00 00       	push   $0x412$/;"	l
f0103411	obj/kern/kernel.asm	/^f0103411:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103416	obj/kern/kernel.asm	/^f0103416:	e8 c5 ce ff ff       	call   f01002e0 <_panic>$/;"	l
f010341b	obj/kern/kernel.asm	/^f010341b:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0103420	obj/kern/kernel.asm	/^f0103420:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103423	obj/kern/kernel.asm	/^f0103423:	68 00 10 00 00       	push   $0x1000$/;"	l
f0103428	obj/kern/kernel.asm	/^f0103428:	50                   	push   %eax$/;"	l
f0103429	obj/kern/kernel.asm	/^f0103429:	e8 8a e7 ff ff       	call   f0101bb8 <page_remove>$/;"	l
f010342e	obj/kern/kernel.asm	/^f010342e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103431	obj/kern/kernel.asm	/^f0103431:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0103436	obj/kern/kernel.asm	/^f0103436:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103439	obj/kern/kernel.asm	/^f0103439:	6a 00                	push   $0x0$/;"	l
f010343b	obj/kern/kernel.asm	/^f010343b:	50                   	push   %eax$/;"	l
f010343c	obj/kern/kernel.asm	/^f010343c:	e8 d3 f5 ff ff       	call   f0102a14 <check_va2pa>$/;"	l
f0103441	obj/kern/kernel.asm	/^f0103441:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103444	obj/kern/kernel.asm	/^f0103444:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f0103447	obj/kern/kernel.asm	/^f0103447:	74 19                	je     f0103462 <check_page+0x99b>$/;"	l
f0103449	obj/kern/kernel.asm	/^f0103449:	68 e0 93 10 f0       	push   $0xf01093e0$/;"	l
f010344e	obj/kern/kernel.asm	/^f010344e:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103453	obj/kern/kernel.asm	/^f0103453:	68 16 04 00 00       	push   $0x416$/;"	l
f0103458	obj/kern/kernel.asm	/^f0103458:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f010345d	obj/kern/kernel.asm	/^f010345d:	e8 7e ce ff ff       	call   f01002e0 <_panic>$/;"	l
f0103462	obj/kern/kernel.asm	/^f0103462:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0103467	obj/kern/kernel.asm	/^f0103467:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010346a	obj/kern/kernel.asm	/^f010346a:	68 00 10 00 00       	push   $0x1000$/;"	l
f010346f	obj/kern/kernel.asm	/^f010346f:	50                   	push   %eax$/;"	l
f0103470	obj/kern/kernel.asm	/^f0103470:	e8 9f f5 ff ff       	call   f0102a14 <check_va2pa>$/;"	l
f0103475	obj/kern/kernel.asm	/^f0103475:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103478	obj/kern/kernel.asm	/^f0103478:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f010347b	obj/kern/kernel.asm	/^f010347b:	74 19                	je     f0103496 <check_page+0x9cf>$/;"	l
f010347d	obj/kern/kernel.asm	/^f010347d:	68 5c 94 10 f0       	push   $0xf010945c$/;"	l
f0103482	obj/kern/kernel.asm	/^f0103482:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103487	obj/kern/kernel.asm	/^f0103487:	68 17 04 00 00       	push   $0x417$/;"	l
f010348c	obj/kern/kernel.asm	/^f010348c:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103491	obj/kern/kernel.asm	/^f0103491:	e8 4a ce ff ff       	call   f01002e0 <_panic>$/;"	l
f0103496	obj/kern/kernel.asm	/^f0103496:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0103499	obj/kern/kernel.asm	/^f0103499:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f010349d	obj/kern/kernel.asm	/^f010349d:	66 85 c0             	test   %ax,%ax$/;"	l
f01034a0	obj/kern/kernel.asm	/^f01034a0:	74 19                	je     f01034bb <check_page+0x9f4>$/;"	l
f01034a2	obj/kern/kernel.asm	/^f01034a2:	68 82 94 10 f0       	push   $0xf0109482$/;"	l
f01034a7	obj/kern/kernel.asm	/^f01034a7:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01034ac	obj/kern/kernel.asm	/^f01034ac:	68 18 04 00 00       	push   $0x418$/;"	l
f01034b1	obj/kern/kernel.asm	/^f01034b1:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01034b6	obj/kern/kernel.asm	/^f01034b6:	e8 25 ce ff ff       	call   f01002e0 <_panic>$/;"	l
f01034bb	obj/kern/kernel.asm	/^f01034bb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01034be	obj/kern/kernel.asm	/^f01034be:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f01034c2	obj/kern/kernel.asm	/^f01034c2:	66 85 c0             	test   %ax,%ax$/;"	l
f01034c5	obj/kern/kernel.asm	/^f01034c5:	74 19                	je     f01034e0 <check_page+0xa19>$/;"	l
f01034c7	obj/kern/kernel.asm	/^f01034c7:	68 a9 93 10 f0       	push   $0xf01093a9$/;"	l
f01034cc	obj/kern/kernel.asm	/^f01034cc:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01034d1	obj/kern/kernel.asm	/^f01034d1:	68 19 04 00 00       	push   $0x419$/;"	l
f01034d6	obj/kern/kernel.asm	/^f01034d6:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01034db	obj/kern/kernel.asm	/^f01034db:	e8 00 ce ff ff       	call   f01002e0 <_panic>$/;"	l
f01034e0	obj/kern/kernel.asm	/^f01034e0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01034e3	obj/kern/kernel.asm	/^f01034e3:	6a 00                	push   $0x0$/;"	l
f01034e5	obj/kern/kernel.asm	/^f01034e5:	e8 ca e3 ff ff       	call   f01018b4 <page_alloc>$/;"	l
f01034ea	obj/kern/kernel.asm	/^f01034ea:	83 c4 10             	add    $0x10,%esp$/;"	l
f01034ed	obj/kern/kernel.asm	/^f01034ed:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f01034f0	obj/kern/kernel.asm	/^f01034f0:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f01034f4	obj/kern/kernel.asm	/^f01034f4:	74 08                	je     f01034fe <check_page+0xa37>$/;"	l
f01034f6	obj/kern/kernel.asm	/^f01034f6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01034f9	obj/kern/kernel.asm	/^f01034f9:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
f01034fc	obj/kern/kernel.asm	/^f01034fc:	74 19                	je     f0103517 <check_page+0xa50>$/;"	l
f01034fe	obj/kern/kernel.asm	/^f01034fe:	68 94 94 10 f0       	push   $0xf0109494$/;"	l
f0103503	obj/kern/kernel.asm	/^f0103503:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103508	obj/kern/kernel.asm	/^f0103508:	68 1c 04 00 00       	push   $0x41c$/;"	l
f010350d	obj/kern/kernel.asm	/^f010350d:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103512	obj/kern/kernel.asm	/^f0103512:	e8 c9 cd ff ff       	call   f01002e0 <_panic>$/;"	l
f0103517	obj/kern/kernel.asm	/^f0103517:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010351a	obj/kern/kernel.asm	/^f010351a:	6a 00                	push   $0x0$/;"	l
f010351c	obj/kern/kernel.asm	/^f010351c:	e8 93 e3 ff ff       	call   f01018b4 <page_alloc>$/;"	l
f0103521	obj/kern/kernel.asm	/^f0103521:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103524	obj/kern/kernel.asm	/^f0103524:	85 c0                	test   %eax,%eax$/;"	l
f0103526	obj/kern/kernel.asm	/^f0103526:	74 19                	je     f0103541 <check_page+0xa7a>$/;"	l
f0103528	obj/kern/kernel.asm	/^f0103528:	68 1b 8e 10 f0       	push   $0xf0108e1b$/;"	l
f010352d	obj/kern/kernel.asm	/^f010352d:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103532	obj/kern/kernel.asm	/^f0103532:	68 1f 04 00 00       	push   $0x41f$/;"	l
f0103537	obj/kern/kernel.asm	/^f0103537:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f010353c	obj/kern/kernel.asm	/^f010353c:	e8 9f cd ff ff       	call   f01002e0 <_panic>$/;"	l
f0103541	obj/kern/kernel.asm	/^f0103541:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0103546	obj/kern/kernel.asm	/^f0103546:	8b 00                	mov    (%eax),%eax$/;"	l
f0103548	obj/kern/kernel.asm	/^f0103548:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010354d	obj/kern/kernel.asm	/^f010354d:	89 c3                	mov    %eax,%ebx$/;"	l
f010354f	obj/kern/kernel.asm	/^f010354f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103552	obj/kern/kernel.asm	/^f0103552:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
f0103555	obj/kern/kernel.asm	/^f0103555:	e8 05 de ff ff       	call   f010135f <page2pa>$/;"	l
f010355a	obj/kern/kernel.asm	/^f010355a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010355d	obj/kern/kernel.asm	/^f010355d:	39 c3                	cmp    %eax,%ebx$/;"	l
f010355f	obj/kern/kernel.asm	/^f010355f:	74 19                	je     f010357a <check_page+0xab3>$/;"	l
f0103561	obj/kern/kernel.asm	/^f0103561:	68 98 90 10 f0       	push   $0xf0109098$/;"	l
f0103566	obj/kern/kernel.asm	/^f0103566:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f010356b	obj/kern/kernel.asm	/^f010356b:	68 22 04 00 00       	push   $0x422$/;"	l
f0103570	obj/kern/kernel.asm	/^f0103570:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103575	obj/kern/kernel.asm	/^f0103575:	e8 66 cd ff ff       	call   f01002e0 <_panic>$/;"	l
f010357a	obj/kern/kernel.asm	/^f010357a:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f010357f	obj/kern/kernel.asm	/^f010357f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103585	obj/kern/kernel.asm	/^f0103585:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0103588	obj/kern/kernel.asm	/^f0103588:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f010358c	obj/kern/kernel.asm	/^f010358c:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f0103590	obj/kern/kernel.asm	/^f0103590:	74 19                	je     f01035ab <check_page+0xae4>$/;"	l
f0103592	obj/kern/kernel.asm	/^f0103592:	68 fe 90 10 f0       	push   $0xf01090fe$/;"	l
f0103597	obj/kern/kernel.asm	/^f0103597:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f010359c	obj/kern/kernel.asm	/^f010359c:	68 24 04 00 00       	push   $0x424$/;"	l
f01035a1	obj/kern/kernel.asm	/^f01035a1:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01035a6	obj/kern/kernel.asm	/^f01035a6:	e8 35 cd ff ff       	call   f01002e0 <_panic>$/;"	l
f01035ab	obj/kern/kernel.asm	/^f01035ab:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f01035ae	obj/kern/kernel.asm	/^f01035ae:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f01035b4	obj/kern/kernel.asm	/^f01035b4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01035b7	obj/kern/kernel.asm	/^f01035b7:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
f01035ba	obj/kern/kernel.asm	/^f01035ba:	e8 58 e3 ff ff       	call   f0101917 <page_free>$/;"	l
f01035bf	obj/kern/kernel.asm	/^f01035bf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01035c2	obj/kern/kernel.asm	/^f01035c2:	c7 45 dc 00 10 40 00 	movl   $0x401000,-0x24(%ebp)$/;"	l
f01035c9	obj/kern/kernel.asm	/^f01035c9:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f01035ce	obj/kern/kernel.asm	/^f01035ce:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01035d1	obj/kern/kernel.asm	/^f01035d1:	6a 01                	push   $0x1$/;"	l
f01035d3	obj/kern/kernel.asm	/^f01035d3:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
f01035d6	obj/kern/kernel.asm	/^f01035d6:	50                   	push   %eax$/;"	l
f01035d7	obj/kern/kernel.asm	/^f01035d7:	e8 b7 e3 ff ff       	call   f0101993 <pgdir_walk>$/;"	l
f01035dc	obj/kern/kernel.asm	/^f01035dc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01035df	obj/kern/kernel.asm	/^f01035df:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01035e2	obj/kern/kernel.asm	/^f01035e2:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f01035e7	obj/kern/kernel.asm	/^f01035e7:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f01035ea	obj/kern/kernel.asm	/^f01035ea:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f01035ed	obj/kern/kernel.asm	/^f01035ed:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f01035f0	obj/kern/kernel.asm	/^f01035f0:	01 d0                	add    %edx,%eax$/;"	l
f01035f2	obj/kern/kernel.asm	/^f01035f2:	8b 00                	mov    (%eax),%eax$/;"	l
f01035f4	obj/kern/kernel.asm	/^f01035f4:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f01035f9	obj/kern/kernel.asm	/^f01035f9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01035fc	obj/kern/kernel.asm	/^f01035fc:	50                   	push   %eax$/;"	l
f01035fd	obj/kern/kernel.asm	/^f01035fd:	68 2b 04 00 00       	push   $0x42b$/;"	l
f0103602	obj/kern/kernel.asm	/^f0103602:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103607	obj/kern/kernel.asm	/^f0103607:	e8 1f dd ff ff       	call   f010132b <_kaddr>$/;"	l
f010360c	obj/kern/kernel.asm	/^f010360c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010360f	obj/kern/kernel.asm	/^f010360f:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f0103612	obj/kern/kernel.asm	/^f0103612:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0103615	obj/kern/kernel.asm	/^f0103615:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103618	obj/kern/kernel.asm	/^f0103618:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f010361d	obj/kern/kernel.asm	/^f010361d:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f0103624	obj/kern/kernel.asm	/^f0103624:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0103627	obj/kern/kernel.asm	/^f0103627:	01 c2                	add    %eax,%edx$/;"	l
f0103629	obj/kern/kernel.asm	/^f0103629:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f010362c	obj/kern/kernel.asm	/^f010362c:	39 c2                	cmp    %eax,%edx$/;"	l
f010362e	obj/kern/kernel.asm	/^f010362e:	74 19                	je     f0103649 <check_page+0xb82>$/;"	l
f0103630	obj/kern/kernel.asm	/^f0103630:	68 b6 94 10 f0       	push   $0xf01094b6$/;"	l
f0103635	obj/kern/kernel.asm	/^f0103635:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f010363a	obj/kern/kernel.asm	/^f010363a:	68 2c 04 00 00       	push   $0x42c$/;"	l
f010363f	obj/kern/kernel.asm	/^f010363f:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103644	obj/kern/kernel.asm	/^f0103644:	e8 97 cc ff ff       	call   f01002e0 <_panic>$/;"	l
f0103649	obj/kern/kernel.asm	/^f0103649:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f010364e	obj/kern/kernel.asm	/^f010364e:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
f0103651	obj/kern/kernel.asm	/^f0103651:	c1 ea 16             	shr    $0x16,%edx$/;"	l
f0103654	obj/kern/kernel.asm	/^f0103654:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f0103657	obj/kern/kernel.asm	/^f0103657:	01 d0                	add    %edx,%eax$/;"	l
f0103659	obj/kern/kernel.asm	/^f0103659:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010365f	obj/kern/kernel.asm	/^f010365f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0103662	obj/kern/kernel.asm	/^f0103662:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0103668	obj/kern/kernel.asm	/^f0103668:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010366b	obj/kern/kernel.asm	/^f010366b:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
f010366e	obj/kern/kernel.asm	/^f010366e:	e8 3f dd ff ff       	call   f01013b2 <page2kva>$/;"	l
f0103673	obj/kern/kernel.asm	/^f0103673:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103676	obj/kern/kernel.asm	/^f0103676:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103679	obj/kern/kernel.asm	/^f0103679:	68 00 10 00 00       	push   $0x1000$/;"	l
f010367e	obj/kern/kernel.asm	/^f010367e:	68 ff 00 00 00       	push   $0xff$/;"	l
f0103683	obj/kern/kernel.asm	/^f0103683:	50                   	push   %eax$/;"	l
f0103684	obj/kern/kernel.asm	/^f0103684:	e8 06 3c 00 00       	call   f010728f <memset>$/;"	l
f0103689	obj/kern/kernel.asm	/^f0103689:	83 c4 10             	add    $0x10,%esp$/;"	l
f010368c	obj/kern/kernel.asm	/^f010368c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010368f	obj/kern/kernel.asm	/^f010368f:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
f0103692	obj/kern/kernel.asm	/^f0103692:	e8 80 e2 ff ff       	call   f0101917 <page_free>$/;"	l
f0103697	obj/kern/kernel.asm	/^f0103697:	83 c4 10             	add    $0x10,%esp$/;"	l
f010369a	obj/kern/kernel.asm	/^f010369a:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f010369f	obj/kern/kernel.asm	/^f010369f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01036a2	obj/kern/kernel.asm	/^f01036a2:	6a 01                	push   $0x1$/;"	l
f01036a4	obj/kern/kernel.asm	/^f01036a4:	6a 00                	push   $0x0$/;"	l
f01036a6	obj/kern/kernel.asm	/^f01036a6:	50                   	push   %eax$/;"	l
f01036a7	obj/kern/kernel.asm	/^f01036a7:	e8 e7 e2 ff ff       	call   f0101993 <pgdir_walk>$/;"	l
f01036ac	obj/kern/kernel.asm	/^f01036ac:	83 c4 10             	add    $0x10,%esp$/;"	l
f01036af	obj/kern/kernel.asm	/^f01036af:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01036b2	obj/kern/kernel.asm	/^f01036b2:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
f01036b5	obj/kern/kernel.asm	/^f01036b5:	e8 f8 dc ff ff       	call   f01013b2 <page2kva>$/;"	l
f01036ba	obj/kern/kernel.asm	/^f01036ba:	83 c4 10             	add    $0x10,%esp$/;"	l
f01036bd	obj/kern/kernel.asm	/^f01036bd:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01036c0	obj/kern/kernel.asm	/^f01036c0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01036c7	obj/kern/kernel.asm	/^f01036c7:	eb 31                	jmp    f01036fa <check_page+0xc33>$/;"	l
f01036c9	obj/kern/kernel.asm	/^f01036c9:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f01036cc	obj/kern/kernel.asm	/^f01036cc:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f01036cf	obj/kern/kernel.asm	/^f01036cf:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f01036d2	obj/kern/kernel.asm	/^f01036d2:	01 d0                	add    %edx,%eax$/;"	l
f01036d4	obj/kern/kernel.asm	/^f01036d4:	8b 00                	mov    (%eax),%eax$/;"	l
f01036d6	obj/kern/kernel.asm	/^f01036d6:	83 e0 01             	and    $0x1,%eax$/;"	l
f01036d9	obj/kern/kernel.asm	/^f01036d9:	85 c0                	test   %eax,%eax$/;"	l
f01036db	obj/kern/kernel.asm	/^f01036db:	74 19                	je     f01036f6 <check_page+0xc2f>$/;"	l
f01036dd	obj/kern/kernel.asm	/^f01036dd:	68 ce 94 10 f0       	push   $0xf01094ce$/;"	l
f01036e2	obj/kern/kernel.asm	/^f01036e2:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01036e7	obj/kern/kernel.asm	/^f01036e7:	68 36 04 00 00       	push   $0x436$/;"	l
f01036ec	obj/kern/kernel.asm	/^f01036ec:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01036f1	obj/kern/kernel.asm	/^f01036f1:	e8 ea cb ff ff       	call   f01002e0 <_panic>$/;"	l
f01036f6	obj/kern/kernel.asm	/^f01036f6:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f01036fa	obj/kern/kernel.asm	/^f01036fa:	81 7d f4 ff 03 00 00 	cmpl   $0x3ff,-0xc(%ebp)$/;"	l
f0103701	obj/kern/kernel.asm	/^f0103701:	7e c6                	jle    f01036c9 <check_page+0xc02>$/;"	l
f0103703	obj/kern/kernel.asm	/^f0103703:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0103708	obj/kern/kernel.asm	/^f0103708:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010370e	obj/kern/kernel.asm	/^f010370e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0103711	obj/kern/kernel.asm	/^f0103711:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0103717	obj/kern/kernel.asm	/^f0103717:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010371a	obj/kern/kernel.asm	/^f010371a:	a3 30 02 23 f0       	mov    %eax,0xf0230230$/;"	l
f010371f	obj/kern/kernel.asm	/^f010371f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103722	obj/kern/kernel.asm	/^f0103722:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
f0103725	obj/kern/kernel.asm	/^f0103725:	e8 ed e1 ff ff       	call   f0101917 <page_free>$/;"	l
f010372a	obj/kern/kernel.asm	/^f010372a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010372d	obj/kern/kernel.asm	/^f010372d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103730	obj/kern/kernel.asm	/^f0103730:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f0103733	obj/kern/kernel.asm	/^f0103733:	e8 df e1 ff ff       	call   f0101917 <page_free>$/;"	l
f0103738	obj/kern/kernel.asm	/^f0103738:	83 c4 10             	add    $0x10,%esp$/;"	l
f010373b	obj/kern/kernel.asm	/^f010373b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010373e	obj/kern/kernel.asm	/^f010373e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f0103741	obj/kern/kernel.asm	/^f0103741:	e8 d1 e1 ff ff       	call   f0101917 <page_free>$/;"	l
f0103746	obj/kern/kernel.asm	/^f0103746:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103749	obj/kern/kernel.asm	/^f0103749:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010374c	obj/kern/kernel.asm	/^f010374c:	68 01 10 00 00       	push   $0x1001$/;"	l
f0103751	obj/kern/kernel.asm	/^f0103751:	6a 00                	push   $0x0$/;"	l
f0103753	obj/kern/kernel.asm	/^f0103753:	e8 16 e5 ff ff       	call   f0101c6e <mmio_map_region>$/;"	l
f0103758	obj/kern/kernel.asm	/^f0103758:	83 c4 10             	add    $0x10,%esp$/;"	l
f010375b	obj/kern/kernel.asm	/^f010375b:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f010375e	obj/kern/kernel.asm	/^f010375e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103761	obj/kern/kernel.asm	/^f0103761:	68 00 10 00 00       	push   $0x1000$/;"	l
f0103766	obj/kern/kernel.asm	/^f0103766:	6a 00                	push   $0x0$/;"	l
f0103768	obj/kern/kernel.asm	/^f0103768:	e8 01 e5 ff ff       	call   f0101c6e <mmio_map_region>$/;"	l
f010376d	obj/kern/kernel.asm	/^f010376d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103770	obj/kern/kernel.asm	/^f0103770:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0103773	obj/kern/kernel.asm	/^f0103773:	81 7d d4 ff ff 7f ef 	cmpl   $0xef7fffff,-0x2c(%ebp)$/;"	l
f010377a	obj/kern/kernel.asm	/^f010377a:	76 0f                	jbe    f010378b <check_page+0xcc4>$/;"	l
f010377c	obj/kern/kernel.asm	/^f010377c:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010377f	obj/kern/kernel.asm	/^f010377f:	05 a0 1f 00 00       	add    $0x1fa0,%eax$/;"	l
f0103784	obj/kern/kernel.asm	/^f0103784:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f0103789	obj/kern/kernel.asm	/^f0103789:	76 19                	jbe    f01037a4 <check_page+0xcdd>$/;"	l
f010378b	obj/kern/kernel.asm	/^f010378b:	68 e8 94 10 f0       	push   $0xf01094e8$/;"	l
f0103790	obj/kern/kernel.asm	/^f0103790:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103795	obj/kern/kernel.asm	/^f0103795:	68 46 04 00 00       	push   $0x446$/;"	l
f010379a	obj/kern/kernel.asm	/^f010379a:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f010379f	obj/kern/kernel.asm	/^f010379f:	e8 3c cb ff ff       	call   f01002e0 <_panic>$/;"	l
f01037a4	obj/kern/kernel.asm	/^f01037a4:	81 7d d0 ff ff 7f ef 	cmpl   $0xef7fffff,-0x30(%ebp)$/;"	l
f01037ab	obj/kern/kernel.asm	/^f01037ab:	76 0f                	jbe    f01037bc <check_page+0xcf5>$/;"	l
f01037ad	obj/kern/kernel.asm	/^f01037ad:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01037b0	obj/kern/kernel.asm	/^f01037b0:	05 a0 1f 00 00       	add    $0x1fa0,%eax$/;"	l
f01037b5	obj/kern/kernel.asm	/^f01037b5:	3d ff ff bf ef       	cmp    $0xefbfffff,%eax$/;"	l
f01037ba	obj/kern/kernel.asm	/^f01037ba:	76 19                	jbe    f01037d5 <check_page+0xd0e>$/;"	l
f01037bc	obj/kern/kernel.asm	/^f01037bc:	68 10 95 10 f0       	push   $0xf0109510$/;"	l
f01037c1	obj/kern/kernel.asm	/^f01037c1:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01037c6	obj/kern/kernel.asm	/^f01037c6:	68 47 04 00 00       	push   $0x447$/;"	l
f01037cb	obj/kern/kernel.asm	/^f01037cb:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01037d0	obj/kern/kernel.asm	/^f01037d0:	e8 0b cb ff ff       	call   f01002e0 <_panic>$/;"	l
f01037d5	obj/kern/kernel.asm	/^f01037d5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01037d8	obj/kern/kernel.asm	/^f01037d8:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
f01037dd	obj/kern/kernel.asm	/^f01037dd:	85 c0                	test   %eax,%eax$/;"	l
f01037df	obj/kern/kernel.asm	/^f01037df:	75 0c                	jne    f01037ed <check_page+0xd26>$/;"	l
f01037e1	obj/kern/kernel.asm	/^f01037e1:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01037e4	obj/kern/kernel.asm	/^f01037e4:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
f01037e9	obj/kern/kernel.asm	/^f01037e9:	85 c0                	test   %eax,%eax$/;"	l
f01037eb	obj/kern/kernel.asm	/^f01037eb:	74 19                	je     f0103806 <check_page+0xd3f>$/;"	l
f01037ed	obj/kern/kernel.asm	/^f01037ed:	68 38 95 10 f0       	push   $0xf0109538$/;"	l
f01037f2	obj/kern/kernel.asm	/^f01037f2:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01037f7	obj/kern/kernel.asm	/^f01037f7:	68 49 04 00 00       	push   $0x449$/;"	l
f01037fc	obj/kern/kernel.asm	/^f01037fc:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103801	obj/kern/kernel.asm	/^f0103801:	e8 da ca ff ff       	call   f01002e0 <_panic>$/;"	l
f0103806	obj/kern/kernel.asm	/^f0103806:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103809	obj/kern/kernel.asm	/^f0103809:	05 a0 1f 00 00       	add    $0x1fa0,%eax$/;"	l
f010380e	obj/kern/kernel.asm	/^f010380e:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
f0103811	obj/kern/kernel.asm	/^f0103811:	76 19                	jbe    f010382c <check_page+0xd65>$/;"	l
f0103813	obj/kern/kernel.asm	/^f0103813:	68 5f 95 10 f0       	push   $0xf010955f$/;"	l
f0103818	obj/kern/kernel.asm	/^f0103818:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f010381d	obj/kern/kernel.asm	/^f010381d:	68 4b 04 00 00       	push   $0x44b$/;"	l
f0103822	obj/kern/kernel.asm	/^f0103822:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103827	obj/kern/kernel.asm	/^f0103827:	e8 b4 ca ff ff       	call   f01002e0 <_panic>$/;"	l
f010382c	obj/kern/kernel.asm	/^f010382c:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0103831	obj/kern/kernel.asm	/^f0103831:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103834	obj/kern/kernel.asm	/^f0103834:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
f0103837	obj/kern/kernel.asm	/^f0103837:	50                   	push   %eax$/;"	l
f0103838	obj/kern/kernel.asm	/^f0103838:	e8 d7 f1 ff ff       	call   f0102a14 <check_va2pa>$/;"	l
f010383d	obj/kern/kernel.asm	/^f010383d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103840	obj/kern/kernel.asm	/^f0103840:	85 c0                	test   %eax,%eax$/;"	l
f0103842	obj/kern/kernel.asm	/^f0103842:	74 19                	je     f010385d <check_page+0xd96>$/;"	l
f0103844	obj/kern/kernel.asm	/^f0103844:	68 74 95 10 f0       	push   $0xf0109574$/;"	l
f0103849	obj/kern/kernel.asm	/^f0103849:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f010384e	obj/kern/kernel.asm	/^f010384e:	68 4d 04 00 00       	push   $0x44d$/;"	l
f0103853	obj/kern/kernel.asm	/^f0103853:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103858	obj/kern/kernel.asm	/^f0103858:	e8 83 ca ff ff       	call   f01002e0 <_panic>$/;"	l
f010385d	obj/kern/kernel.asm	/^f010385d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103860	obj/kern/kernel.asm	/^f0103860:	8d 90 00 10 00 00    	lea    0x1000(%eax),%edx$/;"	l
f0103866	obj/kern/kernel.asm	/^f0103866:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f010386b	obj/kern/kernel.asm	/^f010386b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010386e	obj/kern/kernel.asm	/^f010386e:	52                   	push   %edx$/;"	l
f010386f	obj/kern/kernel.asm	/^f010386f:	50                   	push   %eax$/;"	l
f0103870	obj/kern/kernel.asm	/^f0103870:	e8 9f f1 ff ff       	call   f0102a14 <check_va2pa>$/;"	l
f0103875	obj/kern/kernel.asm	/^f0103875:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103878	obj/kern/kernel.asm	/^f0103878:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
f010387d	obj/kern/kernel.asm	/^f010387d:	74 19                	je     f0103898 <check_page+0xdd1>$/;"	l
f010387f	obj/kern/kernel.asm	/^f010387f:	68 98 95 10 f0       	push   $0xf0109598$/;"	l
f0103884	obj/kern/kernel.asm	/^f0103884:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103889	obj/kern/kernel.asm	/^f0103889:	68 4e 04 00 00       	push   $0x44e$/;"	l
f010388e	obj/kern/kernel.asm	/^f010388e:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103893	obj/kern/kernel.asm	/^f0103893:	e8 48 ca ff ff       	call   f01002e0 <_panic>$/;"	l
f0103898	obj/kern/kernel.asm	/^f0103898:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f010389d	obj/kern/kernel.asm	/^f010389d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01038a0	obj/kern/kernel.asm	/^f01038a0:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
f01038a3	obj/kern/kernel.asm	/^f01038a3:	50                   	push   %eax$/;"	l
f01038a4	obj/kern/kernel.asm	/^f01038a4:	e8 6b f1 ff ff       	call   f0102a14 <check_va2pa>$/;"	l
f01038a9	obj/kern/kernel.asm	/^f01038a9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01038ac	obj/kern/kernel.asm	/^f01038ac:	85 c0                	test   %eax,%eax$/;"	l
f01038ae	obj/kern/kernel.asm	/^f01038ae:	74 19                	je     f01038c9 <check_page+0xe02>$/;"	l
f01038b0	obj/kern/kernel.asm	/^f01038b0:	68 c8 95 10 f0       	push   $0xf01095c8$/;"	l
f01038b5	obj/kern/kernel.asm	/^f01038b5:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01038ba	obj/kern/kernel.asm	/^f01038ba:	68 4f 04 00 00       	push   $0x44f$/;"	l
f01038bf	obj/kern/kernel.asm	/^f01038bf:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01038c4	obj/kern/kernel.asm	/^f01038c4:	e8 17 ca ff ff       	call   f01002e0 <_panic>$/;"	l
f01038c9	obj/kern/kernel.asm	/^f01038c9:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01038cc	obj/kern/kernel.asm	/^f01038cc:	8d 90 00 10 00 00    	lea    0x1000(%eax),%edx$/;"	l
f01038d2	obj/kern/kernel.asm	/^f01038d2:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f01038d7	obj/kern/kernel.asm	/^f01038d7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01038da	obj/kern/kernel.asm	/^f01038da:	52                   	push   %edx$/;"	l
f01038db	obj/kern/kernel.asm	/^f01038db:	50                   	push   %eax$/;"	l
f01038dc	obj/kern/kernel.asm	/^f01038dc:	e8 33 f1 ff ff       	call   f0102a14 <check_va2pa>$/;"	l
f01038e1	obj/kern/kernel.asm	/^f01038e1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01038e4	obj/kern/kernel.asm	/^f01038e4:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
f01038e7	obj/kern/kernel.asm	/^f01038e7:	74 19                	je     f0103902 <check_page+0xe3b>$/;"	l
f01038e9	obj/kern/kernel.asm	/^f01038e9:	68 ec 95 10 f0       	push   $0xf01095ec$/;"	l
f01038ee	obj/kern/kernel.asm	/^f01038ee:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f01038f3	obj/kern/kernel.asm	/^f01038f3:	68 50 04 00 00       	push   $0x450$/;"	l
f01038f8	obj/kern/kernel.asm	/^f01038f8:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f01038fd	obj/kern/kernel.asm	/^f01038fd:	e8 de c9 ff ff       	call   f01002e0 <_panic>$/;"	l
f0103902	obj/kern/kernel.asm	/^f0103902:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0103905	obj/kern/kernel.asm	/^f0103905:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f010390a	obj/kern/kernel.asm	/^f010390a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010390d	obj/kern/kernel.asm	/^f010390d:	6a 00                	push   $0x0$/;"	l
f010390f	obj/kern/kernel.asm	/^f010390f:	52                   	push   %edx$/;"	l
f0103910	obj/kern/kernel.asm	/^f0103910:	50                   	push   %eax$/;"	l
f0103911	obj/kern/kernel.asm	/^f0103911:	e8 7d e0 ff ff       	call   f0101993 <pgdir_walk>$/;"	l
f0103916	obj/kern/kernel.asm	/^f0103916:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103919	obj/kern/kernel.asm	/^f0103919:	8b 00                	mov    (%eax),%eax$/;"	l
f010391b	obj/kern/kernel.asm	/^f010391b:	83 e0 1a             	and    $0x1a,%eax$/;"	l
f010391e	obj/kern/kernel.asm	/^f010391e:	85 c0                	test   %eax,%eax$/;"	l
f0103920	obj/kern/kernel.asm	/^f0103920:	75 19                	jne    f010393b <check_page+0xe74>$/;"	l
f0103922	obj/kern/kernel.asm	/^f0103922:	68 18 96 10 f0       	push   $0xf0109618$/;"	l
f0103927	obj/kern/kernel.asm	/^f0103927:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f010392c	obj/kern/kernel.asm	/^f010392c:	68 52 04 00 00       	push   $0x452$/;"	l
f0103931	obj/kern/kernel.asm	/^f0103931:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103936	obj/kern/kernel.asm	/^f0103936:	e8 a5 c9 ff ff       	call   f01002e0 <_panic>$/;"	l
f010393b	obj/kern/kernel.asm	/^f010393b:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f010393e	obj/kern/kernel.asm	/^f010393e:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0103943	obj/kern/kernel.asm	/^f0103943:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103946	obj/kern/kernel.asm	/^f0103946:	6a 00                	push   $0x0$/;"	l
f0103948	obj/kern/kernel.asm	/^f0103948:	52                   	push   %edx$/;"	l
f0103949	obj/kern/kernel.asm	/^f0103949:	50                   	push   %eax$/;"	l
f010394a	obj/kern/kernel.asm	/^f010394a:	e8 44 e0 ff ff       	call   f0101993 <pgdir_walk>$/;"	l
f010394f	obj/kern/kernel.asm	/^f010394f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103952	obj/kern/kernel.asm	/^f0103952:	8b 00                	mov    (%eax),%eax$/;"	l
f0103954	obj/kern/kernel.asm	/^f0103954:	83 e0 04             	and    $0x4,%eax$/;"	l
f0103957	obj/kern/kernel.asm	/^f0103957:	85 c0                	test   %eax,%eax$/;"	l
f0103959	obj/kern/kernel.asm	/^f0103959:	74 19                	je     f0103974 <check_page+0xead>$/;"	l
f010395b	obj/kern/kernel.asm	/^f010395b:	68 5c 96 10 f0       	push   $0xf010965c$/;"	l
f0103960	obj/kern/kernel.asm	/^f0103960:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103965	obj/kern/kernel.asm	/^f0103965:	68 53 04 00 00       	push   $0x453$/;"	l
f010396a	obj/kern/kernel.asm	/^f010396a:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f010396f	obj/kern/kernel.asm	/^f010396f:	e8 6c c9 ff ff       	call   f01002e0 <_panic>$/;"	l
f0103974	obj/kern/kernel.asm	/^f0103974:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
f0103977	obj/kern/kernel.asm	/^f0103977:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f010397c	obj/kern/kernel.asm	/^f010397c:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010397f	obj/kern/kernel.asm	/^f010397f:	6a 00                	push   $0x0$/;"	l
f0103981	obj/kern/kernel.asm	/^f0103981:	52                   	push   %edx$/;"	l
f0103982	obj/kern/kernel.asm	/^f0103982:	50                   	push   %eax$/;"	l
f0103983	obj/kern/kernel.asm	/^f0103983:	e8 0b e0 ff ff       	call   f0101993 <pgdir_walk>$/;"	l
f0103988	obj/kern/kernel.asm	/^f0103988:	83 c4 10             	add    $0x10,%esp$/;"	l
f010398b	obj/kern/kernel.asm	/^f010398b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103991	obj/kern/kernel.asm	/^f0103991:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0103994	obj/kern/kernel.asm	/^f0103994:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f0103999	obj/kern/kernel.asm	/^f0103999:	89 c2                	mov    %eax,%edx$/;"	l
f010399b	obj/kern/kernel.asm	/^f010399b:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f01039a0	obj/kern/kernel.asm	/^f01039a0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01039a3	obj/kern/kernel.asm	/^f01039a3:	6a 00                	push   $0x0$/;"	l
f01039a5	obj/kern/kernel.asm	/^f01039a5:	52                   	push   %edx$/;"	l
f01039a6	obj/kern/kernel.asm	/^f01039a6:	50                   	push   %eax$/;"	l
f01039a7	obj/kern/kernel.asm	/^f01039a7:	e8 e7 df ff ff       	call   f0101993 <pgdir_walk>$/;"	l
f01039ac	obj/kern/kernel.asm	/^f01039ac:	83 c4 10             	add    $0x10,%esp$/;"	l
f01039af	obj/kern/kernel.asm	/^f01039af:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01039b5	obj/kern/kernel.asm	/^f01039b5:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f01039b8	obj/kern/kernel.asm	/^f01039b8:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f01039bd	obj/kern/kernel.asm	/^f01039bd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01039c0	obj/kern/kernel.asm	/^f01039c0:	6a 00                	push   $0x0$/;"	l
f01039c2	obj/kern/kernel.asm	/^f01039c2:	52                   	push   %edx$/;"	l
f01039c3	obj/kern/kernel.asm	/^f01039c3:	50                   	push   %eax$/;"	l
f01039c4	obj/kern/kernel.asm	/^f01039c4:	e8 ca df ff ff       	call   f0101993 <pgdir_walk>$/;"	l
f01039c9	obj/kern/kernel.asm	/^f01039c9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01039cc	obj/kern/kernel.asm	/^f01039cc:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f01039d2	obj/kern/kernel.asm	/^f01039d2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01039d5	obj/kern/kernel.asm	/^f01039d5:	68 8f 96 10 f0       	push   $0xf010968f$/;"	l
f01039da	obj/kern/kernel.asm	/^f01039da:	e8 cf 0f 00 00       	call   f01049ae <cprintf>$/;"	l
f01039df	obj/kern/kernel.asm	/^f01039df:	83 c4 10             	add    $0x10,%esp$/;"	l
f01039e2	obj/kern/kernel.asm	/^f01039e2:	90                   	nop$/;"	l
f01039e3	obj/kern/kernel.asm	/^f01039e3:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01039e6	obj/kern/kernel.asm	/^f01039e6:	c9                   	leave  $/;"	l
f01039e7	obj/kern/kernel.asm	/^f01039e7:	c3                   	ret    $/;"	l
f01039e8	obj/kern/kernel.asm	/^f01039e8 <check_page_installed_pgdir>:$/;"	l
f01039e8	obj/kern/kernel.asm	/^f01039e8:	55                   	push   %ebp$/;"	l
f01039e9	obj/kern/kernel.asm	/^f01039e9:	89 e5                	mov    %esp,%ebp$/;"	l
f01039eb	obj/kern/kernel.asm	/^f01039eb:	53                   	push   %ebx$/;"	l
f01039ec	obj/kern/kernel.asm	/^f01039ec:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01039ef	obj/kern/kernel.asm	/^f01039ef:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f01039f6	obj/kern/kernel.asm	/^f01039f6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01039f9	obj/kern/kernel.asm	/^f01039f9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01039fc	obj/kern/kernel.asm	/^f01039fc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01039ff	obj/kern/kernel.asm	/^f01039ff:	6a 00                	push   $0x0$/;"	l
f0103a01	obj/kern/kernel.asm	/^f0103a01:	e8 ae de ff ff       	call   f01018b4 <page_alloc>$/;"	l
f0103a06	obj/kern/kernel.asm	/^f0103a06:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103a09	obj/kern/kernel.asm	/^f0103a09:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0103a0c	obj/kern/kernel.asm	/^f0103a0c:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f0103a10	obj/kern/kernel.asm	/^f0103a10:	75 19                	jne    f0103a2b <check_page_installed_pgdir+0x43>$/;"	l
f0103a12	obj/kern/kernel.asm	/^f0103a12:	68 4a 8d 10 f0       	push   $0xf0108d4a$/;"	l
f0103a17	obj/kern/kernel.asm	/^f0103a17:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103a1c	obj/kern/kernel.asm	/^f0103a1c:	68 68 04 00 00       	push   $0x468$/;"	l
f0103a21	obj/kern/kernel.asm	/^f0103a21:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103a26	obj/kern/kernel.asm	/^f0103a26:	e8 b5 c8 ff ff       	call   f01002e0 <_panic>$/;"	l
f0103a2b	obj/kern/kernel.asm	/^f0103a2b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103a2e	obj/kern/kernel.asm	/^f0103a2e:	6a 00                	push   $0x0$/;"	l
f0103a30	obj/kern/kernel.asm	/^f0103a30:	e8 7f de ff ff       	call   f01018b4 <page_alloc>$/;"	l
f0103a35	obj/kern/kernel.asm	/^f0103a35:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103a38	obj/kern/kernel.asm	/^f0103a38:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0103a3b	obj/kern/kernel.asm	/^f0103a3b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0103a3f	obj/kern/kernel.asm	/^f0103a3f:	75 19                	jne    f0103a5a <check_page_installed_pgdir+0x72>$/;"	l
f0103a41	obj/kern/kernel.asm	/^f0103a41:	68 60 8d 10 f0       	push   $0xf0108d60$/;"	l
f0103a46	obj/kern/kernel.asm	/^f0103a46:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103a4b	obj/kern/kernel.asm	/^f0103a4b:	68 69 04 00 00       	push   $0x469$/;"	l
f0103a50	obj/kern/kernel.asm	/^f0103a50:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103a55	obj/kern/kernel.asm	/^f0103a55:	e8 86 c8 ff ff       	call   f01002e0 <_panic>$/;"	l
f0103a5a	obj/kern/kernel.asm	/^f0103a5a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103a5d	obj/kern/kernel.asm	/^f0103a5d:	6a 00                	push   $0x0$/;"	l
f0103a5f	obj/kern/kernel.asm	/^f0103a5f:	e8 50 de ff ff       	call   f01018b4 <page_alloc>$/;"	l
f0103a64	obj/kern/kernel.asm	/^f0103a64:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103a67	obj/kern/kernel.asm	/^f0103a67:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0103a6a	obj/kern/kernel.asm	/^f0103a6a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0103a6e	obj/kern/kernel.asm	/^f0103a6e:	75 19                	jne    f0103a89 <check_page_installed_pgdir+0xa1>$/;"	l
f0103a70	obj/kern/kernel.asm	/^f0103a70:	68 76 8d 10 f0       	push   $0xf0108d76$/;"	l
f0103a75	obj/kern/kernel.asm	/^f0103a75:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103a7a	obj/kern/kernel.asm	/^f0103a7a:	68 6a 04 00 00       	push   $0x46a$/;"	l
f0103a7f	obj/kern/kernel.asm	/^f0103a7f:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103a84	obj/kern/kernel.asm	/^f0103a84:	e8 57 c8 ff ff       	call   f01002e0 <_panic>$/;"	l
f0103a89	obj/kern/kernel.asm	/^f0103a89:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103a8c	obj/kern/kernel.asm	/^f0103a8c:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f0103a8f	obj/kern/kernel.asm	/^f0103a8f:	e8 83 de ff ff       	call   f0101917 <page_free>$/;"	l
f0103a94	obj/kern/kernel.asm	/^f0103a94:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103a97	obj/kern/kernel.asm	/^f0103a97:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103a9a	obj/kern/kernel.asm	/^f0103a9a:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f0103a9d	obj/kern/kernel.asm	/^f0103a9d:	e8 10 d9 ff ff       	call   f01013b2 <page2kva>$/;"	l
f0103aa2	obj/kern/kernel.asm	/^f0103aa2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103aa5	obj/kern/kernel.asm	/^f0103aa5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103aa8	obj/kern/kernel.asm	/^f0103aa8:	68 00 10 00 00       	push   $0x1000$/;"	l
f0103aad	obj/kern/kernel.asm	/^f0103aad:	6a 01                	push   $0x1$/;"	l
f0103aaf	obj/kern/kernel.asm	/^f0103aaf:	50                   	push   %eax$/;"	l
f0103ab0	obj/kern/kernel.asm	/^f0103ab0:	e8 da 37 00 00       	call   f010728f <memset>$/;"	l
f0103ab5	obj/kern/kernel.asm	/^f0103ab5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ab8	obj/kern/kernel.asm	/^f0103ab8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103abb	obj/kern/kernel.asm	/^f0103abb:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0103abe	obj/kern/kernel.asm	/^f0103abe:	e8 ef d8 ff ff       	call   f01013b2 <page2kva>$/;"	l
f0103ac3	obj/kern/kernel.asm	/^f0103ac3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ac6	obj/kern/kernel.asm	/^f0103ac6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103ac9	obj/kern/kernel.asm	/^f0103ac9:	68 00 10 00 00       	push   $0x1000$/;"	l
f0103ace	obj/kern/kernel.asm	/^f0103ace:	6a 02                	push   $0x2$/;"	l
f0103ad0	obj/kern/kernel.asm	/^f0103ad0:	50                   	push   %eax$/;"	l
f0103ad1	obj/kern/kernel.asm	/^f0103ad1:	e8 b9 37 00 00       	call   f010728f <memset>$/;"	l
f0103ad6	obj/kern/kernel.asm	/^f0103ad6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ad9	obj/kern/kernel.asm	/^f0103ad9:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0103ade	obj/kern/kernel.asm	/^f0103ade:	6a 02                	push   $0x2$/;"	l
f0103ae0	obj/kern/kernel.asm	/^f0103ae0:	68 00 10 00 00       	push   $0x1000$/;"	l
f0103ae5	obj/kern/kernel.asm	/^f0103ae5:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f0103ae8	obj/kern/kernel.asm	/^f0103ae8:	50                   	push   %eax$/;"	l
f0103ae9	obj/kern/kernel.asm	/^f0103ae9:	e8 e7 df ff ff       	call   f0101ad5 <page_insert>$/;"	l
f0103aee	obj/kern/kernel.asm	/^f0103aee:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103af1	obj/kern/kernel.asm	/^f0103af1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0103af4	obj/kern/kernel.asm	/^f0103af4:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0103af8	obj/kern/kernel.asm	/^f0103af8:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f0103afc	obj/kern/kernel.asm	/^f0103afc:	74 19                	je     f0103b17 <check_page_installed_pgdir+0x12f>$/;"	l
f0103afe	obj/kern/kernel.asm	/^f0103afe:	68 ed 90 10 f0       	push   $0xf01090ed$/;"	l
f0103b03	obj/kern/kernel.asm	/^f0103b03:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103b08	obj/kern/kernel.asm	/^f0103b08:	68 6f 04 00 00       	push   $0x46f$/;"	l
f0103b0d	obj/kern/kernel.asm	/^f0103b0d:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103b12	obj/kern/kernel.asm	/^f0103b12:	e8 c9 c7 ff ff       	call   f01002e0 <_panic>$/;"	l
f0103b17	obj/kern/kernel.asm	/^f0103b17:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0103b1c	obj/kern/kernel.asm	/^f0103b1c:	8b 00                	mov    (%eax),%eax$/;"	l
f0103b1e	obj/kern/kernel.asm	/^f0103b1e:	3d 01 01 01 01       	cmp    $0x1010101,%eax$/;"	l
f0103b23	obj/kern/kernel.asm	/^f0103b23:	74 19                	je     f0103b3e <check_page_installed_pgdir+0x156>$/;"	l
f0103b25	obj/kern/kernel.asm	/^f0103b25:	68 a8 96 10 f0       	push   $0xf01096a8$/;"	l
f0103b2a	obj/kern/kernel.asm	/^f0103b2a:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103b2f	obj/kern/kernel.asm	/^f0103b2f:	68 70 04 00 00       	push   $0x470$/;"	l
f0103b34	obj/kern/kernel.asm	/^f0103b34:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103b39	obj/kern/kernel.asm	/^f0103b39:	e8 a2 c7 ff ff       	call   f01002e0 <_panic>$/;"	l
f0103b3e	obj/kern/kernel.asm	/^f0103b3e:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0103b43	obj/kern/kernel.asm	/^f0103b43:	6a 02                	push   $0x2$/;"	l
f0103b45	obj/kern/kernel.asm	/^f0103b45:	68 00 10 00 00       	push   $0x1000$/;"	l
f0103b4a	obj/kern/kernel.asm	/^f0103b4a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0103b4d	obj/kern/kernel.asm	/^f0103b4d:	50                   	push   %eax$/;"	l
f0103b4e	obj/kern/kernel.asm	/^f0103b4e:	e8 82 df ff ff       	call   f0101ad5 <page_insert>$/;"	l
f0103b53	obj/kern/kernel.asm	/^f0103b53:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103b56	obj/kern/kernel.asm	/^f0103b56:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0103b5b	obj/kern/kernel.asm	/^f0103b5b:	8b 00                	mov    (%eax),%eax$/;"	l
f0103b5d	obj/kern/kernel.asm	/^f0103b5d:	3d 02 02 02 02       	cmp    $0x2020202,%eax$/;"	l
f0103b62	obj/kern/kernel.asm	/^f0103b62:	74 19                	je     f0103b7d <check_page_installed_pgdir+0x195>$/;"	l
f0103b64	obj/kern/kernel.asm	/^f0103b64:	68 cc 96 10 f0       	push   $0xf01096cc$/;"	l
f0103b69	obj/kern/kernel.asm	/^f0103b69:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103b6e	obj/kern/kernel.asm	/^f0103b6e:	68 72 04 00 00       	push   $0x472$/;"	l
f0103b73	obj/kern/kernel.asm	/^f0103b73:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103b78	obj/kern/kernel.asm	/^f0103b78:	e8 63 c7 ff ff       	call   f01002e0 <_panic>$/;"	l
f0103b7d	obj/kern/kernel.asm	/^f0103b7d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103b80	obj/kern/kernel.asm	/^f0103b80:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0103b84	obj/kern/kernel.asm	/^f0103b84:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f0103b88	obj/kern/kernel.asm	/^f0103b88:	74 19                	je     f0103ba3 <check_page_installed_pgdir+0x1bb>$/;"	l
f0103b8a	obj/kern/kernel.asm	/^f0103b8a:	68 7c 91 10 f0       	push   $0xf010917c$/;"	l
f0103b8f	obj/kern/kernel.asm	/^f0103b8f:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103b94	obj/kern/kernel.asm	/^f0103b94:	68 73 04 00 00       	push   $0x473$/;"	l
f0103b99	obj/kern/kernel.asm	/^f0103b99:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103b9e	obj/kern/kernel.asm	/^f0103b9e:	e8 3d c7 ff ff       	call   f01002e0 <_panic>$/;"	l
f0103ba3	obj/kern/kernel.asm	/^f0103ba3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0103ba6	obj/kern/kernel.asm	/^f0103ba6:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0103baa	obj/kern/kernel.asm	/^f0103baa:	66 85 c0             	test   %ax,%ax$/;"	l
f0103bad	obj/kern/kernel.asm	/^f0103bad:	74 19                	je     f0103bc8 <check_page_installed_pgdir+0x1e0>$/;"	l
f0103baf	obj/kern/kernel.asm	/^f0103baf:	68 82 94 10 f0       	push   $0xf0109482$/;"	l
f0103bb4	obj/kern/kernel.asm	/^f0103bb4:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103bb9	obj/kern/kernel.asm	/^f0103bb9:	68 74 04 00 00       	push   $0x474$/;"	l
f0103bbe	obj/kern/kernel.asm	/^f0103bbe:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103bc3	obj/kern/kernel.asm	/^f0103bc3:	e8 18 c7 ff ff       	call   f01002e0 <_panic>$/;"	l
f0103bc8	obj/kern/kernel.asm	/^f0103bc8:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
f0103bcd	obj/kern/kernel.asm	/^f0103bcd:	c7 00 03 03 03 03    	movl   $0x3030303,(%eax)$/;"	l
f0103bd3	obj/kern/kernel.asm	/^f0103bd3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103bd6	obj/kern/kernel.asm	/^f0103bd6:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0103bd9	obj/kern/kernel.asm	/^f0103bd9:	e8 d4 d7 ff ff       	call   f01013b2 <page2kva>$/;"	l
f0103bde	obj/kern/kernel.asm	/^f0103bde:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103be1	obj/kern/kernel.asm	/^f0103be1:	8b 00                	mov    (%eax),%eax$/;"	l
f0103be3	obj/kern/kernel.asm	/^f0103be3:	3d 03 03 03 03       	cmp    $0x3030303,%eax$/;"	l
f0103be8	obj/kern/kernel.asm	/^f0103be8:	74 19                	je     f0103c03 <check_page_installed_pgdir+0x21b>$/;"	l
f0103bea	obj/kern/kernel.asm	/^f0103bea:	68 f0 96 10 f0       	push   $0xf01096f0$/;"	l
f0103bef	obj/kern/kernel.asm	/^f0103bef:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103bf4	obj/kern/kernel.asm	/^f0103bf4:	68 76 04 00 00       	push   $0x476$/;"	l
f0103bf9	obj/kern/kernel.asm	/^f0103bf9:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103bfe	obj/kern/kernel.asm	/^f0103bfe:	e8 dd c6 ff ff       	call   f01002e0 <_panic>$/;"	l
f0103c03	obj/kern/kernel.asm	/^f0103c03:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0103c08	obj/kern/kernel.asm	/^f0103c08:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103c0b	obj/kern/kernel.asm	/^f0103c0b:	68 00 10 00 00       	push   $0x1000$/;"	l
f0103c10	obj/kern/kernel.asm	/^f0103c10:	50                   	push   %eax$/;"	l
f0103c11	obj/kern/kernel.asm	/^f0103c11:	e8 a2 df ff ff       	call   f0101bb8 <page_remove>$/;"	l
f0103c16	obj/kern/kernel.asm	/^f0103c16:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103c19	obj/kern/kernel.asm	/^f0103c19:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103c1c	obj/kern/kernel.asm	/^f0103c1c:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0103c20	obj/kern/kernel.asm	/^f0103c20:	66 85 c0             	test   %ax,%ax$/;"	l
f0103c23	obj/kern/kernel.asm	/^f0103c23:	74 19                	je     f0103c3e <check_page_installed_pgdir+0x256>$/;"	l
f0103c25	obj/kern/kernel.asm	/^f0103c25:	68 a9 93 10 f0       	push   $0xf01093a9$/;"	l
f0103c2a	obj/kern/kernel.asm	/^f0103c2a:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103c2f	obj/kern/kernel.asm	/^f0103c2f:	68 78 04 00 00       	push   $0x478$/;"	l
f0103c34	obj/kern/kernel.asm	/^f0103c34:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103c39	obj/kern/kernel.asm	/^f0103c39:	e8 a2 c6 ff ff       	call   f01002e0 <_panic>$/;"	l
f0103c3e	obj/kern/kernel.asm	/^f0103c3e:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0103c43	obj/kern/kernel.asm	/^f0103c43:	8b 00                	mov    (%eax),%eax$/;"	l
f0103c45	obj/kern/kernel.asm	/^f0103c45:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f0103c4a	obj/kern/kernel.asm	/^f0103c4a:	89 c3                	mov    %eax,%ebx$/;"	l
f0103c4c	obj/kern/kernel.asm	/^f0103c4c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103c4f	obj/kern/kernel.asm	/^f0103c4f:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f0103c52	obj/kern/kernel.asm	/^f0103c52:	e8 08 d7 ff ff       	call   f010135f <page2pa>$/;"	l
f0103c57	obj/kern/kernel.asm	/^f0103c57:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103c5a	obj/kern/kernel.asm	/^f0103c5a:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103c5c	obj/kern/kernel.asm	/^f0103c5c:	74 19                	je     f0103c77 <check_page_installed_pgdir+0x28f>$/;"	l
f0103c5e	obj/kern/kernel.asm	/^f0103c5e:	68 98 90 10 f0       	push   $0xf0109098$/;"	l
f0103c63	obj/kern/kernel.asm	/^f0103c63:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103c68	obj/kern/kernel.asm	/^f0103c68:	68 7b 04 00 00       	push   $0x47b$/;"	l
f0103c6d	obj/kern/kernel.asm	/^f0103c6d:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103c72	obj/kern/kernel.asm	/^f0103c72:	e8 69 c6 ff ff       	call   f01002e0 <_panic>$/;"	l
f0103c77	obj/kern/kernel.asm	/^f0103c77:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0103c7c	obj/kern/kernel.asm	/^f0103c7c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103c82	obj/kern/kernel.asm	/^f0103c82:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0103c85	obj/kern/kernel.asm	/^f0103c85:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0103c89	obj/kern/kernel.asm	/^f0103c89:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f0103c8d	obj/kern/kernel.asm	/^f0103c8d:	74 19                	je     f0103ca8 <check_page_installed_pgdir+0x2c0>$/;"	l
f0103c8f	obj/kern/kernel.asm	/^f0103c8f:	68 fe 90 10 f0       	push   $0xf01090fe$/;"	l
f0103c94	obj/kern/kernel.asm	/^f0103c94:	68 bc 8b 10 f0       	push   $0xf0108bbc$/;"	l
f0103c99	obj/kern/kernel.asm	/^f0103c99:	68 7d 04 00 00       	push   $0x47d$/;"	l
f0103c9e	obj/kern/kernel.asm	/^f0103c9e:	68 bc 8a 10 f0       	push   $0xf0108abc$/;"	l
f0103ca3	obj/kern/kernel.asm	/^f0103ca3:	e8 38 c6 ff ff       	call   f01002e0 <_panic>$/;"	l
f0103ca8	obj/kern/kernel.asm	/^f0103ca8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0103cab	obj/kern/kernel.asm	/^f0103cab:	66 c7 40 04 00 00    	movw   $0x0,0x4(%eax)$/;"	l
f0103cb1	obj/kern/kernel.asm	/^f0103cb1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103cb4	obj/kern/kernel.asm	/^f0103cb4:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f0103cb7	obj/kern/kernel.asm	/^f0103cb7:	e8 5b dc ff ff       	call   f0101917 <page_free>$/;"	l
f0103cbc	obj/kern/kernel.asm	/^f0103cbc:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103cbf	obj/kern/kernel.asm	/^f0103cbf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103cc2	obj/kern/kernel.asm	/^f0103cc2:	68 1c 97 10 f0       	push   $0xf010971c$/;"	l
f0103cc7	obj/kern/kernel.asm	/^f0103cc7:	e8 e2 0c 00 00       	call   f01049ae <cprintf>$/;"	l
f0103ccc	obj/kern/kernel.asm	/^f0103ccc:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ccf	obj/kern/kernel.asm	/^f0103ccf:	90                   	nop$/;"	l
f0103cd0	obj/kern/kernel.asm	/^f0103cd0:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103cd3	obj/kern/kernel.asm	/^f0103cd3:	c9                   	leave  $/;"	l
f0103cd4	obj/kern/kernel.asm	/^f0103cd4:	c3                   	ret    $/;"	l
f0103cd5	obj/kern/kernel.asm	/^f0103cd5 <lgdt>:$/;"	l
f0103cd5	obj/kern/kernel.asm	/^f0103cd5:	55                   	push   %ebp$/;"	l
f0103cd6	obj/kern/kernel.asm	/^f0103cd6:	89 e5                	mov    %esp,%ebp$/;"	l
f0103cd8	obj/kern/kernel.asm	/^f0103cd8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103cdb	obj/kern/kernel.asm	/^f0103cdb:	0f 01 10             	lgdtl  (%eax)$/;"	l
f0103cde	obj/kern/kernel.asm	/^f0103cde:	90                   	nop$/;"	l
f0103cdf	obj/kern/kernel.asm	/^f0103cdf:	5d                   	pop    %ebp$/;"	l
f0103ce0	obj/kern/kernel.asm	/^f0103ce0:	c3                   	ret    $/;"	l
f0103ce1	obj/kern/kernel.asm	/^f0103ce1 <lldt>:$/;"	l
f0103ce1	obj/kern/kernel.asm	/^f0103ce1:	55                   	push   %ebp$/;"	l
f0103ce2	obj/kern/kernel.asm	/^f0103ce2:	89 e5                	mov    %esp,%ebp$/;"	l
f0103ce4	obj/kern/kernel.asm	/^f0103ce4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103ce7	obj/kern/kernel.asm	/^f0103ce7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103cea	obj/kern/kernel.asm	/^f0103cea:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
f0103cee	obj/kern/kernel.asm	/^f0103cee:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
f0103cf2	obj/kern/kernel.asm	/^f0103cf2:	0f 00 d0             	lldt   %ax$/;"	l
f0103cf5	obj/kern/kernel.asm	/^f0103cf5:	90                   	nop$/;"	l
f0103cf6	obj/kern/kernel.asm	/^f0103cf6:	c9                   	leave  $/;"	l
f0103cf7	obj/kern/kernel.asm	/^f0103cf7:	c3                   	ret    $/;"	l
f0103cf8	obj/kern/kernel.asm	/^f0103cf8 <lcr3>:$/;"	l
f0103cf8	obj/kern/kernel.asm	/^f0103cf8:	55                   	push   %ebp$/;"	l
f0103cf9	obj/kern/kernel.asm	/^f0103cf9:	89 e5                	mov    %esp,%ebp$/;"	l
f0103cfb	obj/kern/kernel.asm	/^f0103cfb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103cfe	obj/kern/kernel.asm	/^f0103cfe:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0103d01	obj/kern/kernel.asm	/^f0103d01:	90                   	nop$/;"	l
f0103d02	obj/kern/kernel.asm	/^f0103d02:	5d                   	pop    %ebp$/;"	l
f0103d03	obj/kern/kernel.asm	/^f0103d03:	c3                   	ret    $/;"	l
f0103d04	obj/kern/kernel.asm	/^f0103d04 <_paddr>:$/;"	l
f0103d04	obj/kern/kernel.asm	/^f0103d04:	55                   	push   %ebp$/;"	l
f0103d05	obj/kern/kernel.asm	/^f0103d05:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d07	obj/kern/kernel.asm	/^f0103d07:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103d0a	obj/kern/kernel.asm	/^f0103d0a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0103d0d	obj/kern/kernel.asm	/^f0103d0d:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0103d12	obj/kern/kernel.asm	/^f0103d12:	77 13                	ja     f0103d27 <_paddr+0x23>$/;"	l
f0103d14	obj/kern/kernel.asm	/^f0103d14:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0103d17	obj/kern/kernel.asm	/^f0103d17:	68 48 97 10 f0       	push   $0xf0109748$/;"	l
f0103d1c	obj/kern/kernel.asm	/^f0103d1c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103d1f	obj/kern/kernel.asm	/^f0103d1f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103d22	obj/kern/kernel.asm	/^f0103d22:	e8 b9 c5 ff ff       	call   f01002e0 <_panic>$/;"	l
f0103d27	obj/kern/kernel.asm	/^f0103d27:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0103d2a	obj/kern/kernel.asm	/^f0103d2a:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0103d2f	obj/kern/kernel.asm	/^f0103d2f:	c9                   	leave  $/;"	l
f0103d30	obj/kern/kernel.asm	/^f0103d30:	c3                   	ret    $/;"	l
f0103d31	obj/kern/kernel.asm	/^f0103d31 <_kaddr>:$/;"	l
f0103d31	obj/kern/kernel.asm	/^f0103d31:	55                   	push   %ebp$/;"	l
f0103d32	obj/kern/kernel.asm	/^f0103d32:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d34	obj/kern/kernel.asm	/^f0103d34:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103d37	obj/kern/kernel.asm	/^f0103d37:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0103d3a	obj/kern/kernel.asm	/^f0103d3a:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103d3d	obj/kern/kernel.asm	/^f0103d3d:	89 c2                	mov    %eax,%edx$/;"	l
f0103d3f	obj/kern/kernel.asm	/^f0103d3f:	a1 e8 0e 23 f0       	mov    0xf0230ee8,%eax$/;"	l
f0103d44	obj/kern/kernel.asm	/^f0103d44:	39 c2                	cmp    %eax,%edx$/;"	l
f0103d46	obj/kern/kernel.asm	/^f0103d46:	72 13                	jb     f0103d5b <_kaddr+0x2a>$/;"	l
f0103d48	obj/kern/kernel.asm	/^f0103d48:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0103d4b	obj/kern/kernel.asm	/^f0103d4b:	68 6c 97 10 f0       	push   $0xf010976c$/;"	l
f0103d50	obj/kern/kernel.asm	/^f0103d50:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0103d53	obj/kern/kernel.asm	/^f0103d53:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103d56	obj/kern/kernel.asm	/^f0103d56:	e8 85 c5 ff ff       	call   f01002e0 <_panic>$/;"	l
f0103d5b	obj/kern/kernel.asm	/^f0103d5b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0103d5e	obj/kern/kernel.asm	/^f0103d5e:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0103d63	obj/kern/kernel.asm	/^f0103d63:	c9                   	leave  $/;"	l
f0103d64	obj/kern/kernel.asm	/^f0103d64:	c3                   	ret    $/;"	l
f0103d65	obj/kern/kernel.asm	/^f0103d65 <page2pa>:$/;"	l
f0103d65	obj/kern/kernel.asm	/^f0103d65:	55                   	push   %ebp$/;"	l
f0103d66	obj/kern/kernel.asm	/^f0103d66:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d68	obj/kern/kernel.asm	/^f0103d68:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103d6b	obj/kern/kernel.asm	/^f0103d6b:	8b 15 f0 0e 23 f0    	mov    0xf0230ef0,%edx$/;"	l
f0103d71	obj/kern/kernel.asm	/^f0103d71:	29 d0                	sub    %edx,%eax$/;"	l
f0103d73	obj/kern/kernel.asm	/^f0103d73:	c1 f8 03             	sar    $0x3,%eax$/;"	l
f0103d76	obj/kern/kernel.asm	/^f0103d76:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f0103d79	obj/kern/kernel.asm	/^f0103d79:	5d                   	pop    %ebp$/;"	l
f0103d7a	obj/kern/kernel.asm	/^f0103d7a:	c3                   	ret    $/;"	l
f0103d7b	obj/kern/kernel.asm	/^f0103d7b <pa2page>:$/;"	l
f0103d7b	obj/kern/kernel.asm	/^f0103d7b:	55                   	push   %ebp$/;"	l
f0103d7c	obj/kern/kernel.asm	/^f0103d7c:	89 e5                	mov    %esp,%ebp$/;"	l
f0103d7e	obj/kern/kernel.asm	/^f0103d7e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103d81	obj/kern/kernel.asm	/^f0103d81:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103d84	obj/kern/kernel.asm	/^f0103d84:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0103d87	obj/kern/kernel.asm	/^f0103d87:	89 c2                	mov    %eax,%edx$/;"	l
f0103d89	obj/kern/kernel.asm	/^f0103d89:	a1 e8 0e 23 f0       	mov    0xf0230ee8,%eax$/;"	l
f0103d8e	obj/kern/kernel.asm	/^f0103d8e:	39 c2                	cmp    %eax,%edx$/;"	l
f0103d90	obj/kern/kernel.asm	/^f0103d90:	72 14                	jb     f0103da6 <pa2page+0x2b>$/;"	l
f0103d92	obj/kern/kernel.asm	/^f0103d92:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103d95	obj/kern/kernel.asm	/^f0103d95:	68 90 97 10 f0       	push   $0xf0109790$/;"	l
f0103d9a	obj/kern/kernel.asm	/^f0103d9a:	6a 51                	push   $0x51$/;"	l
f0103d9c	obj/kern/kernel.asm	/^f0103d9c:	68 af 97 10 f0       	push   $0xf01097af$/;"	l
f0103da1	obj/kern/kernel.asm	/^f0103da1:	e8 3a c5 ff ff       	call   f01002e0 <_panic>$/;"	l
f0103da6	obj/kern/kernel.asm	/^f0103da6:	a1 f0 0e 23 f0       	mov    0xf0230ef0,%eax$/;"	l
f0103dab	obj/kern/kernel.asm	/^f0103dab:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0103dae	obj/kern/kernel.asm	/^f0103dae:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
f0103db1	obj/kern/kernel.asm	/^f0103db1:	c1 e2 03             	shl    $0x3,%edx$/;"	l
f0103db4	obj/kern/kernel.asm	/^f0103db4:	01 d0                	add    %edx,%eax$/;"	l
f0103db6	obj/kern/kernel.asm	/^f0103db6:	c9                   	leave  $/;"	l
f0103db7	obj/kern/kernel.asm	/^f0103db7:	c3                   	ret    $/;"	l
f0103db8	obj/kern/kernel.asm	/^f0103db8 <page2kva>:$/;"	l
f0103db8	obj/kern/kernel.asm	/^f0103db8:	55                   	push   %ebp$/;"	l
f0103db9	obj/kern/kernel.asm	/^f0103db9:	89 e5                	mov    %esp,%ebp$/;"	l
f0103dbb	obj/kern/kernel.asm	/^f0103dbb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103dbe	obj/kern/kernel.asm	/^f0103dbe:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0103dc1	obj/kern/kernel.asm	/^f0103dc1:	e8 9f ff ff ff       	call   f0103d65 <page2pa>$/;"	l
f0103dc6	obj/kern/kernel.asm	/^f0103dc6:	83 c4 04             	add    $0x4,%esp$/;"	l
f0103dc9	obj/kern/kernel.asm	/^f0103dc9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103dcc	obj/kern/kernel.asm	/^f0103dcc:	50                   	push   %eax$/;"	l
f0103dcd	obj/kern/kernel.asm	/^f0103dcd:	6a 58                	push   $0x58$/;"	l
f0103dcf	obj/kern/kernel.asm	/^f0103dcf:	68 af 97 10 f0       	push   $0xf01097af$/;"	l
f0103dd4	obj/kern/kernel.asm	/^f0103dd4:	e8 58 ff ff ff       	call   f0103d31 <_kaddr>$/;"	l
f0103dd9	obj/kern/kernel.asm	/^f0103dd9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ddc	obj/kern/kernel.asm	/^f0103ddc:	c9                   	leave  $/;"	l
f0103ddd	obj/kern/kernel.asm	/^f0103ddd:	c3                   	ret    $/;"	l
f0103dde	obj/kern/kernel.asm	/^f0103dde <unlock_kernel>:$/;"	l
f0103dde	obj/kern/kernel.asm	/^f0103dde:	55                   	push   %ebp$/;"	l
f0103ddf	obj/kern/kernel.asm	/^f0103ddf:	89 e5                	mov    %esp,%ebp$/;"	l
f0103de1	obj/kern/kernel.asm	/^f0103de1:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0103de4	obj/kern/kernel.asm	/^f0103de4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103de7	obj/kern/kernel.asm	/^f0103de7:	68 e0 55 12 f0       	push   $0xf01255e0$/;"	l
f0103dec	obj/kern/kernel.asm	/^f0103dec:	e8 67 42 00 00       	call   f0108058 <spin_unlock>$/;"	l
f0103df1	obj/kern/kernel.asm	/^f0103df1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103df4	obj/kern/kernel.asm	/^f0103df4:	f3 90                	pause  $/;"	l
f0103df6	obj/kern/kernel.asm	/^f0103df6:	90                   	nop$/;"	l
f0103df7	obj/kern/kernel.asm	/^f0103df7:	c9                   	leave  $/;"	l
f0103df8	obj/kern/kernel.asm	/^f0103df8:	c3                   	ret    $/;"	l
f0103df9	obj/kern/kernel.asm	/^f0103df9 <envid2env>:$/;"	l
f0103df9	obj/kern/kernel.asm	/^f0103df9:	55                   	push   %ebp$/;"	l
f0103dfa	obj/kern/kernel.asm	/^f0103dfa:	89 e5                	mov    %esp,%ebp$/;"	l
f0103dfc	obj/kern/kernel.asm	/^f0103dfc:	53                   	push   %ebx$/;"	l
f0103dfd	obj/kern/kernel.asm	/^f0103dfd:	83 ec 24             	sub    $0x24,%esp$/;"	l
f0103e00	obj/kern/kernel.asm	/^f0103e00:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0103e03	obj/kern/kernel.asm	/^f0103e03:	88 45 e4             	mov    %al,-0x1c(%ebp)$/;"	l
f0103e06	obj/kern/kernel.asm	/^f0103e06:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0103e0a	obj/kern/kernel.asm	/^f0103e0a:	75 1e                	jne    f0103e2a <envid2env+0x31>$/;"	l
f0103e0c	obj/kern/kernel.asm	/^f0103e0c:	e8 4e 3f 00 00       	call   f0107d5f <cpunum>$/;"	l
f0103e11	obj/kern/kernel.asm	/^f0103e11:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e14	obj/kern/kernel.asm	/^f0103e14:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0103e19	obj/kern/kernel.asm	/^f0103e19:	8b 10                	mov    (%eax),%edx$/;"	l
f0103e1b	obj/kern/kernel.asm	/^f0103e1b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103e1e	obj/kern/kernel.asm	/^f0103e1e:	89 10                	mov    %edx,(%eax)$/;"	l
f0103e20	obj/kern/kernel.asm	/^f0103e20:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103e25	obj/kern/kernel.asm	/^f0103e25:	e9 97 00 00 00       	jmp    f0103ec1 <envid2env+0xc8>$/;"	l
f0103e2a	obj/kern/kernel.asm	/^f0103e2a:	8b 15 3c 02 23 f0    	mov    0xf023023c,%edx$/;"	l
f0103e30	obj/kern/kernel.asm	/^f0103e30:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103e33	obj/kern/kernel.asm	/^f0103e33:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0103e38	obj/kern/kernel.asm	/^f0103e38:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0103e3b	obj/kern/kernel.asm	/^f0103e3b:	89 c1                	mov    %eax,%ecx$/;"	l
f0103e3d	obj/kern/kernel.asm	/^f0103e3d:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f0103e40	obj/kern/kernel.asm	/^f0103e40:	29 c1                	sub    %eax,%ecx$/;"	l
f0103e42	obj/kern/kernel.asm	/^f0103e42:	89 c8                	mov    %ecx,%eax$/;"	l
f0103e44	obj/kern/kernel.asm	/^f0103e44:	01 d0                	add    %edx,%eax$/;"	l
f0103e46	obj/kern/kernel.asm	/^f0103e46:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0103e49	obj/kern/kernel.asm	/^f0103e49:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103e4c	obj/kern/kernel.asm	/^f0103e4c:	8b 40 54             	mov    0x54(%eax),%eax$/;"	l
f0103e4f	obj/kern/kernel.asm	/^f0103e4f:	85 c0                	test   %eax,%eax$/;"	l
f0103e51	obj/kern/kernel.asm	/^f0103e51:	74 0b                	je     f0103e5e <envid2env+0x65>$/;"	l
f0103e53	obj/kern/kernel.asm	/^f0103e53:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103e56	obj/kern/kernel.asm	/^f0103e56:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0103e59	obj/kern/kernel.asm	/^f0103e59:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
f0103e5c	obj/kern/kernel.asm	/^f0103e5c:	74 10                	je     f0103e6e <envid2env+0x75>$/;"	l
f0103e5e	obj/kern/kernel.asm	/^f0103e5e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103e61	obj/kern/kernel.asm	/^f0103e61:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103e67	obj/kern/kernel.asm	/^f0103e67:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103e6c	obj/kern/kernel.asm	/^f0103e6c:	eb 53                	jmp    f0103ec1 <envid2env+0xc8>$/;"	l
f0103e6e	obj/kern/kernel.asm	/^f0103e6e:	80 7d e4 00          	cmpb   $0x0,-0x1c(%ebp)$/;"	l
f0103e72	obj/kern/kernel.asm	/^f0103e72:	74 40                	je     f0103eb4 <envid2env+0xbb>$/;"	l
f0103e74	obj/kern/kernel.asm	/^f0103e74:	e8 e6 3e 00 00       	call   f0107d5f <cpunum>$/;"	l
f0103e79	obj/kern/kernel.asm	/^f0103e79:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e7c	obj/kern/kernel.asm	/^f0103e7c:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0103e81	obj/kern/kernel.asm	/^f0103e81:	8b 00                	mov    (%eax),%eax$/;"	l
f0103e83	obj/kern/kernel.asm	/^f0103e83:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f0103e86	obj/kern/kernel.asm	/^f0103e86:	74 2c                	je     f0103eb4 <envid2env+0xbb>$/;"	l
f0103e88	obj/kern/kernel.asm	/^f0103e88:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103e8b	obj/kern/kernel.asm	/^f0103e8b:	8b 58 4c             	mov    0x4c(%eax),%ebx$/;"	l
f0103e8e	obj/kern/kernel.asm	/^f0103e8e:	e8 cc 3e 00 00       	call   f0107d5f <cpunum>$/;"	l
f0103e93	obj/kern/kernel.asm	/^f0103e93:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0103e96	obj/kern/kernel.asm	/^f0103e96:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0103e9b	obj/kern/kernel.asm	/^f0103e9b:	8b 00                	mov    (%eax),%eax$/;"	l
f0103e9d	obj/kern/kernel.asm	/^f0103e9d:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0103ea0	obj/kern/kernel.asm	/^f0103ea0:	39 c3                	cmp    %eax,%ebx$/;"	l
f0103ea2	obj/kern/kernel.asm	/^f0103ea2:	74 10                	je     f0103eb4 <envid2env+0xbb>$/;"	l
f0103ea4	obj/kern/kernel.asm	/^f0103ea4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103ea7	obj/kern/kernel.asm	/^f0103ea7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0103ead	obj/kern/kernel.asm	/^f0103ead:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0103eb2	obj/kern/kernel.asm	/^f0103eb2:	eb 0d                	jmp    f0103ec1 <envid2env+0xc8>$/;"	l
f0103eb4	obj/kern/kernel.asm	/^f0103eb4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0103eb7	obj/kern/kernel.asm	/^f0103eb7:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0103eba	obj/kern/kernel.asm	/^f0103eba:	89 10                	mov    %edx,(%eax)$/;"	l
f0103ebc	obj/kern/kernel.asm	/^f0103ebc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103ec1	obj/kern/kernel.asm	/^f0103ec1:	83 c4 24             	add    $0x24,%esp$/;"	l
f0103ec4	obj/kern/kernel.asm	/^f0103ec4:	5b                   	pop    %ebx$/;"	l
f0103ec5	obj/kern/kernel.asm	/^f0103ec5:	5d                   	pop    %ebp$/;"	l
f0103ec6	obj/kern/kernel.asm	/^f0103ec6:	c3                   	ret    $/;"	l
f0103ec7	obj/kern/kernel.asm	/^f0103ec7 <env_init>:$/;"	l
f0103ec7	obj/kern/kernel.asm	/^f0103ec7:	55                   	push   %ebp$/;"	l
f0103ec8	obj/kern/kernel.asm	/^f0103ec8:	89 e5                	mov    %esp,%ebp$/;"	l
f0103eca	obj/kern/kernel.asm	/^f0103eca:	53                   	push   %ebx$/;"	l
f0103ecb	obj/kern/kernel.asm	/^f0103ecb:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103ece	obj/kern/kernel.asm	/^f0103ece:	a1 3c 02 23 f0       	mov    0xf023023c,%eax$/;"	l
f0103ed3	obj/kern/kernel.asm	/^f0103ed3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103ed6	obj/kern/kernel.asm	/^f0103ed6:	68 00 f0 01 00       	push   $0x1f000$/;"	l
f0103edb	obj/kern/kernel.asm	/^f0103edb:	6a 00                	push   $0x0$/;"	l
f0103edd	obj/kern/kernel.asm	/^f0103edd:	50                   	push   %eax$/;"	l
f0103ede	obj/kern/kernel.asm	/^f0103ede:	e8 ac 33 00 00       	call   f010728f <memset>$/;"	l
f0103ee3	obj/kern/kernel.asm	/^f0103ee3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ee6	obj/kern/kernel.asm	/^f0103ee6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0103eed	obj/kern/kernel.asm	/^f0103eed:	eb 38                	jmp    f0103f27 <env_init+0x60>$/;"	l
f0103eef	obj/kern/kernel.asm	/^f0103eef:	8b 15 3c 02 23 f0    	mov    0xf023023c,%edx$/;"	l
f0103ef5	obj/kern/kernel.asm	/^f0103ef5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103ef8	obj/kern/kernel.asm	/^f0103ef8:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0103efb	obj/kern/kernel.asm	/^f0103efb:	89 c1                	mov    %eax,%ecx$/;"	l
f0103efd	obj/kern/kernel.asm	/^f0103efd:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f0103f00	obj/kern/kernel.asm	/^f0103f00:	29 c1                	sub    %eax,%ecx$/;"	l
f0103f02	obj/kern/kernel.asm	/^f0103f02:	89 c8                	mov    %ecx,%eax$/;"	l
f0103f04	obj/kern/kernel.asm	/^f0103f04:	01 c2                	add    %eax,%edx$/;"	l
f0103f06	obj/kern/kernel.asm	/^f0103f06:	8b 0d 3c 02 23 f0    	mov    0xf023023c,%ecx$/;"	l
f0103f0c	obj/kern/kernel.asm	/^f0103f0c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103f0f	obj/kern/kernel.asm	/^f0103f0f:	83 c0 01             	add    $0x1,%eax$/;"	l
f0103f12	obj/kern/kernel.asm	/^f0103f12:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0103f15	obj/kern/kernel.asm	/^f0103f15:	89 c3                	mov    %eax,%ebx$/;"	l
f0103f17	obj/kern/kernel.asm	/^f0103f17:	c1 e3 05             	shl    $0x5,%ebx$/;"	l
f0103f1a	obj/kern/kernel.asm	/^f0103f1a:	29 c3                	sub    %eax,%ebx$/;"	l
f0103f1c	obj/kern/kernel.asm	/^f0103f1c:	89 d8                	mov    %ebx,%eax$/;"	l
f0103f1e	obj/kern/kernel.asm	/^f0103f1e:	01 c8                	add    %ecx,%eax$/;"	l
f0103f20	obj/kern/kernel.asm	/^f0103f20:	89 42 44             	mov    %eax,0x44(%edx)$/;"	l
f0103f23	obj/kern/kernel.asm	/^f0103f23:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f0103f27	obj/kern/kernel.asm	/^f0103f27:	81 7d f4 fe 03 00 00 	cmpl   $0x3fe,-0xc(%ebp)$/;"	l
f0103f2e	obj/kern/kernel.asm	/^f0103f2e:	7e bf                	jle    f0103eef <env_init+0x28>$/;"	l
f0103f30	obj/kern/kernel.asm	/^f0103f30:	a1 3c 02 23 f0       	mov    0xf023023c,%eax$/;"	l
f0103f35	obj/kern/kernel.asm	/^f0103f35:	a3 40 02 23 f0       	mov    %eax,0xf0230240$/;"	l
f0103f3a	obj/kern/kernel.asm	/^f0103f3a:	e8 06 00 00 00       	call   f0103f45 <env_init_percpu>$/;"	l
f0103f3f	obj/kern/kernel.asm	/^f0103f3f:	90                   	nop$/;"	l
f0103f40	obj/kern/kernel.asm	/^f0103f40:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0103f43	obj/kern/kernel.asm	/^f0103f43:	c9                   	leave  $/;"	l
f0103f44	obj/kern/kernel.asm	/^f0103f44:	c3                   	ret    $/;"	l
f0103f45	obj/kern/kernel.asm	/^f0103f45 <env_init_percpu>:$/;"	l
f0103f45	obj/kern/kernel.asm	/^f0103f45:	55                   	push   %ebp$/;"	l
f0103f46	obj/kern/kernel.asm	/^f0103f46:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f48	obj/kern/kernel.asm	/^f0103f48:	68 c8 55 12 f0       	push   $0xf01255c8$/;"	l
f0103f4d	obj/kern/kernel.asm	/^f0103f4d:	e8 83 fd ff ff       	call   f0103cd5 <lgdt>$/;"	l
f0103f52	obj/kern/kernel.asm	/^f0103f52:	83 c4 04             	add    $0x4,%esp$/;"	l
f0103f55	obj/kern/kernel.asm	/^f0103f55:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0103f5a	obj/kern/kernel.asm	/^f0103f5a:	8e e8                	mov    %eax,%gs$/;"	l
f0103f5c	obj/kern/kernel.asm	/^f0103f5c:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0103f61	obj/kern/kernel.asm	/^f0103f61:	8e e0                	mov    %eax,%fs$/;"	l
f0103f63	obj/kern/kernel.asm	/^f0103f63:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0103f68	obj/kern/kernel.asm	/^f0103f68:	8e c0                	mov    %eax,%es$/;"	l
f0103f6a	obj/kern/kernel.asm	/^f0103f6a:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0103f6f	obj/kern/kernel.asm	/^f0103f6f:	8e d8                	mov    %eax,%ds$/;"	l
f0103f71	obj/kern/kernel.asm	/^f0103f71:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0103f76	obj/kern/kernel.asm	/^f0103f76:	8e d0                	mov    %eax,%ss$/;"	l
f0103f78	obj/kern/kernel.asm	/^f0103f78:	ea 7f 3f 10 f0 08 00 	ljmp   $0x8,$0xf0103f7f$/;"	l
f0103f7f	obj/kern/kernel.asm	/^f0103f7f:	6a 00                	push   $0x0$/;"	l
f0103f81	obj/kern/kernel.asm	/^f0103f81:	e8 5b fd ff ff       	call   f0103ce1 <lldt>$/;"	l
f0103f86	obj/kern/kernel.asm	/^f0103f86:	83 c4 04             	add    $0x4,%esp$/;"	l
f0103f89	obj/kern/kernel.asm	/^f0103f89:	90                   	nop$/;"	l
f0103f8a	obj/kern/kernel.asm	/^f0103f8a:	c9                   	leave  $/;"	l
f0103f8b	obj/kern/kernel.asm	/^f0103f8b:	c3                   	ret    $/;"	l
f0103f8c	obj/kern/kernel.asm	/^f0103f8c <env_setup_vm>:$/;"	l
f0103f8c	obj/kern/kernel.asm	/^f0103f8c:	55                   	push   %ebp$/;"	l
f0103f8d	obj/kern/kernel.asm	/^f0103f8d:	89 e5                	mov    %esp,%ebp$/;"	l
f0103f8f	obj/kern/kernel.asm	/^f0103f8f:	53                   	push   %ebx$/;"	l
f0103f90	obj/kern/kernel.asm	/^f0103f90:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0103f93	obj/kern/kernel.asm	/^f0103f93:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0103f9a	obj/kern/kernel.asm	/^f0103f9a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103f9d	obj/kern/kernel.asm	/^f0103f9d:	6a 01                	push   $0x1$/;"	l
f0103f9f	obj/kern/kernel.asm	/^f0103f9f:	e8 10 d9 ff ff       	call   f01018b4 <page_alloc>$/;"	l
f0103fa4	obj/kern/kernel.asm	/^f0103fa4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103fa7	obj/kern/kernel.asm	/^f0103fa7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0103faa	obj/kern/kernel.asm	/^f0103faa:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0103fae	obj/kern/kernel.asm	/^f0103fae:	75 07                	jne    f0103fb7 <env_setup_vm+0x2b>$/;"	l
f0103fb0	obj/kern/kernel.asm	/^f0103fb0:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0103fb5	obj/kern/kernel.asm	/^f0103fb5:	eb 77                	jmp    f010402e <env_setup_vm+0xa2>$/;"	l
f0103fb7	obj/kern/kernel.asm	/^f0103fb7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103fba	obj/kern/kernel.asm	/^f0103fba:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f0103fbe	obj/kern/kernel.asm	/^f0103fbe:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0103fc1	obj/kern/kernel.asm	/^f0103fc1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0103fc4	obj/kern/kernel.asm	/^f0103fc4:	66 89 50 04          	mov    %dx,0x4(%eax)$/;"	l
f0103fc8	obj/kern/kernel.asm	/^f0103fc8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0103fcb	obj/kern/kernel.asm	/^f0103fcb:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0103fce	obj/kern/kernel.asm	/^f0103fce:	e8 e5 fd ff ff       	call   f0103db8 <page2kva>$/;"	l
f0103fd3	obj/kern/kernel.asm	/^f0103fd3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103fd6	obj/kern/kernel.asm	/^f0103fd6:	89 c2                	mov    %eax,%edx$/;"	l
f0103fd8	obj/kern/kernel.asm	/^f0103fd8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103fdb	obj/kern/kernel.asm	/^f0103fdb:	89 50 60             	mov    %edx,0x60(%eax)$/;"	l
f0103fde	obj/kern/kernel.asm	/^f0103fde:	8b 15 ec 0e 23 f0    	mov    0xf0230eec,%edx$/;"	l
f0103fe4	obj/kern/kernel.asm	/^f0103fe4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103fe7	obj/kern/kernel.asm	/^f0103fe7:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0103fea	obj/kern/kernel.asm	/^f0103fea:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0103fed	obj/kern/kernel.asm	/^f0103fed:	68 00 10 00 00       	push   $0x1000$/;"	l
f0103ff2	obj/kern/kernel.asm	/^f0103ff2:	52                   	push   %edx$/;"	l
f0103ff3	obj/kern/kernel.asm	/^f0103ff3:	50                   	push   %eax$/;"	l
f0103ff4	obj/kern/kernel.asm	/^f0103ff4:	e8 de 33 00 00       	call   f01073d7 <memcpy>$/;"	l
f0103ff9	obj/kern/kernel.asm	/^f0103ff9:	83 c4 10             	add    $0x10,%esp$/;"	l
f0103ffc	obj/kern/kernel.asm	/^f0103ffc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0103fff	obj/kern/kernel.asm	/^f0103fff:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104002	obj/kern/kernel.asm	/^f0104002:	8d 98 f4 0e 00 00    	lea    0xef4(%eax),%ebx$/;"	l
f0104008	obj/kern/kernel.asm	/^f0104008:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010400b	obj/kern/kernel.asm	/^f010400b:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010400e	obj/kern/kernel.asm	/^f010400e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104011	obj/kern/kernel.asm	/^f0104011:	50                   	push   %eax$/;"	l
f0104012	obj/kern/kernel.asm	/^f0104012:	68 c2 00 00 00       	push   $0xc2$/;"	l
f0104017	obj/kern/kernel.asm	/^f0104017:	68 bd 97 10 f0       	push   $0xf01097bd$/;"	l
f010401c	obj/kern/kernel.asm	/^f010401c:	e8 e3 fc ff ff       	call   f0103d04 <_paddr>$/;"	l
f0104021	obj/kern/kernel.asm	/^f0104021:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104024	obj/kern/kernel.asm	/^f0104024:	83 c8 05             	or     $0x5,%eax$/;"	l
f0104027	obj/kern/kernel.asm	/^f0104027:	89 03                	mov    %eax,(%ebx)$/;"	l
f0104029	obj/kern/kernel.asm	/^f0104029:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010402e	obj/kern/kernel.asm	/^f010402e:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0104031	obj/kern/kernel.asm	/^f0104031:	c9                   	leave  $/;"	l
f0104032	obj/kern/kernel.asm	/^f0104032:	c3                   	ret    $/;"	l
f0104033	obj/kern/kernel.asm	/^f0104033 <env_alloc>:$/;"	l
f0104033	obj/kern/kernel.asm	/^f0104033:	55                   	push   %ebp$/;"	l
f0104034	obj/kern/kernel.asm	/^f0104034:	89 e5                	mov    %esp,%ebp$/;"	l
f0104036	obj/kern/kernel.asm	/^f0104036:	53                   	push   %ebx$/;"	l
f0104037	obj/kern/kernel.asm	/^f0104037:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010403a	obj/kern/kernel.asm	/^f010403a:	a1 40 02 23 f0       	mov    0xf0230240,%eax$/;"	l
f010403f	obj/kern/kernel.asm	/^f010403f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0104042	obj/kern/kernel.asm	/^f0104042:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0104046	obj/kern/kernel.asm	/^f0104046:	75 0a                	jne    f0104052 <env_alloc+0x1f>$/;"	l
f0104048	obj/kern/kernel.asm	/^f0104048:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f010404d	obj/kern/kernel.asm	/^f010404d:	e9 33 01 00 00       	jmp    f0104185 <env_alloc+0x152>$/;"	l
f0104052	obj/kern/kernel.asm	/^f0104052:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104055	obj/kern/kernel.asm	/^f0104055:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f0104058	obj/kern/kernel.asm	/^f0104058:	e8 2f ff ff ff       	call   f0103f8c <env_setup_vm>$/;"	l
f010405d	obj/kern/kernel.asm	/^f010405d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104060	obj/kern/kernel.asm	/^f0104060:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0104063	obj/kern/kernel.asm	/^f0104063:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f0104067	obj/kern/kernel.asm	/^f0104067:	79 08                	jns    f0104071 <env_alloc+0x3e>$/;"	l
f0104069	obj/kern/kernel.asm	/^f0104069:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010406c	obj/kern/kernel.asm	/^f010406c:	e9 14 01 00 00       	jmp    f0104185 <env_alloc+0x152>$/;"	l
f0104071	obj/kern/kernel.asm	/^f0104071:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104074	obj/kern/kernel.asm	/^f0104074:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104077	obj/kern/kernel.asm	/^f0104077:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f010407c	obj/kern/kernel.asm	/^f010407c:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0104081	obj/kern/kernel.asm	/^f0104081:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0104084	obj/kern/kernel.asm	/^f0104084:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0104088	obj/kern/kernel.asm	/^f0104088:	7f 07                	jg     f0104091 <env_alloc+0x5e>$/;"	l
f010408a	obj/kern/kernel.asm	/^f010408a:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)$/;"	l
f0104091	obj/kern/kernel.asm	/^f0104091:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104094	obj/kern/kernel.asm	/^f0104094:	8b 15 3c 02 23 f0    	mov    0xf023023c,%edx$/;"	l
f010409a	obj/kern/kernel.asm	/^f010409a:	29 d0                	sub    %edx,%eax$/;"	l
f010409c	obj/kern/kernel.asm	/^f010409c:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f010409f	obj/kern/kernel.asm	/^f010409f:	69 c0 df 7b ef bd    	imul   $0xbdef7bdf,%eax,%eax$/;"	l
f01040a5	obj/kern/kernel.asm	/^f01040a5:	0b 45 f4             	or     -0xc(%ebp),%eax$/;"	l
f01040a8	obj/kern/kernel.asm	/^f01040a8:	89 c2                	mov    %eax,%edx$/;"	l
f01040aa	obj/kern/kernel.asm	/^f01040aa:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01040ad	obj/kern/kernel.asm	/^f01040ad:	89 50 48             	mov    %edx,0x48(%eax)$/;"	l
f01040b0	obj/kern/kernel.asm	/^f01040b0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01040b3	obj/kern/kernel.asm	/^f01040b3:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01040b6	obj/kern/kernel.asm	/^f01040b6:	89 50 4c             	mov    %edx,0x4c(%eax)$/;"	l
f01040b9	obj/kern/kernel.asm	/^f01040b9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01040bc	obj/kern/kernel.asm	/^f01040bc:	c7 40 50 00 00 00 00 	movl   $0x0,0x50(%eax)$/;"	l
f01040c3	obj/kern/kernel.asm	/^f01040c3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01040c6	obj/kern/kernel.asm	/^f01040c6:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f01040cd	obj/kern/kernel.asm	/^f01040cd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01040d0	obj/kern/kernel.asm	/^f01040d0:	c7 40 58 00 00 00 00 	movl   $0x0,0x58(%eax)$/;"	l
f01040d7	obj/kern/kernel.asm	/^f01040d7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01040da	obj/kern/kernel.asm	/^f01040da:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01040dd	obj/kern/kernel.asm	/^f01040dd:	6a 44                	push   $0x44$/;"	l
f01040df	obj/kern/kernel.asm	/^f01040df:	6a 00                	push   $0x0$/;"	l
f01040e1	obj/kern/kernel.asm	/^f01040e1:	50                   	push   %eax$/;"	l
f01040e2	obj/kern/kernel.asm	/^f01040e2:	e8 a8 31 00 00       	call   f010728f <memset>$/;"	l
f01040e7	obj/kern/kernel.asm	/^f01040e7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01040ea	obj/kern/kernel.asm	/^f01040ea:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01040ed	obj/kern/kernel.asm	/^f01040ed:	66 c7 40 24 23 00    	movw   $0x23,0x24(%eax)$/;"	l
f01040f3	obj/kern/kernel.asm	/^f01040f3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01040f6	obj/kern/kernel.asm	/^f01040f6:	66 c7 40 20 23 00    	movw   $0x23,0x20(%eax)$/;"	l
f01040fc	obj/kern/kernel.asm	/^f01040fc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01040ff	obj/kern/kernel.asm	/^f01040ff:	66 c7 40 40 23 00    	movw   $0x23,0x40(%eax)$/;"	l
f0104105	obj/kern/kernel.asm	/^f0104105:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104108	obj/kern/kernel.asm	/^f0104108:	c7 40 3c 00 e0 bf ee 	movl   $0xeebfe000,0x3c(%eax)$/;"	l
f010410f	obj/kern/kernel.asm	/^f010410f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104112	obj/kern/kernel.asm	/^f0104112:	66 c7 40 34 1b 00    	movw   $0x1b,0x34(%eax)$/;"	l
f0104118	obj/kern/kernel.asm	/^f0104118:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010411b	obj/kern/kernel.asm	/^f010411b:	c7 40 64 00 00 00 00 	movl   $0x0,0x64(%eax)$/;"	l
f0104122	obj/kern/kernel.asm	/^f0104122:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104125	obj/kern/kernel.asm	/^f0104125:	c6 40 68 00          	movb   $0x0,0x68(%eax)$/;"	l
f0104129	obj/kern/kernel.asm	/^f0104129:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010412c	obj/kern/kernel.asm	/^f010412c:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
f010412f	obj/kern/kernel.asm	/^f010412f:	a3 40 02 23 f0       	mov    %eax,0xf0230240$/;"	l
f0104134	obj/kern/kernel.asm	/^f0104134:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104137	obj/kern/kernel.asm	/^f0104137:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f010413a	obj/kern/kernel.asm	/^f010413a:	89 10                	mov    %edx,(%eax)$/;"	l
f010413c	obj/kern/kernel.asm	/^f010413c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010413f	obj/kern/kernel.asm	/^f010413f:	8b 58 48             	mov    0x48(%eax),%ebx$/;"	l
f0104142	obj/kern/kernel.asm	/^f0104142:	e8 18 3c 00 00       	call   f0107d5f <cpunum>$/;"	l
f0104147	obj/kern/kernel.asm	/^f0104147:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010414a	obj/kern/kernel.asm	/^f010414a:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f010414f	obj/kern/kernel.asm	/^f010414f:	8b 00                	mov    (%eax),%eax$/;"	l
f0104151	obj/kern/kernel.asm	/^f0104151:	85 c0                	test   %eax,%eax$/;"	l
f0104153	obj/kern/kernel.asm	/^f0104153:	74 14                	je     f0104169 <env_alloc+0x136>$/;"	l
f0104155	obj/kern/kernel.asm	/^f0104155:	e8 05 3c 00 00       	call   f0107d5f <cpunum>$/;"	l
f010415a	obj/kern/kernel.asm	/^f010415a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010415d	obj/kern/kernel.asm	/^f010415d:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0104162	obj/kern/kernel.asm	/^f0104162:	8b 00                	mov    (%eax),%eax$/;"	l
f0104164	obj/kern/kernel.asm	/^f0104164:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104167	obj/kern/kernel.asm	/^f0104167:	eb 05                	jmp    f010416e <env_alloc+0x13b>$/;"	l
f0104169	obj/kern/kernel.asm	/^f0104169:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010416e	obj/kern/kernel.asm	/^f010416e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104171	obj/kern/kernel.asm	/^f0104171:	53                   	push   %ebx$/;"	l
f0104172	obj/kern/kernel.asm	/^f0104172:	50                   	push   %eax$/;"	l
f0104173	obj/kern/kernel.asm	/^f0104173:	68 c8 97 10 f0       	push   $0xf01097c8$/;"	l
f0104178	obj/kern/kernel.asm	/^f0104178:	e8 31 08 00 00       	call   f01049ae <cprintf>$/;"	l
f010417d	obj/kern/kernel.asm	/^f010417d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104180	obj/kern/kernel.asm	/^f0104180:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104185	obj/kern/kernel.asm	/^f0104185:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0104188	obj/kern/kernel.asm	/^f0104188:	c9                   	leave  $/;"	l
f0104189	obj/kern/kernel.asm	/^f0104189:	c3                   	ret    $/;"	l
f010418a	obj/kern/kernel.asm	/^f010418a <region_alloc>:$/;"	l
f010418a	obj/kern/kernel.asm	/^f010418a:	55                   	push   %ebp$/;"	l
f010418b	obj/kern/kernel.asm	/^f010418b:	89 e5                	mov    %esp,%ebp$/;"	l
f010418d	obj/kern/kernel.asm	/^f010418d:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104190	obj/kern/kernel.asm	/^f0104190:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104193	obj/kern/kernel.asm	/^f0104193:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0104196	obj/kern/kernel.asm	/^f0104196:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104199	obj/kern/kernel.asm	/^f0104199:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010419e	obj/kern/kernel.asm	/^f010419e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01041a1	obj/kern/kernel.asm	/^f01041a1:	eb 66                	jmp    f0104209 <region_alloc+0x7f>$/;"	l
f01041a3	obj/kern/kernel.asm	/^f01041a3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01041a6	obj/kern/kernel.asm	/^f01041a6:	6a 00                	push   $0x0$/;"	l
f01041a8	obj/kern/kernel.asm	/^f01041a8:	e8 07 d7 ff ff       	call   f01018b4 <page_alloc>$/;"	l
f01041ad	obj/kern/kernel.asm	/^f01041ad:	83 c4 10             	add    $0x10,%esp$/;"	l
f01041b0	obj/kern/kernel.asm	/^f01041b0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01041b3	obj/kern/kernel.asm	/^f01041b3:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f01041b7	obj/kern/kernel.asm	/^f01041b7:	75 17                	jne    f01041d0 <region_alloc+0x46>$/;"	l
f01041b9	obj/kern/kernel.asm	/^f01041b9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01041bc	obj/kern/kernel.asm	/^f01041bc:	68 e0 97 10 f0       	push   $0xf01097e0$/;"	l
f01041c1	obj/kern/kernel.asm	/^f01041c1:	68 24 01 00 00       	push   $0x124$/;"	l
f01041c6	obj/kern/kernel.asm	/^f01041c6:	68 bd 97 10 f0       	push   $0xf01097bd$/;"	l
f01041cb	obj/kern/kernel.asm	/^f01041cb:	e8 10 c1 ff ff       	call   f01002e0 <_panic>$/;"	l
f01041d0	obj/kern/kernel.asm	/^f01041d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01041d3	obj/kern/kernel.asm	/^f01041d3:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01041d6	obj/kern/kernel.asm	/^f01041d6:	6a 06                	push   $0x6$/;"	l
f01041d8	obj/kern/kernel.asm	/^f01041d8:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f01041db	obj/kern/kernel.asm	/^f01041db:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f01041de	obj/kern/kernel.asm	/^f01041de:	50                   	push   %eax$/;"	l
f01041df	obj/kern/kernel.asm	/^f01041df:	e8 f1 d8 ff ff       	call   f0101ad5 <page_insert>$/;"	l
f01041e4	obj/kern/kernel.asm	/^f01041e4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01041e7	obj/kern/kernel.asm	/^f01041e7:	85 c0                	test   %eax,%eax$/;"	l
f01041e9	obj/kern/kernel.asm	/^f01041e9:	74 17                	je     f0104202 <region_alloc+0x78>$/;"	l
f01041eb	obj/kern/kernel.asm	/^f01041eb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01041ee	obj/kern/kernel.asm	/^f01041ee:	68 00 98 10 f0       	push   $0xf0109800$/;"	l
f01041f3	obj/kern/kernel.asm	/^f01041f3:	68 26 01 00 00       	push   $0x126$/;"	l
f01041f8	obj/kern/kernel.asm	/^f01041f8:	68 bd 97 10 f0       	push   $0xf01097bd$/;"	l
f01041fd	obj/kern/kernel.asm	/^f01041fd:	e8 de c0 ff ff       	call   f01002e0 <_panic>$/;"	l
f0104202	obj/kern/kernel.asm	/^f0104202:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
f0104209	obj/kern/kernel.asm	/^f0104209:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f010420c	obj/kern/kernel.asm	/^f010420c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010420f	obj/kern/kernel.asm	/^f010420f:	01 d0                	add    %edx,%eax$/;"	l
f0104211	obj/kern/kernel.asm	/^f0104211:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
f0104214	obj/kern/kernel.asm	/^f0104214:	77 8d                	ja     f01041a3 <region_alloc+0x19>$/;"	l
f0104216	obj/kern/kernel.asm	/^f0104216:	90                   	nop$/;"	l
f0104217	obj/kern/kernel.asm	/^f0104217:	c9                   	leave  $/;"	l
f0104218	obj/kern/kernel.asm	/^f0104218:	c3                   	ret    $/;"	l
f0104219	obj/kern/kernel.asm	/^f0104219 <load_icode>:$/;"	l
f0104219	obj/kern/kernel.asm	/^f0104219:	55                   	push   %ebp$/;"	l
f010421a	obj/kern/kernel.asm	/^f010421a:	89 e5                	mov    %esp,%ebp$/;"	l
f010421c	obj/kern/kernel.asm	/^f010421c:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010421f	obj/kern/kernel.asm	/^f010421f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104222	obj/kern/kernel.asm	/^f0104222:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0104225	obj/kern/kernel.asm	/^f0104225:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104228	obj/kern/kernel.asm	/^f0104228:	8b 00                	mov    (%eax),%eax$/;"	l
f010422a	obj/kern/kernel.asm	/^f010422a:	3d 7f 45 4c 46       	cmp    $0x464c457f,%eax$/;"	l
f010422f	obj/kern/kernel.asm	/^f010422f:	74 17                	je     f0104248 <load_icode+0x2f>$/;"	l
f0104231	obj/kern/kernel.asm	/^f0104231:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104234	obj/kern/kernel.asm	/^f0104234:	68 21 98 10 f0       	push   $0xf0109821$/;"	l
f0104239	obj/kern/kernel.asm	/^f0104239:	68 64 01 00 00       	push   $0x164$/;"	l
f010423e	obj/kern/kernel.asm	/^f010423e:	68 bd 97 10 f0       	push   $0xf01097bd$/;"	l
f0104243	obj/kern/kernel.asm	/^f0104243:	e8 98 c0 ff ff       	call   f01002e0 <_panic>$/;"	l
f0104248	obj/kern/kernel.asm	/^f0104248:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010424b	obj/kern/kernel.asm	/^f010424b:	8b 50 1c             	mov    0x1c(%eax),%edx$/;"	l
f010424e	obj/kern/kernel.asm	/^f010424e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104251	obj/kern/kernel.asm	/^f0104251:	01 d0                	add    %edx,%eax$/;"	l
f0104253	obj/kern/kernel.asm	/^f0104253:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0104256	obj/kern/kernel.asm	/^f0104256:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104259	obj/kern/kernel.asm	/^f0104259:	0f b7 40 2c          	movzwl 0x2c(%eax),%eax$/;"	l
f010425d	obj/kern/kernel.asm	/^f010425d:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0104260	obj/kern/kernel.asm	/^f0104260:	c1 e0 05             	shl    $0x5,%eax$/;"	l
f0104263	obj/kern/kernel.asm	/^f0104263:	89 c2                	mov    %eax,%edx$/;"	l
f0104265	obj/kern/kernel.asm	/^f0104265:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104268	obj/kern/kernel.asm	/^f0104268:	01 d0                	add    %edx,%eax$/;"	l
f010426a	obj/kern/kernel.asm	/^f010426a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010426d	obj/kern/kernel.asm	/^f010426d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104270	obj/kern/kernel.asm	/^f0104270:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104273	obj/kern/kernel.asm	/^f0104273:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104276	obj/kern/kernel.asm	/^f0104276:	50                   	push   %eax$/;"	l
f0104277	obj/kern/kernel.asm	/^f0104277:	68 68 01 00 00       	push   $0x168$/;"	l
f010427c	obj/kern/kernel.asm	/^f010427c:	68 bd 97 10 f0       	push   $0xf01097bd$/;"	l
f0104281	obj/kern/kernel.asm	/^f0104281:	e8 7e fa ff ff       	call   f0103d04 <_paddr>$/;"	l
f0104286	obj/kern/kernel.asm	/^f0104286:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104289	obj/kern/kernel.asm	/^f0104289:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010428c	obj/kern/kernel.asm	/^f010428c:	50                   	push   %eax$/;"	l
f010428d	obj/kern/kernel.asm	/^f010428d:	e8 66 fa ff ff       	call   f0103cf8 <lcr3>$/;"	l
f0104292	obj/kern/kernel.asm	/^f0104292:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104295	obj/kern/kernel.asm	/^f0104295:	eb 7d                	jmp    f0104314 <load_icode+0xfb>$/;"	l
f0104297	obj/kern/kernel.asm	/^f0104297:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010429a	obj/kern/kernel.asm	/^f010429a:	8b 00                	mov    (%eax),%eax$/;"	l
f010429c	obj/kern/kernel.asm	/^f010429c:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f010429f	obj/kern/kernel.asm	/^f010429f:	75 6e                	jne    f010430f <load_icode+0xf6>$/;"	l
f01042a1	obj/kern/kernel.asm	/^f01042a1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01042a4	obj/kern/kernel.asm	/^f01042a4:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
f01042a7	obj/kern/kernel.asm	/^f01042a7:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f01042aa	obj/kern/kernel.asm	/^f01042aa:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
f01042ad	obj/kern/kernel.asm	/^f01042ad:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01042b0	obj/kern/kernel.asm	/^f01042b0:	50                   	push   %eax$/;"	l
f01042b1	obj/kern/kernel.asm	/^f01042b1:	52                   	push   %edx$/;"	l
f01042b2	obj/kern/kernel.asm	/^f01042b2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01042b5	obj/kern/kernel.asm	/^f01042b5:	e8 d0 fe ff ff       	call   f010418a <region_alloc>$/;"	l
f01042ba	obj/kern/kernel.asm	/^f01042ba:	83 c4 10             	add    $0x10,%esp$/;"	l
f01042bd	obj/kern/kernel.asm	/^f01042bd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01042c0	obj/kern/kernel.asm	/^f01042c0:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
f01042c3	obj/kern/kernel.asm	/^f01042c3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01042c6	obj/kern/kernel.asm	/^f01042c6:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
f01042c9	obj/kern/kernel.asm	/^f01042c9:	39 c2                	cmp    %eax,%edx$/;"	l
f01042cb	obj/kern/kernel.asm	/^f01042cb:	73 1b                	jae    f01042e8 <load_icode+0xcf>$/;"	l
f01042cd	obj/kern/kernel.asm	/^f01042cd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01042d0	obj/kern/kernel.asm	/^f01042d0:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
f01042d3	obj/kern/kernel.asm	/^f01042d3:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f01042d6	obj/kern/kernel.asm	/^f01042d6:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
f01042d9	obj/kern/kernel.asm	/^f01042d9:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01042dc	obj/kern/kernel.asm	/^f01042dc:	50                   	push   %eax$/;"	l
f01042dd	obj/kern/kernel.asm	/^f01042dd:	6a 00                	push   $0x0$/;"	l
f01042df	obj/kern/kernel.asm	/^f01042df:	52                   	push   %edx$/;"	l
f01042e0	obj/kern/kernel.asm	/^f01042e0:	e8 aa 2f 00 00       	call   f010728f <memset>$/;"	l
f01042e5	obj/kern/kernel.asm	/^f01042e5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01042e8	obj/kern/kernel.asm	/^f01042e8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01042eb	obj/kern/kernel.asm	/^f01042eb:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
f01042ee	obj/kern/kernel.asm	/^f01042ee:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f01042f1	obj/kern/kernel.asm	/^f01042f1:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
f01042f4	obj/kern/kernel.asm	/^f01042f4:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01042f7	obj/kern/kernel.asm	/^f01042f7:	01 d1                	add    %edx,%ecx$/;"	l
f01042f9	obj/kern/kernel.asm	/^f01042f9:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f01042fc	obj/kern/kernel.asm	/^f01042fc:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
f01042ff	obj/kern/kernel.asm	/^f01042ff:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104302	obj/kern/kernel.asm	/^f0104302:	50                   	push   %eax$/;"	l
f0104303	obj/kern/kernel.asm	/^f0104303:	51                   	push   %ecx$/;"	l
f0104304	obj/kern/kernel.asm	/^f0104304:	52                   	push   %edx$/;"	l
f0104305	obj/kern/kernel.asm	/^f0104305:	e8 cd 30 00 00       	call   f01073d7 <memcpy>$/;"	l
f010430a	obj/kern/kernel.asm	/^f010430a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010430d	obj/kern/kernel.asm	/^f010430d:	eb 01                	jmp    f0104310 <load_icode+0xf7>$/;"	l
f010430f	obj/kern/kernel.asm	/^f010430f:	90                   	nop$/;"	l
f0104310	obj/kern/kernel.asm	/^f0104310:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
f0104314	obj/kern/kernel.asm	/^f0104314:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104317	obj/kern/kernel.asm	/^f0104317:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
f010431a	obj/kern/kernel.asm	/^f010431a:	0f 82 77 ff ff ff    	jb     f0104297 <load_icode+0x7e>$/;"	l
f0104320	obj/kern/kernel.asm	/^f0104320:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0104325	obj/kern/kernel.asm	/^f0104325:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104328	obj/kern/kernel.asm	/^f0104328:	50                   	push   %eax$/;"	l
f0104329	obj/kern/kernel.asm	/^f0104329:	68 72 01 00 00       	push   $0x172$/;"	l
f010432e	obj/kern/kernel.asm	/^f010432e:	68 bd 97 10 f0       	push   $0xf01097bd$/;"	l
f0104333	obj/kern/kernel.asm	/^f0104333:	e8 cc f9 ff ff       	call   f0103d04 <_paddr>$/;"	l
f0104338	obj/kern/kernel.asm	/^f0104338:	83 c4 10             	add    $0x10,%esp$/;"	l
f010433b	obj/kern/kernel.asm	/^f010433b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010433e	obj/kern/kernel.asm	/^f010433e:	50                   	push   %eax$/;"	l
f010433f	obj/kern/kernel.asm	/^f010433f:	e8 b4 f9 ff ff       	call   f0103cf8 <lcr3>$/;"	l
f0104344	obj/kern/kernel.asm	/^f0104344:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104347	obj/kern/kernel.asm	/^f0104347:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010434a	obj/kern/kernel.asm	/^f010434a:	68 00 10 00 00       	push   $0x1000$/;"	l
f010434f	obj/kern/kernel.asm	/^f010434f:	68 00 d0 bf ee       	push   $0xeebfd000$/;"	l
f0104354	obj/kern/kernel.asm	/^f0104354:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0104357	obj/kern/kernel.asm	/^f0104357:	e8 2e fe ff ff       	call   f010418a <region_alloc>$/;"	l
f010435c	obj/kern/kernel.asm	/^f010435c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010435f	obj/kern/kernel.asm	/^f010435f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0104362	obj/kern/kernel.asm	/^f0104362:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
f0104365	obj/kern/kernel.asm	/^f0104365:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104368	obj/kern/kernel.asm	/^f0104368:	89 50 30             	mov    %edx,0x30(%eax)$/;"	l
f010436b	obj/kern/kernel.asm	/^f010436b:	90                   	nop$/;"	l
f010436c	obj/kern/kernel.asm	/^f010436c:	c9                   	leave  $/;"	l
f010436d	obj/kern/kernel.asm	/^f010436d:	c3                   	ret    $/;"	l
f010436e	obj/kern/kernel.asm	/^f010436e <env_create>:$/;"	l
f010436e	obj/kern/kernel.asm	/^f010436e:	55                   	push   %ebp$/;"	l
f010436f	obj/kern/kernel.asm	/^f010436f:	89 e5                	mov    %esp,%ebp$/;"	l
f0104371	obj/kern/kernel.asm	/^f0104371:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0104374	obj/kern/kernel.asm	/^f0104374:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f010437b	obj/kern/kernel.asm	/^f010437b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010437e	obj/kern/kernel.asm	/^f010437e:	6a 00                	push   $0x0$/;"	l
f0104380	obj/kern/kernel.asm	/^f0104380:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
f0104383	obj/kern/kernel.asm	/^f0104383:	50                   	push   %eax$/;"	l
f0104384	obj/kern/kernel.asm	/^f0104384:	e8 aa fc ff ff       	call   f0104033 <env_alloc>$/;"	l
f0104389	obj/kern/kernel.asm	/^f0104389:	83 c4 10             	add    $0x10,%esp$/;"	l
f010438c	obj/kern/kernel.asm	/^f010438c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f010438f	obj/kern/kernel.asm	/^f010438f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0104393	obj/kern/kernel.asm	/^f0104393:	79 17                	jns    f01043ac <env_create+0x3e>$/;"	l
f0104395	obj/kern/kernel.asm	/^f0104395:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0104398	obj/kern/kernel.asm	/^f0104398:	68 34 98 10 f0       	push   $0xf0109834$/;"	l
f010439d	obj/kern/kernel.asm	/^f010439d:	68 8a 01 00 00       	push   $0x18a$/;"	l
f01043a2	obj/kern/kernel.asm	/^f01043a2:	68 bd 97 10 f0       	push   $0xf01097bd$/;"	l
f01043a7	obj/kern/kernel.asm	/^f01043a7:	e8 34 bf ff ff       	call   f01002e0 <_panic>$/;"	l
f01043ac	obj/kern/kernel.asm	/^f01043ac:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01043af	obj/kern/kernel.asm	/^f01043af:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01043b2	obj/kern/kernel.asm	/^f01043b2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01043b5	obj/kern/kernel.asm	/^f01043b5:	50                   	push   %eax$/;"	l
f01043b6	obj/kern/kernel.asm	/^f01043b6:	e8 5e fe ff ff       	call   f0104219 <load_icode>$/;"	l
f01043bb	obj/kern/kernel.asm	/^f01043bb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01043be	obj/kern/kernel.asm	/^f01043be:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01043c1	obj/kern/kernel.asm	/^f01043c1:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01043c4	obj/kern/kernel.asm	/^f01043c4:	89 50 50             	mov    %edx,0x50(%eax)$/;"	l
f01043c7	obj/kern/kernel.asm	/^f01043c7:	90                   	nop$/;"	l
f01043c8	obj/kern/kernel.asm	/^f01043c8:	c9                   	leave  $/;"	l
f01043c9	obj/kern/kernel.asm	/^f01043c9:	c3                   	ret    $/;"	l
f01043ca	obj/kern/kernel.asm	/^f01043ca <env_free>:$/;"	l
f01043ca	obj/kern/kernel.asm	/^f01043ca:	55                   	push   %ebp$/;"	l
f01043cb	obj/kern/kernel.asm	/^f01043cb:	89 e5                	mov    %esp,%ebp$/;"	l
f01043cd	obj/kern/kernel.asm	/^f01043cd:	53                   	push   %ebx$/;"	l
f01043ce	obj/kern/kernel.asm	/^f01043ce:	83 ec 14             	sub    $0x14,%esp$/;"	l
f01043d1	obj/kern/kernel.asm	/^f01043d1:	e8 89 39 00 00       	call   f0107d5f <cpunum>$/;"	l
f01043d6	obj/kern/kernel.asm	/^f01043d6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01043d9	obj/kern/kernel.asm	/^f01043d9:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f01043de	obj/kern/kernel.asm	/^f01043de:	8b 00                	mov    (%eax),%eax$/;"	l
f01043e0	obj/kern/kernel.asm	/^f01043e0:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
f01043e3	obj/kern/kernel.asm	/^f01043e3:	75 27                	jne    f010440c <env_free+0x42>$/;"	l
f01043e5	obj/kern/kernel.asm	/^f01043e5:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f01043ea	obj/kern/kernel.asm	/^f01043ea:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01043ed	obj/kern/kernel.asm	/^f01043ed:	50                   	push   %eax$/;"	l
f01043ee	obj/kern/kernel.asm	/^f01043ee:	68 9d 01 00 00       	push   $0x19d$/;"	l
f01043f3	obj/kern/kernel.asm	/^f01043f3:	68 bd 97 10 f0       	push   $0xf01097bd$/;"	l
f01043f8	obj/kern/kernel.asm	/^f01043f8:	e8 07 f9 ff ff       	call   f0103d04 <_paddr>$/;"	l
f01043fd	obj/kern/kernel.asm	/^f01043fd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104400	obj/kern/kernel.asm	/^f0104400:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104403	obj/kern/kernel.asm	/^f0104403:	50                   	push   %eax$/;"	l
f0104404	obj/kern/kernel.asm	/^f0104404:	e8 ef f8 ff ff       	call   f0103cf8 <lcr3>$/;"	l
f0104409	obj/kern/kernel.asm	/^f0104409:	83 c4 10             	add    $0x10,%esp$/;"	l
f010440c	obj/kern/kernel.asm	/^f010440c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010440f	obj/kern/kernel.asm	/^f010440f:	8b 58 48             	mov    0x48(%eax),%ebx$/;"	l
f0104412	obj/kern/kernel.asm	/^f0104412:	e8 48 39 00 00       	call   f0107d5f <cpunum>$/;"	l
f0104417	obj/kern/kernel.asm	/^f0104417:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010441a	obj/kern/kernel.asm	/^f010441a:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f010441f	obj/kern/kernel.asm	/^f010441f:	8b 00                	mov    (%eax),%eax$/;"	l
f0104421	obj/kern/kernel.asm	/^f0104421:	85 c0                	test   %eax,%eax$/;"	l
f0104423	obj/kern/kernel.asm	/^f0104423:	74 14                	je     f0104439 <env_free+0x6f>$/;"	l
f0104425	obj/kern/kernel.asm	/^f0104425:	e8 35 39 00 00       	call   f0107d5f <cpunum>$/;"	l
f010442a	obj/kern/kernel.asm	/^f010442a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010442d	obj/kern/kernel.asm	/^f010442d:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0104432	obj/kern/kernel.asm	/^f0104432:	8b 00                	mov    (%eax),%eax$/;"	l
f0104434	obj/kern/kernel.asm	/^f0104434:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0104437	obj/kern/kernel.asm	/^f0104437:	eb 05                	jmp    f010443e <env_free+0x74>$/;"	l
f0104439	obj/kern/kernel.asm	/^f0104439:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010443e	obj/kern/kernel.asm	/^f010443e:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104441	obj/kern/kernel.asm	/^f0104441:	53                   	push   %ebx$/;"	l
f0104442	obj/kern/kernel.asm	/^f0104442:	50                   	push   %eax$/;"	l
f0104443	obj/kern/kernel.asm	/^f0104443:	68 44 98 10 f0       	push   $0xf0109844$/;"	l
f0104448	obj/kern/kernel.asm	/^f0104448:	e8 61 05 00 00       	call   f01049ae <cprintf>$/;"	l
f010444d	obj/kern/kernel.asm	/^f010444d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104450	obj/kern/kernel.asm	/^f0104450:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0104457	obj/kern/kernel.asm	/^f0104457:	e9 d6 00 00 00       	jmp    f0104532 <env_free+0x168>$/;"	l
f010445c	obj/kern/kernel.asm	/^f010445c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010445f	obj/kern/kernel.asm	/^f010445f:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104462	obj/kern/kernel.asm	/^f0104462:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0104465	obj/kern/kernel.asm	/^f0104465:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f0104468	obj/kern/kernel.asm	/^f0104468:	01 d0                	add    %edx,%eax$/;"	l
f010446a	obj/kern/kernel.asm	/^f010446a:	8b 00                	mov    (%eax),%eax$/;"	l
f010446c	obj/kern/kernel.asm	/^f010446c:	83 e0 01             	and    $0x1,%eax$/;"	l
f010446f	obj/kern/kernel.asm	/^f010446f:	85 c0                	test   %eax,%eax$/;"	l
f0104471	obj/kern/kernel.asm	/^f0104471:	0f 84 b6 00 00 00    	je     f010452d <env_free+0x163>$/;"	l
f0104477	obj/kern/kernel.asm	/^f0104477:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010447a	obj/kern/kernel.asm	/^f010447a:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010447d	obj/kern/kernel.asm	/^f010447d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0104480	obj/kern/kernel.asm	/^f0104480:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f0104483	obj/kern/kernel.asm	/^f0104483:	01 d0                	add    %edx,%eax$/;"	l
f0104485	obj/kern/kernel.asm	/^f0104485:	8b 00                	mov    (%eax),%eax$/;"	l
f0104487	obj/kern/kernel.asm	/^f0104487:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
f010448c	obj/kern/kernel.asm	/^f010448c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010448f	obj/kern/kernel.asm	/^f010448f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104492	obj/kern/kernel.asm	/^f0104492:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f0104495	obj/kern/kernel.asm	/^f0104495:	68 ac 01 00 00       	push   $0x1ac$/;"	l
f010449a	obj/kern/kernel.asm	/^f010449a:	68 bd 97 10 f0       	push   $0xf01097bd$/;"	l
f010449f	obj/kern/kernel.asm	/^f010449f:	e8 8d f8 ff ff       	call   f0103d31 <_kaddr>$/;"	l
f01044a4	obj/kern/kernel.asm	/^f01044a4:	83 c4 10             	add    $0x10,%esp$/;"	l
f01044a7	obj/kern/kernel.asm	/^f01044a7:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f01044aa	obj/kern/kernel.asm	/^f01044aa:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f01044b1	obj/kern/kernel.asm	/^f01044b1:	eb 41                	jmp    f01044f4 <env_free+0x12a>$/;"	l
f01044b3	obj/kern/kernel.asm	/^f01044b3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01044b6	obj/kern/kernel.asm	/^f01044b6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f01044bd	obj/kern/kernel.asm	/^f01044bd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f01044c0	obj/kern/kernel.asm	/^f01044c0:	01 d0                	add    %edx,%eax$/;"	l
f01044c2	obj/kern/kernel.asm	/^f01044c2:	8b 00                	mov    (%eax),%eax$/;"	l
f01044c4	obj/kern/kernel.asm	/^f01044c4:	83 e0 01             	and    $0x1,%eax$/;"	l
f01044c7	obj/kern/kernel.asm	/^f01044c7:	85 c0                	test   %eax,%eax$/;"	l
f01044c9	obj/kern/kernel.asm	/^f01044c9:	74 25                	je     f01044f0 <env_free+0x126>$/;"	l
f01044cb	obj/kern/kernel.asm	/^f01044cb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01044ce	obj/kern/kernel.asm	/^f01044ce:	c1 e0 16             	shl    $0x16,%eax$/;"	l
f01044d1	obj/kern/kernel.asm	/^f01044d1:	89 c2                	mov    %eax,%edx$/;"	l
f01044d3	obj/kern/kernel.asm	/^f01044d3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01044d6	obj/kern/kernel.asm	/^f01044d6:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
f01044d9	obj/kern/kernel.asm	/^f01044d9:	09 d0                	or     %edx,%eax$/;"	l
f01044db	obj/kern/kernel.asm	/^f01044db:	89 c2                	mov    %eax,%edx$/;"	l
f01044dd	obj/kern/kernel.asm	/^f01044dd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01044e0	obj/kern/kernel.asm	/^f01044e0:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01044e3	obj/kern/kernel.asm	/^f01044e3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01044e6	obj/kern/kernel.asm	/^f01044e6:	52                   	push   %edx$/;"	l
f01044e7	obj/kern/kernel.asm	/^f01044e7:	50                   	push   %eax$/;"	l
f01044e8	obj/kern/kernel.asm	/^f01044e8:	e8 cb d6 ff ff       	call   f0101bb8 <page_remove>$/;"	l
f01044ed	obj/kern/kernel.asm	/^f01044ed:	83 c4 10             	add    $0x10,%esp$/;"	l
f01044f0	obj/kern/kernel.asm	/^f01044f0:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
f01044f4	obj/kern/kernel.asm	/^f01044f4:	81 7d f0 ff 03 00 00 	cmpl   $0x3ff,-0x10(%ebp)$/;"	l
f01044fb	obj/kern/kernel.asm	/^f01044fb:	76 b6                	jbe    f01044b3 <env_free+0xe9>$/;"	l
f01044fd	obj/kern/kernel.asm	/^f01044fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104500	obj/kern/kernel.asm	/^f0104500:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104503	obj/kern/kernel.asm	/^f0104503:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0104506	obj/kern/kernel.asm	/^f0104506:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f0104509	obj/kern/kernel.asm	/^f0104509:	01 d0                	add    %edx,%eax$/;"	l
f010450b	obj/kern/kernel.asm	/^f010450b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0104511	obj/kern/kernel.asm	/^f0104511:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104514	obj/kern/kernel.asm	/^f0104514:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f0104517	obj/kern/kernel.asm	/^f0104517:	e8 5f f8 ff ff       	call   f0103d7b <pa2page>$/;"	l
f010451c	obj/kern/kernel.asm	/^f010451c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010451f	obj/kern/kernel.asm	/^f010451f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104522	obj/kern/kernel.asm	/^f0104522:	50                   	push   %eax$/;"	l
f0104523	obj/kern/kernel.asm	/^f0104523:	e8 37 d4 ff ff       	call   f010195f <page_decref>$/;"	l
f0104528	obj/kern/kernel.asm	/^f0104528:	83 c4 10             	add    $0x10,%esp$/;"	l
f010452b	obj/kern/kernel.asm	/^f010452b:	eb 01                	jmp    f010452e <env_free+0x164>$/;"	l
f010452d	obj/kern/kernel.asm	/^f010452d:	90                   	nop$/;"	l
f010452e	obj/kern/kernel.asm	/^f010452e:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f0104532	obj/kern/kernel.asm	/^f0104532:	81 7d f4 ba 03 00 00 	cmpl   $0x3ba,-0xc(%ebp)$/;"	l
f0104539	obj/kern/kernel.asm	/^f0104539:	0f 86 1d ff ff ff    	jbe    f010445c <env_free+0x92>$/;"	l
f010453f	obj/kern/kernel.asm	/^f010453f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104542	obj/kern/kernel.asm	/^f0104542:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0104545	obj/kern/kernel.asm	/^f0104545:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104548	obj/kern/kernel.asm	/^f0104548:	50                   	push   %eax$/;"	l
f0104549	obj/kern/kernel.asm	/^f0104549:	68 ba 01 00 00       	push   $0x1ba$/;"	l
f010454e	obj/kern/kernel.asm	/^f010454e:	68 bd 97 10 f0       	push   $0xf01097bd$/;"	l
f0104553	obj/kern/kernel.asm	/^f0104553:	e8 ac f7 ff ff       	call   f0103d04 <_paddr>$/;"	l
f0104558	obj/kern/kernel.asm	/^f0104558:	83 c4 10             	add    $0x10,%esp$/;"	l
f010455b	obj/kern/kernel.asm	/^f010455b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f010455e	obj/kern/kernel.asm	/^f010455e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104561	obj/kern/kernel.asm	/^f0104561:	c7 40 60 00 00 00 00 	movl   $0x0,0x60(%eax)$/;"	l
f0104568	obj/kern/kernel.asm	/^f0104568:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010456b	obj/kern/kernel.asm	/^f010456b:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f010456e	obj/kern/kernel.asm	/^f010456e:	e8 08 f8 ff ff       	call   f0103d7b <pa2page>$/;"	l
f0104573	obj/kern/kernel.asm	/^f0104573:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104576	obj/kern/kernel.asm	/^f0104576:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104579	obj/kern/kernel.asm	/^f0104579:	50                   	push   %eax$/;"	l
f010457a	obj/kern/kernel.asm	/^f010457a:	e8 e0 d3 ff ff       	call   f010195f <page_decref>$/;"	l
f010457f	obj/kern/kernel.asm	/^f010457f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104582	obj/kern/kernel.asm	/^f0104582:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104585	obj/kern/kernel.asm	/^f0104585:	c7 40 54 00 00 00 00 	movl   $0x0,0x54(%eax)$/;"	l
f010458c	obj/kern/kernel.asm	/^f010458c:	8b 15 40 02 23 f0    	mov    0xf0230240,%edx$/;"	l
f0104592	obj/kern/kernel.asm	/^f0104592:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104595	obj/kern/kernel.asm	/^f0104595:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
f0104598	obj/kern/kernel.asm	/^f0104598:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010459b	obj/kern/kernel.asm	/^f010459b:	a3 40 02 23 f0       	mov    %eax,0xf0230240$/;"	l
f01045a0	obj/kern/kernel.asm	/^f01045a0:	90                   	nop$/;"	l
f01045a1	obj/kern/kernel.asm	/^f01045a1:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f01045a4	obj/kern/kernel.asm	/^f01045a4:	c9                   	leave  $/;"	l
f01045a5	obj/kern/kernel.asm	/^f01045a5:	c3                   	ret    $/;"	l
f01045a6	obj/kern/kernel.asm	/^f01045a6 <env_destroy>:$/;"	l
f01045a6	obj/kern/kernel.asm	/^f01045a6:	55                   	push   %ebp$/;"	l
f01045a7	obj/kern/kernel.asm	/^f01045a7:	89 e5                	mov    %esp,%ebp$/;"	l
f01045a9	obj/kern/kernel.asm	/^f01045a9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01045ac	obj/kern/kernel.asm	/^f01045ac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01045af	obj/kern/kernel.asm	/^f01045af:	8b 40 54             	mov    0x54(%eax),%eax$/;"	l
f01045b2	obj/kern/kernel.asm	/^f01045b2:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f01045b5	obj/kern/kernel.asm	/^f01045b5:	75 20                	jne    f01045d7 <env_destroy+0x31>$/;"	l
f01045b7	obj/kern/kernel.asm	/^f01045b7:	e8 a3 37 00 00       	call   f0107d5f <cpunum>$/;"	l
f01045bc	obj/kern/kernel.asm	/^f01045bc:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045bf	obj/kern/kernel.asm	/^f01045bf:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f01045c4	obj/kern/kernel.asm	/^f01045c4:	8b 00                	mov    (%eax),%eax$/;"	l
f01045c6	obj/kern/kernel.asm	/^f01045c6:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
f01045c9	obj/kern/kernel.asm	/^f01045c9:	74 0c                	je     f01045d7 <env_destroy+0x31>$/;"	l
f01045cb	obj/kern/kernel.asm	/^f01045cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01045ce	obj/kern/kernel.asm	/^f01045ce:	c7 40 54 01 00 00 00 	movl   $0x1,0x54(%eax)$/;"	l
f01045d5	obj/kern/kernel.asm	/^f01045d5:	eb 3a                	jmp    f0104611 <env_destroy+0x6b>$/;"	l
f01045d7	obj/kern/kernel.asm	/^f01045d7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01045da	obj/kern/kernel.asm	/^f01045da:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01045dd	obj/kern/kernel.asm	/^f01045dd:	e8 e8 fd ff ff       	call   f01043ca <env_free>$/;"	l
f01045e2	obj/kern/kernel.asm	/^f01045e2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01045e5	obj/kern/kernel.asm	/^f01045e5:	e8 75 37 00 00       	call   f0107d5f <cpunum>$/;"	l
f01045ea	obj/kern/kernel.asm	/^f01045ea:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01045ed	obj/kern/kernel.asm	/^f01045ed:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f01045f2	obj/kern/kernel.asm	/^f01045f2:	8b 00                	mov    (%eax),%eax$/;"	l
f01045f4	obj/kern/kernel.asm	/^f01045f4:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
f01045f7	obj/kern/kernel.asm	/^f01045f7:	75 18                	jne    f0104611 <env_destroy+0x6b>$/;"	l
f01045f9	obj/kern/kernel.asm	/^f01045f9:	e8 61 37 00 00       	call   f0107d5f <cpunum>$/;"	l
f01045fe	obj/kern/kernel.asm	/^f01045fe:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104601	obj/kern/kernel.asm	/^f0104601:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0104606	obj/kern/kernel.asm	/^f0104606:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f010460c	obj/kern/kernel.asm	/^f010460c:	e8 29 16 00 00       	call   f0105c3a <sched_yield>$/;"	l
f0104611	obj/kern/kernel.asm	/^f0104611:	c9                   	leave  $/;"	l
f0104612	obj/kern/kernel.asm	/^f0104612:	c3                   	ret    $/;"	l
f0104613	obj/kern/kernel.asm	/^f0104613 <env_pop_tf>:$/;"	l
f0104613	obj/kern/kernel.asm	/^f0104613:	55                   	push   %ebp$/;"	l
f0104614	obj/kern/kernel.asm	/^f0104614:	89 e5                	mov    %esp,%ebp$/;"	l
f0104616	obj/kern/kernel.asm	/^f0104616:	53                   	push   %ebx$/;"	l
f0104617	obj/kern/kernel.asm	/^f0104617:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010461a	obj/kern/kernel.asm	/^f010461a:	e8 40 37 00 00       	call   f0107d5f <cpunum>$/;"	l
f010461f	obj/kern/kernel.asm	/^f010461f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104622	obj/kern/kernel.asm	/^f0104622:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0104627	obj/kern/kernel.asm	/^f0104627:	8b 18                	mov    (%eax),%ebx$/;"	l
f0104629	obj/kern/kernel.asm	/^f0104629:	e8 31 37 00 00       	call   f0107d5f <cpunum>$/;"	l
f010462e	obj/kern/kernel.asm	/^f010462e:	89 43 5c             	mov    %eax,0x5c(%ebx)$/;"	l
f0104631	obj/kern/kernel.asm	/^f0104631:	8b 65 08             	mov    0x8(%ebp),%esp$/;"	l
f0104634	obj/kern/kernel.asm	/^f0104634:	61                   	popa   $/;"	l
f0104635	obj/kern/kernel.asm	/^f0104635:	07                   	pop    %es$/;"	l
f0104636	obj/kern/kernel.asm	/^f0104636:	1f                   	pop    %ds$/;"	l
f0104637	obj/kern/kernel.asm	/^f0104637:	83 c4 08             	add    $0x8,%esp$/;"	l
f010463a	obj/kern/kernel.asm	/^f010463a:	cf                   	iret   $/;"	l
f010463b	obj/kern/kernel.asm	/^f010463b:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010463e	obj/kern/kernel.asm	/^f010463e:	68 5a 98 10 f0       	push   $0xf010985a$/;"	l
f0104643	obj/kern/kernel.asm	/^f0104643:	68 fb 01 00 00       	push   $0x1fb$/;"	l
f0104648	obj/kern/kernel.asm	/^f0104648:	68 bd 97 10 f0       	push   $0xf01097bd$/;"	l
f010464d	obj/kern/kernel.asm	/^f010464d:	e8 8e bc ff ff       	call   f01002e0 <_panic>$/;"	l
f0104652	obj/kern/kernel.asm	/^f0104652 <env_run>:$/;"	l
f0104652	obj/kern/kernel.asm	/^f0104652:	55                   	push   %ebp$/;"	l
f0104653	obj/kern/kernel.asm	/^f0104653:	89 e5                	mov    %esp,%ebp$/;"	l
f0104655	obj/kern/kernel.asm	/^f0104655:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104658	obj/kern/kernel.asm	/^f0104658:	e8 02 37 00 00       	call   f0107d5f <cpunum>$/;"	l
f010465d	obj/kern/kernel.asm	/^f010465d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104660	obj/kern/kernel.asm	/^f0104660:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0104665	obj/kern/kernel.asm	/^f0104665:	8b 00                	mov    (%eax),%eax$/;"	l
f0104667	obj/kern/kernel.asm	/^f0104667:	85 c0                	test   %eax,%eax$/;"	l
f0104669	obj/kern/kernel.asm	/^f0104669:	74 2d                	je     f0104698 <env_run+0x46>$/;"	l
f010466b	obj/kern/kernel.asm	/^f010466b:	e8 ef 36 00 00       	call   f0107d5f <cpunum>$/;"	l
f0104670	obj/kern/kernel.asm	/^f0104670:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0104673	obj/kern/kernel.asm	/^f0104673:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0104678	obj/kern/kernel.asm	/^f0104678:	8b 00                	mov    (%eax),%eax$/;"	l
f010467a	obj/kern/kernel.asm	/^f010467a:	8b 40 54             	mov    0x54(%eax),%eax$/;"	l
f010467d	obj/kern/kernel.asm	/^f010467d:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104680	obj/kern/kernel.asm	/^f0104680:	75 16                	jne    f0104698 <env_run+0x46>$/;"	l
f0104682	obj/kern/kernel.asm	/^f0104682:	e8 d8 36 00 00       	call   f0107d5f <cpunum>$/;"	l
f0104687	obj/kern/kernel.asm	/^f0104687:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010468a	obj/kern/kernel.asm	/^f010468a:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f010468f	obj/kern/kernel.asm	/^f010468f:	8b 00                	mov    (%eax),%eax$/;"	l
f0104691	obj/kern/kernel.asm	/^f0104691:	c7 40 54 02 00 00 00 	movl   $0x2,0x54(%eax)$/;"	l
f0104698	obj/kern/kernel.asm	/^f0104698:	e8 c2 36 00 00       	call   f0107d5f <cpunum>$/;"	l
f010469d	obj/kern/kernel.asm	/^f010469d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01046a0	obj/kern/kernel.asm	/^f01046a0:	8d 90 28 10 23 f0    	lea    -0xfdcefd8(%eax),%edx$/;"	l
f01046a6	obj/kern/kernel.asm	/^f01046a6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01046a9	obj/kern/kernel.asm	/^f01046a9:	89 02                	mov    %eax,(%edx)$/;"	l
f01046ab	obj/kern/kernel.asm	/^f01046ab:	e8 af 36 00 00       	call   f0107d5f <cpunum>$/;"	l
f01046b0	obj/kern/kernel.asm	/^f01046b0:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01046b3	obj/kern/kernel.asm	/^f01046b3:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f01046b8	obj/kern/kernel.asm	/^f01046b8:	8b 00                	mov    (%eax),%eax$/;"	l
f01046ba	obj/kern/kernel.asm	/^f01046ba:	c7 40 54 03 00 00 00 	movl   $0x3,0x54(%eax)$/;"	l
f01046c1	obj/kern/kernel.asm	/^f01046c1:	e8 99 36 00 00       	call   f0107d5f <cpunum>$/;"	l
f01046c6	obj/kern/kernel.asm	/^f01046c6:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01046c9	obj/kern/kernel.asm	/^f01046c9:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f01046ce	obj/kern/kernel.asm	/^f01046ce:	8b 00                	mov    (%eax),%eax$/;"	l
f01046d0	obj/kern/kernel.asm	/^f01046d0:	8b 50 58             	mov    0x58(%eax),%edx$/;"	l
f01046d3	obj/kern/kernel.asm	/^f01046d3:	83 c2 01             	add    $0x1,%edx$/;"	l
f01046d6	obj/kern/kernel.asm	/^f01046d6:	89 50 58             	mov    %edx,0x58(%eax)$/;"	l
f01046d9	obj/kern/kernel.asm	/^f01046d9:	e8 81 36 00 00       	call   f0107d5f <cpunum>$/;"	l
f01046de	obj/kern/kernel.asm	/^f01046de:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01046e1	obj/kern/kernel.asm	/^f01046e1:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f01046e6	obj/kern/kernel.asm	/^f01046e6:	8b 00                	mov    (%eax),%eax$/;"	l
f01046e8	obj/kern/kernel.asm	/^f01046e8:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f01046eb	obj/kern/kernel.asm	/^f01046eb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01046ee	obj/kern/kernel.asm	/^f01046ee:	50                   	push   %eax$/;"	l
f01046ef	obj/kern/kernel.asm	/^f01046ef:	68 1e 02 00 00       	push   $0x21e$/;"	l
f01046f4	obj/kern/kernel.asm	/^f01046f4:	68 bd 97 10 f0       	push   $0xf01097bd$/;"	l
f01046f9	obj/kern/kernel.asm	/^f01046f9:	e8 06 f6 ff ff       	call   f0103d04 <_paddr>$/;"	l
f01046fe	obj/kern/kernel.asm	/^f01046fe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104701	obj/kern/kernel.asm	/^f0104701:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104704	obj/kern/kernel.asm	/^f0104704:	50                   	push   %eax$/;"	l
f0104705	obj/kern/kernel.asm	/^f0104705:	e8 ee f5 ff ff       	call   f0103cf8 <lcr3>$/;"	l
f010470a	obj/kern/kernel.asm	/^f010470a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010470d	obj/kern/kernel.asm	/^f010470d:	e8 cc f6 ff ff       	call   f0103dde <unlock_kernel>$/;"	l
f0104712	obj/kern/kernel.asm	/^f0104712:	e8 48 36 00 00       	call   f0107d5f <cpunum>$/;"	l
f0104717	obj/kern/kernel.asm	/^f0104717:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010471a	obj/kern/kernel.asm	/^f010471a:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f010471f	obj/kern/kernel.asm	/^f010471f:	8b 00                	mov    (%eax),%eax$/;"	l
f0104721	obj/kern/kernel.asm	/^f0104721:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104724	obj/kern/kernel.asm	/^f0104724:	50                   	push   %eax$/;"	l
f0104725	obj/kern/kernel.asm	/^f0104725:	e8 e9 fe ff ff       	call   f0104613 <env_pop_tf>$/;"	l
f010472a	obj/kern/kernel.asm	/^f010472a <inb>:$/;"	l
f010472a	obj/kern/kernel.asm	/^f010472a:	55                   	push   %ebp$/;"	l
f010472b	obj/kern/kernel.asm	/^f010472b:	89 e5                	mov    %esp,%ebp$/;"	l
f010472d	obj/kern/kernel.asm	/^f010472d:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0104730	obj/kern/kernel.asm	/^f0104730:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104733	obj/kern/kernel.asm	/^f0104733:	89 c2                	mov    %eax,%edx$/;"	l
f0104735	obj/kern/kernel.asm	/^f0104735:	ec                   	in     (%dx),%al$/;"	l
f0104736	obj/kern/kernel.asm	/^f0104736:	88 45 ff             	mov    %al,-0x1(%ebp)$/;"	l
f0104739	obj/kern/kernel.asm	/^f0104739:	0f b6 45 ff          	movzbl -0x1(%ebp),%eax$/;"	l
f010473d	obj/kern/kernel.asm	/^f010473d:	c9                   	leave  $/;"	l
f010473e	obj/kern/kernel.asm	/^f010473e:	c3                   	ret    $/;"	l
f010473f	obj/kern/kernel.asm	/^f010473f <outb>:$/;"	l
f010473f	obj/kern/kernel.asm	/^f010473f:	55                   	push   %ebp$/;"	l
f0104740	obj/kern/kernel.asm	/^f0104740:	89 e5                	mov    %esp,%ebp$/;"	l
f0104742	obj/kern/kernel.asm	/^f0104742:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0104745	obj/kern/kernel.asm	/^f0104745:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104748	obj/kern/kernel.asm	/^f0104748:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
f010474b	obj/kern/kernel.asm	/^f010474b:	0f b6 45 fc          	movzbl -0x4(%ebp),%eax$/;"	l
f010474f	obj/kern/kernel.asm	/^f010474f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0104752	obj/kern/kernel.asm	/^f0104752:	ee                   	out    %al,(%dx)$/;"	l
f0104753	obj/kern/kernel.asm	/^f0104753:	90                   	nop$/;"	l
f0104754	obj/kern/kernel.asm	/^f0104754:	c9                   	leave  $/;"	l
f0104755	obj/kern/kernel.asm	/^f0104755:	c3                   	ret    $/;"	l
f0104756	obj/kern/kernel.asm	/^f0104756 <mc146818_read>:$/;"	l
f0104756	obj/kern/kernel.asm	/^f0104756:	55                   	push   %ebp$/;"	l
f0104757	obj/kern/kernel.asm	/^f0104757:	89 e5                	mov    %esp,%ebp$/;"	l
f0104759	obj/kern/kernel.asm	/^f0104759:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010475c	obj/kern/kernel.asm	/^f010475c:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010475f	obj/kern/kernel.asm	/^f010475f:	50                   	push   %eax$/;"	l
f0104760	obj/kern/kernel.asm	/^f0104760:	6a 70                	push   $0x70$/;"	l
f0104762	obj/kern/kernel.asm	/^f0104762:	e8 d8 ff ff ff       	call   f010473f <outb>$/;"	l
f0104767	obj/kern/kernel.asm	/^f0104767:	83 c4 08             	add    $0x8,%esp$/;"	l
f010476a	obj/kern/kernel.asm	/^f010476a:	6a 71                	push   $0x71$/;"	l
f010476c	obj/kern/kernel.asm	/^f010476c:	e8 b9 ff ff ff       	call   f010472a <inb>$/;"	l
f0104771	obj/kern/kernel.asm	/^f0104771:	83 c4 04             	add    $0x4,%esp$/;"	l
f0104774	obj/kern/kernel.asm	/^f0104774:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104777	obj/kern/kernel.asm	/^f0104777:	c9                   	leave  $/;"	l
f0104778	obj/kern/kernel.asm	/^f0104778:	c3                   	ret    $/;"	l
f0104779	obj/kern/kernel.asm	/^f0104779 <mc146818_write>:$/;"	l
f0104779	obj/kern/kernel.asm	/^f0104779:	55                   	push   %ebp$/;"	l
f010477a	obj/kern/kernel.asm	/^f010477a:	89 e5                	mov    %esp,%ebp$/;"	l
f010477c	obj/kern/kernel.asm	/^f010477c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010477f	obj/kern/kernel.asm	/^f010477f:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104782	obj/kern/kernel.asm	/^f0104782:	50                   	push   %eax$/;"	l
f0104783	obj/kern/kernel.asm	/^f0104783:	6a 70                	push   $0x70$/;"	l
f0104785	obj/kern/kernel.asm	/^f0104785:	e8 b5 ff ff ff       	call   f010473f <outb>$/;"	l
f010478a	obj/kern/kernel.asm	/^f010478a:	83 c4 08             	add    $0x8,%esp$/;"	l
f010478d	obj/kern/kernel.asm	/^f010478d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104790	obj/kern/kernel.asm	/^f0104790:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0104793	obj/kern/kernel.asm	/^f0104793:	50                   	push   %eax$/;"	l
f0104794	obj/kern/kernel.asm	/^f0104794:	6a 71                	push   $0x71$/;"	l
f0104796	obj/kern/kernel.asm	/^f0104796:	e8 a4 ff ff ff       	call   f010473f <outb>$/;"	l
f010479b	obj/kern/kernel.asm	/^f010479b:	83 c4 08             	add    $0x8,%esp$/;"	l
f010479e	obj/kern/kernel.asm	/^f010479e:	90                   	nop$/;"	l
f010479f	obj/kern/kernel.asm	/^f010479f:	c9                   	leave  $/;"	l
f01047a0	obj/kern/kernel.asm	/^f01047a0:	c3                   	ret    $/;"	l
f01047a1	obj/kern/kernel.asm	/^f01047a1 <outb>:$/;"	l
f01047a1	obj/kern/kernel.asm	/^f01047a1:	55                   	push   %ebp$/;"	l
f01047a2	obj/kern/kernel.asm	/^f01047a2:	89 e5                	mov    %esp,%ebp$/;"	l
f01047a4	obj/kern/kernel.asm	/^f01047a4:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01047a7	obj/kern/kernel.asm	/^f01047a7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01047aa	obj/kern/kernel.asm	/^f01047aa:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
f01047ad	obj/kern/kernel.asm	/^f01047ad:	0f b6 45 fc          	movzbl -0x4(%ebp),%eax$/;"	l
f01047b1	obj/kern/kernel.asm	/^f01047b1:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01047b4	obj/kern/kernel.asm	/^f01047b4:	ee                   	out    %al,(%dx)$/;"	l
f01047b5	obj/kern/kernel.asm	/^f01047b5:	90                   	nop$/;"	l
f01047b6	obj/kern/kernel.asm	/^f01047b6:	c9                   	leave  $/;"	l
f01047b7	obj/kern/kernel.asm	/^f01047b7:	c3                   	ret    $/;"	l
f01047b8	obj/kern/kernel.asm	/^f01047b8 <pic_init>:$/;"	l
f01047b8	obj/kern/kernel.asm	/^f01047b8:	55                   	push   %ebp$/;"	l
f01047b9	obj/kern/kernel.asm	/^f01047b9:	89 e5                	mov    %esp,%ebp$/;"	l
f01047bb	obj/kern/kernel.asm	/^f01047bb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01047be	obj/kern/kernel.asm	/^f01047be:	c6 05 44 02 23 f0 01 	movb   $0x1,0xf0230244$/;"	l
f01047c5	obj/kern/kernel.asm	/^f01047c5:	68 ff 00 00 00       	push   $0xff$/;"	l
f01047ca	obj/kern/kernel.asm	/^f01047ca:	6a 21                	push   $0x21$/;"	l
f01047cc	obj/kern/kernel.asm	/^f01047cc:	e8 d0 ff ff ff       	call   f01047a1 <outb>$/;"	l
f01047d1	obj/kern/kernel.asm	/^f01047d1:	83 c4 08             	add    $0x8,%esp$/;"	l
f01047d4	obj/kern/kernel.asm	/^f01047d4:	68 ff 00 00 00       	push   $0xff$/;"	l
f01047d9	obj/kern/kernel.asm	/^f01047d9:	68 a1 00 00 00       	push   $0xa1$/;"	l
f01047de	obj/kern/kernel.asm	/^f01047de:	e8 be ff ff ff       	call   f01047a1 <outb>$/;"	l
f01047e3	obj/kern/kernel.asm	/^f01047e3:	83 c4 08             	add    $0x8,%esp$/;"	l
f01047e6	obj/kern/kernel.asm	/^f01047e6:	6a 11                	push   $0x11$/;"	l
f01047e8	obj/kern/kernel.asm	/^f01047e8:	6a 20                	push   $0x20$/;"	l
f01047ea	obj/kern/kernel.asm	/^f01047ea:	e8 b2 ff ff ff       	call   f01047a1 <outb>$/;"	l
f01047ef	obj/kern/kernel.asm	/^f01047ef:	83 c4 08             	add    $0x8,%esp$/;"	l
f01047f2	obj/kern/kernel.asm	/^f01047f2:	6a 20                	push   $0x20$/;"	l
f01047f4	obj/kern/kernel.asm	/^f01047f4:	6a 21                	push   $0x21$/;"	l
f01047f6	obj/kern/kernel.asm	/^f01047f6:	e8 a6 ff ff ff       	call   f01047a1 <outb>$/;"	l
f01047fb	obj/kern/kernel.asm	/^f01047fb:	83 c4 08             	add    $0x8,%esp$/;"	l
f01047fe	obj/kern/kernel.asm	/^f01047fe:	6a 04                	push   $0x4$/;"	l
f0104800	obj/kern/kernel.asm	/^f0104800:	6a 21                	push   $0x21$/;"	l
f0104802	obj/kern/kernel.asm	/^f0104802:	e8 9a ff ff ff       	call   f01047a1 <outb>$/;"	l
f0104807	obj/kern/kernel.asm	/^f0104807:	83 c4 08             	add    $0x8,%esp$/;"	l
f010480a	obj/kern/kernel.asm	/^f010480a:	6a 03                	push   $0x3$/;"	l
f010480c	obj/kern/kernel.asm	/^f010480c:	6a 21                	push   $0x21$/;"	l
f010480e	obj/kern/kernel.asm	/^f010480e:	e8 8e ff ff ff       	call   f01047a1 <outb>$/;"	l
f0104813	obj/kern/kernel.asm	/^f0104813:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104816	obj/kern/kernel.asm	/^f0104816:	6a 11                	push   $0x11$/;"	l
f0104818	obj/kern/kernel.asm	/^f0104818:	68 a0 00 00 00       	push   $0xa0$/;"	l
f010481d	obj/kern/kernel.asm	/^f010481d:	e8 7f ff ff ff       	call   f01047a1 <outb>$/;"	l
f0104822	obj/kern/kernel.asm	/^f0104822:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104825	obj/kern/kernel.asm	/^f0104825:	6a 28                	push   $0x28$/;"	l
f0104827	obj/kern/kernel.asm	/^f0104827:	68 a1 00 00 00       	push   $0xa1$/;"	l
f010482c	obj/kern/kernel.asm	/^f010482c:	e8 70 ff ff ff       	call   f01047a1 <outb>$/;"	l
f0104831	obj/kern/kernel.asm	/^f0104831:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104834	obj/kern/kernel.asm	/^f0104834:	6a 02                	push   $0x2$/;"	l
f0104836	obj/kern/kernel.asm	/^f0104836:	68 a1 00 00 00       	push   $0xa1$/;"	l
f010483b	obj/kern/kernel.asm	/^f010483b:	e8 61 ff ff ff       	call   f01047a1 <outb>$/;"	l
f0104840	obj/kern/kernel.asm	/^f0104840:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104843	obj/kern/kernel.asm	/^f0104843:	6a 01                	push   $0x1$/;"	l
f0104845	obj/kern/kernel.asm	/^f0104845:	68 a1 00 00 00       	push   $0xa1$/;"	l
f010484a	obj/kern/kernel.asm	/^f010484a:	e8 52 ff ff ff       	call   f01047a1 <outb>$/;"	l
f010484f	obj/kern/kernel.asm	/^f010484f:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104852	obj/kern/kernel.asm	/^f0104852:	6a 68                	push   $0x68$/;"	l
f0104854	obj/kern/kernel.asm	/^f0104854:	6a 20                	push   $0x20$/;"	l
f0104856	obj/kern/kernel.asm	/^f0104856:	e8 46 ff ff ff       	call   f01047a1 <outb>$/;"	l
f010485b	obj/kern/kernel.asm	/^f010485b:	83 c4 08             	add    $0x8,%esp$/;"	l
f010485e	obj/kern/kernel.asm	/^f010485e:	6a 0a                	push   $0xa$/;"	l
f0104860	obj/kern/kernel.asm	/^f0104860:	6a 20                	push   $0x20$/;"	l
f0104862	obj/kern/kernel.asm	/^f0104862:	e8 3a ff ff ff       	call   f01047a1 <outb>$/;"	l
f0104867	obj/kern/kernel.asm	/^f0104867:	83 c4 08             	add    $0x8,%esp$/;"	l
f010486a	obj/kern/kernel.asm	/^f010486a:	6a 68                	push   $0x68$/;"	l
f010486c	obj/kern/kernel.asm	/^f010486c:	68 a0 00 00 00       	push   $0xa0$/;"	l
f0104871	obj/kern/kernel.asm	/^f0104871:	e8 2b ff ff ff       	call   f01047a1 <outb>$/;"	l
f0104876	obj/kern/kernel.asm	/^f0104876:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104879	obj/kern/kernel.asm	/^f0104879:	6a 0a                	push   $0xa$/;"	l
f010487b	obj/kern/kernel.asm	/^f010487b:	68 a0 00 00 00       	push   $0xa0$/;"	l
f0104880	obj/kern/kernel.asm	/^f0104880:	e8 1c ff ff ff       	call   f01047a1 <outb>$/;"	l
f0104885	obj/kern/kernel.asm	/^f0104885:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104888	obj/kern/kernel.asm	/^f0104888:	0f b7 05 ce 55 12 f0 	movzwl 0xf01255ce,%eax$/;"	l
f010488f	obj/kern/kernel.asm	/^f010488f:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
f0104893	obj/kern/kernel.asm	/^f0104893:	74 16                	je     f01048ab <pic_init+0xf3>$/;"	l
f0104895	obj/kern/kernel.asm	/^f0104895:	0f b7 05 ce 55 12 f0 	movzwl 0xf01255ce,%eax$/;"	l
f010489c	obj/kern/kernel.asm	/^f010489c:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010489f	obj/kern/kernel.asm	/^f010489f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01048a2	obj/kern/kernel.asm	/^f01048a2:	50                   	push   %eax$/;"	l
f01048a3	obj/kern/kernel.asm	/^f01048a3:	e8 06 00 00 00       	call   f01048ae <irq_setmask_8259A>$/;"	l
f01048a8	obj/kern/kernel.asm	/^f01048a8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01048ab	obj/kern/kernel.asm	/^f01048ab:	90                   	nop$/;"	l
f01048ac	obj/kern/kernel.asm	/^f01048ac:	c9                   	leave  $/;"	l
f01048ad	obj/kern/kernel.asm	/^f01048ad:	c3                   	ret    $/;"	l
f01048ae	obj/kern/kernel.asm	/^f01048ae <irq_setmask_8259A>:$/;"	l
f01048ae	obj/kern/kernel.asm	/^f01048ae:	55                   	push   %ebp$/;"	l
f01048af	obj/kern/kernel.asm	/^f01048af:	89 e5                	mov    %esp,%ebp$/;"	l
f01048b1	obj/kern/kernel.asm	/^f01048b1:	83 ec 28             	sub    $0x28,%esp$/;"	l
f01048b4	obj/kern/kernel.asm	/^f01048b4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01048b7	obj/kern/kernel.asm	/^f01048b7:	66 89 45 e4          	mov    %ax,-0x1c(%ebp)$/;"	l
f01048bb	obj/kern/kernel.asm	/^f01048bb:	0f b7 45 e4          	movzwl -0x1c(%ebp),%eax$/;"	l
f01048bf	obj/kern/kernel.asm	/^f01048bf:	66 a3 ce 55 12 f0    	mov    %ax,0xf01255ce$/;"	l
f01048c5	obj/kern/kernel.asm	/^f01048c5:	0f b6 05 44 02 23 f0 	movzbl 0xf0230244,%eax$/;"	l
f01048cc	obj/kern/kernel.asm	/^f01048cc:	83 f0 01             	xor    $0x1,%eax$/;"	l
f01048cf	obj/kern/kernel.asm	/^f01048cf:	84 c0                	test   %al,%al$/;"	l
f01048d1	obj/kern/kernel.asm	/^f01048d1:	0f 85 8b 00 00 00    	jne    f0104962 <irq_setmask_8259A+0xb4>$/;"	l
f01048d7	obj/kern/kernel.asm	/^f01048d7:	0f b7 45 e4          	movzwl -0x1c(%ebp),%eax$/;"	l
f01048db	obj/kern/kernel.asm	/^f01048db:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01048de	obj/kern/kernel.asm	/^f01048de:	50                   	push   %eax$/;"	l
f01048df	obj/kern/kernel.asm	/^f01048df:	6a 21                	push   $0x21$/;"	l
f01048e1	obj/kern/kernel.asm	/^f01048e1:	e8 bb fe ff ff       	call   f01047a1 <outb>$/;"	l
f01048e6	obj/kern/kernel.asm	/^f01048e6:	83 c4 08             	add    $0x8,%esp$/;"	l
f01048e9	obj/kern/kernel.asm	/^f01048e9:	0f b7 45 e4          	movzwl -0x1c(%ebp),%eax$/;"	l
f01048ed	obj/kern/kernel.asm	/^f01048ed:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f01048f1	obj/kern/kernel.asm	/^f01048f1:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01048f4	obj/kern/kernel.asm	/^f01048f4:	50                   	push   %eax$/;"	l
f01048f5	obj/kern/kernel.asm	/^f01048f5:	68 a1 00 00 00       	push   $0xa1$/;"	l
f01048fa	obj/kern/kernel.asm	/^f01048fa:	e8 a2 fe ff ff       	call   f01047a1 <outb>$/;"	l
f01048ff	obj/kern/kernel.asm	/^f01048ff:	83 c4 08             	add    $0x8,%esp$/;"	l
f0104902	obj/kern/kernel.asm	/^f0104902:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104905	obj/kern/kernel.asm	/^f0104905:	68 66 98 10 f0       	push   $0xf0109866$/;"	l
f010490a	obj/kern/kernel.asm	/^f010490a:	e8 9f 00 00 00       	call   f01049ae <cprintf>$/;"	l
f010490f	obj/kern/kernel.asm	/^f010490f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104912	obj/kern/kernel.asm	/^f0104912:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0104919	obj/kern/kernel.asm	/^f0104919:	eb 2f                	jmp    f010494a <irq_setmask_8259A+0x9c>$/;"	l
f010491b	obj/kern/kernel.asm	/^f010491b:	0f b7 45 e4          	movzwl -0x1c(%ebp),%eax$/;"	l
f010491f	obj/kern/kernel.asm	/^f010491f:	f7 d0                	not    %eax$/;"	l
f0104921	obj/kern/kernel.asm	/^f0104921:	89 c2                	mov    %eax,%edx$/;"	l
f0104923	obj/kern/kernel.asm	/^f0104923:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0104926	obj/kern/kernel.asm	/^f0104926:	89 c1                	mov    %eax,%ecx$/;"	l
f0104928	obj/kern/kernel.asm	/^f0104928:	d3 fa                	sar    %cl,%edx$/;"	d
f010492a	obj/kern/kernel.asm	/^f010492a:	89 d0                	mov    %edx,%eax$/;"	l
f010492c	obj/kern/kernel.asm	/^f010492c:	83 e0 01             	and    $0x1,%eax$/;"	l
f010492f	obj/kern/kernel.asm	/^f010492f:	85 c0                	test   %eax,%eax$/;"	l
f0104931	obj/kern/kernel.asm	/^f0104931:	74 13                	je     f0104946 <irq_setmask_8259A+0x98>$/;"	l
f0104933	obj/kern/kernel.asm	/^f0104933:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104936	obj/kern/kernel.asm	/^f0104936:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0104939	obj/kern/kernel.asm	/^f0104939:	68 7a 98 10 f0       	push   $0xf010987a$/;"	l
f010493e	obj/kern/kernel.asm	/^f010493e:	e8 6b 00 00 00       	call   f01049ae <cprintf>$/;"	l
f0104943	obj/kern/kernel.asm	/^f0104943:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104946	obj/kern/kernel.asm	/^f0104946:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f010494a	obj/kern/kernel.asm	/^f010494a:	83 7d f4 0f          	cmpl   $0xf,-0xc(%ebp)$/;"	l
f010494e	obj/kern/kernel.asm	/^f010494e:	7e cb                	jle    f010491b <irq_setmask_8259A+0x6d>$/;"	l
f0104950	obj/kern/kernel.asm	/^f0104950:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104953	obj/kern/kernel.asm	/^f0104953:	68 7e 98 10 f0       	push   $0xf010987e$/;"	l
f0104958	obj/kern/kernel.asm	/^f0104958:	e8 51 00 00 00       	call   f01049ae <cprintf>$/;"	l
f010495d	obj/kern/kernel.asm	/^f010495d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104960	obj/kern/kernel.asm	/^f0104960:	eb 01                	jmp    f0104963 <irq_setmask_8259A+0xb5>$/;"	l
f0104962	obj/kern/kernel.asm	/^f0104962:	90                   	nop$/;"	l
f0104963	obj/kern/kernel.asm	/^f0104963:	c9                   	leave  $/;"	l
f0104964	obj/kern/kernel.asm	/^f0104964:	c3                   	ret    $/;"	l
f0104965	obj/kern/kernel.asm	/^f0104965 <putch>:$/;"	l
f0104965	obj/kern/kernel.asm	/^f0104965:	55                   	push   %ebp$/;"	l
f0104966	obj/kern/kernel.asm	/^f0104966:	89 e5                	mov    %esp,%ebp$/;"	l
f0104968	obj/kern/kernel.asm	/^f0104968:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010496b	obj/kern/kernel.asm	/^f010496b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010496e	obj/kern/kernel.asm	/^f010496e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0104971	obj/kern/kernel.asm	/^f0104971:	e8 da c1 ff ff       	call   f0100b50 <cputchar>$/;"	l
f0104976	obj/kern/kernel.asm	/^f0104976:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104979	obj/kern/kernel.asm	/^f0104979:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010497c	obj/kern/kernel.asm	/^f010497c:	83 c0 04             	add    $0x4,%eax$/;"	l
f010497f	obj/kern/kernel.asm	/^f010497f:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
f0104982	obj/kern/kernel.asm	/^f0104982:	90                   	nop$/;"	l
f0104983	obj/kern/kernel.asm	/^f0104983:	c9                   	leave  $/;"	l
f0104984	obj/kern/kernel.asm	/^f0104984:	c3                   	ret    $/;"	l
f0104985	obj/kern/kernel.asm	/^f0104985 <vcprintf>:$/;"	l
f0104985	obj/kern/kernel.asm	/^f0104985:	55                   	push   %ebp$/;"	l
f0104986	obj/kern/kernel.asm	/^f0104986:	89 e5                	mov    %esp,%ebp$/;"	l
f0104988	obj/kern/kernel.asm	/^f0104988:	83 ec 18             	sub    $0x18,%esp$/;"	l
f010498b	obj/kern/kernel.asm	/^f010498b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0104992	obj/kern/kernel.asm	/^f0104992:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0104995	obj/kern/kernel.asm	/^f0104995:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0104998	obj/kern/kernel.asm	/^f0104998:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
f010499b	obj/kern/kernel.asm	/^f010499b:	50                   	push   %eax$/;"	l
f010499c	obj/kern/kernel.asm	/^f010499c:	68 65 49 10 f0       	push   $0xf0104965$/;"	l
f01049a1	obj/kern/kernel.asm	/^f01049a1:	e8 2e 21 00 00       	call   f0106ad4 <vprintfmt>$/;"	l
f01049a6	obj/kern/kernel.asm	/^f01049a6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01049a9	obj/kern/kernel.asm	/^f01049a9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01049ac	obj/kern/kernel.asm	/^f01049ac:	c9                   	leave  $/;"	l
f01049ad	obj/kern/kernel.asm	/^f01049ad:	c3                   	ret    $/;"	l
f01049ae	obj/kern/kernel.asm	/^f01049ae <cprintf>:$/;"	l
f01049ae	obj/kern/kernel.asm	/^f01049ae:	55                   	push   %ebp$/;"	l
f01049af	obj/kern/kernel.asm	/^f01049af:	89 e5                	mov    %esp,%ebp$/;"	l
f01049b1	obj/kern/kernel.asm	/^f01049b1:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01049b4	obj/kern/kernel.asm	/^f01049b4:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
f01049b7	obj/kern/kernel.asm	/^f01049b7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01049ba	obj/kern/kernel.asm	/^f01049ba:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01049bd	obj/kern/kernel.asm	/^f01049bd:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01049c0	obj/kern/kernel.asm	/^f01049c0:	50                   	push   %eax$/;"	l
f01049c1	obj/kern/kernel.asm	/^f01049c1:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01049c4	obj/kern/kernel.asm	/^f01049c4:	e8 bc ff ff ff       	call   f0104985 <vcprintf>$/;"	l
f01049c9	obj/kern/kernel.asm	/^f01049c9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01049cc	obj/kern/kernel.asm	/^f01049cc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01049cf	obj/kern/kernel.asm	/^f01049cf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01049d2	obj/kern/kernel.asm	/^f01049d2:	c9                   	leave  $/;"	l
f01049d3	obj/kern/kernel.asm	/^f01049d3:	c3                   	ret    $/;"	l
f01049d4	obj/kern/kernel.asm	/^f01049d4 <lidt>:$/;"	l
f01049d4	obj/kern/kernel.asm	/^f01049d4:	55                   	push   %ebp$/;"	l
f01049d5	obj/kern/kernel.asm	/^f01049d5:	89 e5                	mov    %esp,%ebp$/;"	l
f01049d7	obj/kern/kernel.asm	/^f01049d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01049da	obj/kern/kernel.asm	/^f01049da:	0f 01 18             	lidtl  (%eax)$/;"	l
f01049dd	obj/kern/kernel.asm	/^f01049dd:	90                   	nop$/;"	l
f01049de	obj/kern/kernel.asm	/^f01049de:	5d                   	pop    %ebp$/;"	l
f01049df	obj/kern/kernel.asm	/^f01049df:	c3                   	ret    $/;"	l
f01049e0	obj/kern/kernel.asm	/^f01049e0 <ltr>:$/;"	l
f01049e0	obj/kern/kernel.asm	/^f01049e0:	55                   	push   %ebp$/;"	l
f01049e1	obj/kern/kernel.asm	/^f01049e1:	89 e5                	mov    %esp,%ebp$/;"	l
f01049e3	obj/kern/kernel.asm	/^f01049e3:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01049e6	obj/kern/kernel.asm	/^f01049e6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01049e9	obj/kern/kernel.asm	/^f01049e9:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
f01049ed	obj/kern/kernel.asm	/^f01049ed:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
f01049f1	obj/kern/kernel.asm	/^f01049f1:	0f 00 d8             	ltr    %ax$/;"	l
f01049f4	obj/kern/kernel.asm	/^f01049f4:	90                   	nop$/;"	l
f01049f5	obj/kern/kernel.asm	/^f01049f5:	c9                   	leave  $/;"	l
f01049f6	obj/kern/kernel.asm	/^f01049f6:	c3                   	ret    $/;"	l
f01049f7	obj/kern/kernel.asm	/^f01049f7 <rcr2>:$/;"	l
f01049f7	obj/kern/kernel.asm	/^f01049f7:	55                   	push   %ebp$/;"	l
f01049f8	obj/kern/kernel.asm	/^f01049f8:	89 e5                	mov    %esp,%ebp$/;"	l
f01049fa	obj/kern/kernel.asm	/^f01049fa:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01049fd	obj/kern/kernel.asm	/^f01049fd:	0f 20 d0             	mov    %cr2,%eax$/;"	l
f0104a00	obj/kern/kernel.asm	/^f0104a00:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f0104a03	obj/kern/kernel.asm	/^f0104a03:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0104a06	obj/kern/kernel.asm	/^f0104a06:	c9                   	leave  $/;"	l
f0104a07	obj/kern/kernel.asm	/^f0104a07:	c3                   	ret    $/;"	l
f0104a08	obj/kern/kernel.asm	/^f0104a08 <read_eflags>:$/;"	l
f0104a08	obj/kern/kernel.asm	/^f0104a08:	55                   	push   %ebp$/;"	l
f0104a09	obj/kern/kernel.asm	/^f0104a09:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a0b	obj/kern/kernel.asm	/^f0104a0b:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0104a0e	obj/kern/kernel.asm	/^f0104a0e:	9c                   	pushf  $/;"	l
f0104a0f	obj/kern/kernel.asm	/^f0104a0f:	58                   	pop    %eax$/;"	l
f0104a10	obj/kern/kernel.asm	/^f0104a10:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f0104a13	obj/kern/kernel.asm	/^f0104a13:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0104a16	obj/kern/kernel.asm	/^f0104a16:	c9                   	leave  $/;"	l
f0104a17	obj/kern/kernel.asm	/^f0104a17:	c3                   	ret    $/;"	l
f0104a18	obj/kern/kernel.asm	/^f0104a18 <xchg>:$/;"	l
f0104a18	obj/kern/kernel.asm	/^f0104a18:	55                   	push   %ebp$/;"	l
f0104a19	obj/kern/kernel.asm	/^f0104a19:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a1b	obj/kern/kernel.asm	/^f0104a1b:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0104a1e	obj/kern/kernel.asm	/^f0104a1e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0104a21	obj/kern/kernel.asm	/^f0104a21:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0104a24	obj/kern/kernel.asm	/^f0104a24:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0104a27	obj/kern/kernel.asm	/^f0104a27:	f0 87 02             	lock xchg %eax,(%edx)$/;"	l
f0104a2a	obj/kern/kernel.asm	/^f0104a2a:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f0104a2d	obj/kern/kernel.asm	/^f0104a2d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0104a30	obj/kern/kernel.asm	/^f0104a30:	c9                   	leave  $/;"	l
f0104a31	obj/kern/kernel.asm	/^f0104a31:	c3                   	ret    $/;"	l
f0104a32	obj/kern/kernel.asm	/^f0104a32 <lock_kernel>:$/;"	l
f0104a32	obj/kern/kernel.asm	/^f0104a32:	55                   	push   %ebp$/;"	l
f0104a33	obj/kern/kernel.asm	/^f0104a33:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a35	obj/kern/kernel.asm	/^f0104a35:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104a38	obj/kern/kernel.asm	/^f0104a38:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0104a3b	obj/kern/kernel.asm	/^f0104a3b:	68 e0 55 12 f0       	push   $0xf01255e0$/;"	l
f0104a40	obj/kern/kernel.asm	/^f0104a40:	e8 96 35 00 00       	call   f0107fdb <spin_lock>$/;"	l
f0104a45	obj/kern/kernel.asm	/^f0104a45:	83 c4 10             	add    $0x10,%esp$/;"	l
f0104a48	obj/kern/kernel.asm	/^f0104a48:	90                   	nop$/;"	l
f0104a49	obj/kern/kernel.asm	/^f0104a49:	c9                   	leave  $/;"	l
f0104a4a	obj/kern/kernel.asm	/^f0104a4a:	c3                   	ret    $/;"	l
f0104a4b	obj/kern/kernel.asm	/^f0104a4b <trapname>:$/;"	l
f0104a4b	obj/kern/kernel.asm	/^f0104a4b:	55                   	push   %ebp$/;"	l
f0104a4c	obj/kern/kernel.asm	/^f0104a4c:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a4e	obj/kern/kernel.asm	/^f0104a4e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104a51	obj/kern/kernel.asm	/^f0104a51:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0104a54	obj/kern/kernel.asm	/^f0104a54:	77 0c                	ja     f0104a62 <trapname+0x17>$/;"	l
f0104a56	obj/kern/kernel.asm	/^f0104a56:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0104a59	obj/kern/kernel.asm	/^f0104a59:	8b 04 85 20 9c 10 f0 	mov    -0xfef63e0(,%eax,4),%eax$/;"	l
f0104a60	obj/kern/kernel.asm	/^f0104a60:	eb 25                	jmp    f0104a87 <trapname+0x3c>$/;"	l
f0104a62	obj/kern/kernel.asm	/^f0104a62:	83 7d 08 30          	cmpl   $0x30,0x8(%ebp)$/;"	l
f0104a66	obj/kern/kernel.asm	/^f0104a66:	75 07                	jne    f0104a6f <trapname+0x24>$/;"	l
f0104a68	obj/kern/kernel.asm	/^f0104a68:	b8 80 98 10 f0       	mov    $0xf0109880,%eax$/;"	l
f0104a6d	obj/kern/kernel.asm	/^f0104a6d:	eb 18                	jmp    f0104a87 <trapname+0x3c>$/;"	l
f0104a6f	obj/kern/kernel.asm	/^f0104a6f:	83 7d 08 1f          	cmpl   $0x1f,0x8(%ebp)$/;"	l
f0104a73	obj/kern/kernel.asm	/^f0104a73:	7e 0d                	jle    f0104a82 <trapname+0x37>$/;"	l
f0104a75	obj/kern/kernel.asm	/^f0104a75:	83 7d 08 2f          	cmpl   $0x2f,0x8(%ebp)$/;"	l
f0104a79	obj/kern/kernel.asm	/^f0104a79:	7f 07                	jg     f0104a82 <trapname+0x37>$/;"	l
f0104a7b	obj/kern/kernel.asm	/^f0104a7b:	b8 8c 98 10 f0       	mov    $0xf010988c,%eax$/;"	l
f0104a80	obj/kern/kernel.asm	/^f0104a80:	eb 05                	jmp    f0104a87 <trapname+0x3c>$/;"	l
f0104a82	obj/kern/kernel.asm	/^f0104a82:	b8 9f 98 10 f0       	mov    $0xf010989f,%eax$/;"	l
f0104a87	obj/kern/kernel.asm	/^f0104a87:	5d                   	pop    %ebp$/;"	l
f0104a88	obj/kern/kernel.asm	/^f0104a88:	c3                   	ret    $/;"	l
f0104a89	obj/kern/kernel.asm	/^f0104a89 <trap_init>:$/;"	l
f0104a89	obj/kern/kernel.asm	/^f0104a89:	55                   	push   %ebp$/;"	l
f0104a8a	obj/kern/kernel.asm	/^f0104a8a:	89 e5                	mov    %esp,%ebp$/;"	l
f0104a8c	obj/kern/kernel.asm	/^f0104a8c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0104a8f	obj/kern/kernel.asm	/^f0104a8f:	b8 58 5b 10 f0       	mov    $0xf0105b58,%eax$/;"	l
f0104a94	obj/kern/kernel.asm	/^f0104a94:	66 a3 60 02 23 f0    	mov    %ax,0xf0230260$/;"	l
f0104a9a	obj/kern/kernel.asm	/^f0104a9a:	66 c7 05 62 02 23 f0 	movw   $0x8,0xf0230262$/;"	l
f0104aa1	obj/kern/kernel.asm	/^f0104aa1:	08 00 $/;"	l
f0104aa3	obj/kern/kernel.asm	/^f0104aa3:	0f b6 05 64 02 23 f0 	movzbl 0xf0230264,%eax$/;"	l
f0104aaa	obj/kern/kernel.asm	/^f0104aaa:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0104aad	obj/kern/kernel.asm	/^f0104aad:	a2 64 02 23 f0       	mov    %al,0xf0230264$/;"	l
f0104ab2	obj/kern/kernel.asm	/^f0104ab2:	0f b6 05 64 02 23 f0 	movzbl 0xf0230264,%eax$/;"	l
f0104ab9	obj/kern/kernel.asm	/^f0104ab9:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0104abc	obj/kern/kernel.asm	/^f0104abc:	a2 64 02 23 f0       	mov    %al,0xf0230264$/;"	l
f0104ac1	obj/kern/kernel.asm	/^f0104ac1:	0f b6 05 65 02 23 f0 	movzbl 0xf0230265,%eax$/;"	l
f0104ac8	obj/kern/kernel.asm	/^f0104ac8:	83 c8 0f             	or     $0xf,%eax$/;"	l
f0104acb	obj/kern/kernel.asm	/^f0104acb:	a2 65 02 23 f0       	mov    %al,0xf0230265$/;"	l
f0104ad0	obj/kern/kernel.asm	/^f0104ad0:	0f b6 05 65 02 23 f0 	movzbl 0xf0230265,%eax$/;"	l
f0104ad7	obj/kern/kernel.asm	/^f0104ad7:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0104ada	obj/kern/kernel.asm	/^f0104ada:	a2 65 02 23 f0       	mov    %al,0xf0230265$/;"	l
f0104adf	obj/kern/kernel.asm	/^f0104adf:	0f b6 05 65 02 23 f0 	movzbl 0xf0230265,%eax$/;"	l
f0104ae6	obj/kern/kernel.asm	/^f0104ae6:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0104ae9	obj/kern/kernel.asm	/^f0104ae9:	a2 65 02 23 f0       	mov    %al,0xf0230265$/;"	l
f0104aee	obj/kern/kernel.asm	/^f0104aee:	0f b6 05 65 02 23 f0 	movzbl 0xf0230265,%eax$/;"	l
f0104af5	obj/kern/kernel.asm	/^f0104af5:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0104af8	obj/kern/kernel.asm	/^f0104af8:	a2 65 02 23 f0       	mov    %al,0xf0230265$/;"	l
f0104afd	obj/kern/kernel.asm	/^f0104afd:	b8 58 5b 10 f0       	mov    $0xf0105b58,%eax$/;"	l
f0104b02	obj/kern/kernel.asm	/^f0104b02:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104b05	obj/kern/kernel.asm	/^f0104b05:	66 a3 66 02 23 f0    	mov    %ax,0xf0230266$/;"	l
f0104b0b	obj/kern/kernel.asm	/^f0104b0b:	b8 5e 5b 10 f0       	mov    $0xf0105b5e,%eax$/;"	l
f0104b10	obj/kern/kernel.asm	/^f0104b10:	66 a3 68 02 23 f0    	mov    %ax,0xf0230268$/;"	l
f0104b16	obj/kern/kernel.asm	/^f0104b16:	66 c7 05 6a 02 23 f0 	movw   $0x8,0xf023026a$/;"	l
f0104b1d	obj/kern/kernel.asm	/^f0104b1d:	08 00 $/;"	l
f0104b1f	obj/kern/kernel.asm	/^f0104b1f:	0f b6 05 6c 02 23 f0 	movzbl 0xf023026c,%eax$/;"	l
f0104b26	obj/kern/kernel.asm	/^f0104b26:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0104b29	obj/kern/kernel.asm	/^f0104b29:	a2 6c 02 23 f0       	mov    %al,0xf023026c$/;"	l
f0104b2e	obj/kern/kernel.asm	/^f0104b2e:	0f b6 05 6c 02 23 f0 	movzbl 0xf023026c,%eax$/;"	l
f0104b35	obj/kern/kernel.asm	/^f0104b35:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0104b38	obj/kern/kernel.asm	/^f0104b38:	a2 6c 02 23 f0       	mov    %al,0xf023026c$/;"	l
f0104b3d	obj/kern/kernel.asm	/^f0104b3d:	0f b6 05 6d 02 23 f0 	movzbl 0xf023026d,%eax$/;"	l
f0104b44	obj/kern/kernel.asm	/^f0104b44:	83 c8 0f             	or     $0xf,%eax$/;"	l
f0104b47	obj/kern/kernel.asm	/^f0104b47:	a2 6d 02 23 f0       	mov    %al,0xf023026d$/;"	l
f0104b4c	obj/kern/kernel.asm	/^f0104b4c:	0f b6 05 6d 02 23 f0 	movzbl 0xf023026d,%eax$/;"	l
f0104b53	obj/kern/kernel.asm	/^f0104b53:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0104b56	obj/kern/kernel.asm	/^f0104b56:	a2 6d 02 23 f0       	mov    %al,0xf023026d$/;"	l
f0104b5b	obj/kern/kernel.asm	/^f0104b5b:	0f b6 05 6d 02 23 f0 	movzbl 0xf023026d,%eax$/;"	l
f0104b62	obj/kern/kernel.asm	/^f0104b62:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0104b65	obj/kern/kernel.asm	/^f0104b65:	a2 6d 02 23 f0       	mov    %al,0xf023026d$/;"	l
f0104b6a	obj/kern/kernel.asm	/^f0104b6a:	0f b6 05 6d 02 23 f0 	movzbl 0xf023026d,%eax$/;"	l
f0104b71	obj/kern/kernel.asm	/^f0104b71:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0104b74	obj/kern/kernel.asm	/^f0104b74:	a2 6d 02 23 f0       	mov    %al,0xf023026d$/;"	l
f0104b79	obj/kern/kernel.asm	/^f0104b79:	b8 5e 5b 10 f0       	mov    $0xf0105b5e,%eax$/;"	l
f0104b7e	obj/kern/kernel.asm	/^f0104b7e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104b81	obj/kern/kernel.asm	/^f0104b81:	66 a3 6e 02 23 f0    	mov    %ax,0xf023026e$/;"	l
f0104b87	obj/kern/kernel.asm	/^f0104b87:	b8 64 5b 10 f0       	mov    $0xf0105b64,%eax$/;"	l
f0104b8c	obj/kern/kernel.asm	/^f0104b8c:	66 a3 70 02 23 f0    	mov    %ax,0xf0230270$/;"	l
f0104b92	obj/kern/kernel.asm	/^f0104b92:	66 c7 05 72 02 23 f0 	movw   $0x8,0xf0230272$/;"	l
f0104b99	obj/kern/kernel.asm	/^f0104b99:	08 00 $/;"	l
f0104b9b	obj/kern/kernel.asm	/^f0104b9b:	0f b6 05 74 02 23 f0 	movzbl 0xf0230274,%eax$/;"	l
f0104ba2	obj/kern/kernel.asm	/^f0104ba2:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0104ba5	obj/kern/kernel.asm	/^f0104ba5:	a2 74 02 23 f0       	mov    %al,0xf0230274$/;"	l
f0104baa	obj/kern/kernel.asm	/^f0104baa:	0f b6 05 74 02 23 f0 	movzbl 0xf0230274,%eax$/;"	l
f0104bb1	obj/kern/kernel.asm	/^f0104bb1:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0104bb4	obj/kern/kernel.asm	/^f0104bb4:	a2 74 02 23 f0       	mov    %al,0xf0230274$/;"	l
f0104bb9	obj/kern/kernel.asm	/^f0104bb9:	0f b6 05 75 02 23 f0 	movzbl 0xf0230275,%eax$/;"	l
f0104bc0	obj/kern/kernel.asm	/^f0104bc0:	83 c8 0f             	or     $0xf,%eax$/;"	l
f0104bc3	obj/kern/kernel.asm	/^f0104bc3:	a2 75 02 23 f0       	mov    %al,0xf0230275$/;"	l
f0104bc8	obj/kern/kernel.asm	/^f0104bc8:	0f b6 05 75 02 23 f0 	movzbl 0xf0230275,%eax$/;"	l
f0104bcf	obj/kern/kernel.asm	/^f0104bcf:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0104bd2	obj/kern/kernel.asm	/^f0104bd2:	a2 75 02 23 f0       	mov    %al,0xf0230275$/;"	l
f0104bd7	obj/kern/kernel.asm	/^f0104bd7:	0f b6 05 75 02 23 f0 	movzbl 0xf0230275,%eax$/;"	l
f0104bde	obj/kern/kernel.asm	/^f0104bde:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0104be1	obj/kern/kernel.asm	/^f0104be1:	a2 75 02 23 f0       	mov    %al,0xf0230275$/;"	l
f0104be6	obj/kern/kernel.asm	/^f0104be6:	0f b6 05 75 02 23 f0 	movzbl 0xf0230275,%eax$/;"	l
f0104bed	obj/kern/kernel.asm	/^f0104bed:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0104bf0	obj/kern/kernel.asm	/^f0104bf0:	a2 75 02 23 f0       	mov    %al,0xf0230275$/;"	l
f0104bf5	obj/kern/kernel.asm	/^f0104bf5:	b8 64 5b 10 f0       	mov    $0xf0105b64,%eax$/;"	l
f0104bfa	obj/kern/kernel.asm	/^f0104bfa:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104bfd	obj/kern/kernel.asm	/^f0104bfd:	66 a3 76 02 23 f0    	mov    %ax,0xf0230276$/;"	l
f0104c03	obj/kern/kernel.asm	/^f0104c03:	b8 6a 5b 10 f0       	mov    $0xf0105b6a,%eax$/;"	l
f0104c08	obj/kern/kernel.asm	/^f0104c08:	66 a3 78 02 23 f0    	mov    %ax,0xf0230278$/;"	l
f0104c0e	obj/kern/kernel.asm	/^f0104c0e:	66 c7 05 7a 02 23 f0 	movw   $0x8,0xf023027a$/;"	l
f0104c15	obj/kern/kernel.asm	/^f0104c15:	08 00 $/;"	l
f0104c17	obj/kern/kernel.asm	/^f0104c17:	0f b6 05 7c 02 23 f0 	movzbl 0xf023027c,%eax$/;"	l
f0104c1e	obj/kern/kernel.asm	/^f0104c1e:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0104c21	obj/kern/kernel.asm	/^f0104c21:	a2 7c 02 23 f0       	mov    %al,0xf023027c$/;"	l
f0104c26	obj/kern/kernel.asm	/^f0104c26:	0f b6 05 7c 02 23 f0 	movzbl 0xf023027c,%eax$/;"	l
f0104c2d	obj/kern/kernel.asm	/^f0104c2d:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0104c30	obj/kern/kernel.asm	/^f0104c30:	a2 7c 02 23 f0       	mov    %al,0xf023027c$/;"	l
f0104c35	obj/kern/kernel.asm	/^f0104c35:	0f b6 05 7d 02 23 f0 	movzbl 0xf023027d,%eax$/;"	l
f0104c3c	obj/kern/kernel.asm	/^f0104c3c:	83 c8 0f             	or     $0xf,%eax$/;"	l
f0104c3f	obj/kern/kernel.asm	/^f0104c3f:	a2 7d 02 23 f0       	mov    %al,0xf023027d$/;"	l
f0104c44	obj/kern/kernel.asm	/^f0104c44:	0f b6 05 7d 02 23 f0 	movzbl 0xf023027d,%eax$/;"	l
f0104c4b	obj/kern/kernel.asm	/^f0104c4b:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0104c4e	obj/kern/kernel.asm	/^f0104c4e:	a2 7d 02 23 f0       	mov    %al,0xf023027d$/;"	l
f0104c53	obj/kern/kernel.asm	/^f0104c53:	0f b6 05 7d 02 23 f0 	movzbl 0xf023027d,%eax$/;"	l
f0104c5a	obj/kern/kernel.asm	/^f0104c5a:	83 c8 60             	or     $0x60,%eax$/;"	l
f0104c5d	obj/kern/kernel.asm	/^f0104c5d:	a2 7d 02 23 f0       	mov    %al,0xf023027d$/;"	l
f0104c62	obj/kern/kernel.asm	/^f0104c62:	0f b6 05 7d 02 23 f0 	movzbl 0xf023027d,%eax$/;"	l
f0104c69	obj/kern/kernel.asm	/^f0104c69:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0104c6c	obj/kern/kernel.asm	/^f0104c6c:	a2 7d 02 23 f0       	mov    %al,0xf023027d$/;"	l
f0104c71	obj/kern/kernel.asm	/^f0104c71:	b8 6a 5b 10 f0       	mov    $0xf0105b6a,%eax$/;"	l
f0104c76	obj/kern/kernel.asm	/^f0104c76:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104c79	obj/kern/kernel.asm	/^f0104c79:	66 a3 7e 02 23 f0    	mov    %ax,0xf023027e$/;"	l
f0104c7f	obj/kern/kernel.asm	/^f0104c7f:	b8 70 5b 10 f0       	mov    $0xf0105b70,%eax$/;"	l
f0104c84	obj/kern/kernel.asm	/^f0104c84:	66 a3 80 02 23 f0    	mov    %ax,0xf0230280$/;"	l
f0104c8a	obj/kern/kernel.asm	/^f0104c8a:	66 c7 05 82 02 23 f0 	movw   $0x8,0xf0230282$/;"	l
f0104c91	obj/kern/kernel.asm	/^f0104c91:	08 00 $/;"	l
f0104c93	obj/kern/kernel.asm	/^f0104c93:	0f b6 05 84 02 23 f0 	movzbl 0xf0230284,%eax$/;"	l
f0104c9a	obj/kern/kernel.asm	/^f0104c9a:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0104c9d	obj/kern/kernel.asm	/^f0104c9d:	a2 84 02 23 f0       	mov    %al,0xf0230284$/;"	l
f0104ca2	obj/kern/kernel.asm	/^f0104ca2:	0f b6 05 84 02 23 f0 	movzbl 0xf0230284,%eax$/;"	l
f0104ca9	obj/kern/kernel.asm	/^f0104ca9:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0104cac	obj/kern/kernel.asm	/^f0104cac:	a2 84 02 23 f0       	mov    %al,0xf0230284$/;"	l
f0104cb1	obj/kern/kernel.asm	/^f0104cb1:	0f b6 05 85 02 23 f0 	movzbl 0xf0230285,%eax$/;"	l
f0104cb8	obj/kern/kernel.asm	/^f0104cb8:	83 c8 0f             	or     $0xf,%eax$/;"	l
f0104cbb	obj/kern/kernel.asm	/^f0104cbb:	a2 85 02 23 f0       	mov    %al,0xf0230285$/;"	l
f0104cc0	obj/kern/kernel.asm	/^f0104cc0:	0f b6 05 85 02 23 f0 	movzbl 0xf0230285,%eax$/;"	l
f0104cc7	obj/kern/kernel.asm	/^f0104cc7:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0104cca	obj/kern/kernel.asm	/^f0104cca:	a2 85 02 23 f0       	mov    %al,0xf0230285$/;"	l
f0104ccf	obj/kern/kernel.asm	/^f0104ccf:	0f b6 05 85 02 23 f0 	movzbl 0xf0230285,%eax$/;"	l
f0104cd6	obj/kern/kernel.asm	/^f0104cd6:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0104cd9	obj/kern/kernel.asm	/^f0104cd9:	a2 85 02 23 f0       	mov    %al,0xf0230285$/;"	l
f0104cde	obj/kern/kernel.asm	/^f0104cde:	0f b6 05 85 02 23 f0 	movzbl 0xf0230285,%eax$/;"	l
f0104ce5	obj/kern/kernel.asm	/^f0104ce5:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0104ce8	obj/kern/kernel.asm	/^f0104ce8:	a2 85 02 23 f0       	mov    %al,0xf0230285$/;"	l
f0104ced	obj/kern/kernel.asm	/^f0104ced:	b8 70 5b 10 f0       	mov    $0xf0105b70,%eax$/;"	l
f0104cf2	obj/kern/kernel.asm	/^f0104cf2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104cf5	obj/kern/kernel.asm	/^f0104cf5:	66 a3 86 02 23 f0    	mov    %ax,0xf0230286$/;"	l
f0104cfb	obj/kern/kernel.asm	/^f0104cfb:	b8 76 5b 10 f0       	mov    $0xf0105b76,%eax$/;"	l
f0104d00	obj/kern/kernel.asm	/^f0104d00:	66 a3 88 02 23 f0    	mov    %ax,0xf0230288$/;"	l
f0104d06	obj/kern/kernel.asm	/^f0104d06:	66 c7 05 8a 02 23 f0 	movw   $0x8,0xf023028a$/;"	l
f0104d0d	obj/kern/kernel.asm	/^f0104d0d:	08 00 $/;"	l
f0104d0f	obj/kern/kernel.asm	/^f0104d0f:	0f b6 05 8c 02 23 f0 	movzbl 0xf023028c,%eax$/;"	l
f0104d16	obj/kern/kernel.asm	/^f0104d16:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0104d19	obj/kern/kernel.asm	/^f0104d19:	a2 8c 02 23 f0       	mov    %al,0xf023028c$/;"	l
f0104d1e	obj/kern/kernel.asm	/^f0104d1e:	0f b6 05 8c 02 23 f0 	movzbl 0xf023028c,%eax$/;"	l
f0104d25	obj/kern/kernel.asm	/^f0104d25:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0104d28	obj/kern/kernel.asm	/^f0104d28:	a2 8c 02 23 f0       	mov    %al,0xf023028c$/;"	l
f0104d2d	obj/kern/kernel.asm	/^f0104d2d:	0f b6 05 8d 02 23 f0 	movzbl 0xf023028d,%eax$/;"	l
f0104d34	obj/kern/kernel.asm	/^f0104d34:	83 c8 0f             	or     $0xf,%eax$/;"	l
f0104d37	obj/kern/kernel.asm	/^f0104d37:	a2 8d 02 23 f0       	mov    %al,0xf023028d$/;"	l
f0104d3c	obj/kern/kernel.asm	/^f0104d3c:	0f b6 05 8d 02 23 f0 	movzbl 0xf023028d,%eax$/;"	l
f0104d43	obj/kern/kernel.asm	/^f0104d43:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0104d46	obj/kern/kernel.asm	/^f0104d46:	a2 8d 02 23 f0       	mov    %al,0xf023028d$/;"	l
f0104d4b	obj/kern/kernel.asm	/^f0104d4b:	0f b6 05 8d 02 23 f0 	movzbl 0xf023028d,%eax$/;"	l
f0104d52	obj/kern/kernel.asm	/^f0104d52:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0104d55	obj/kern/kernel.asm	/^f0104d55:	a2 8d 02 23 f0       	mov    %al,0xf023028d$/;"	l
f0104d5a	obj/kern/kernel.asm	/^f0104d5a:	0f b6 05 8d 02 23 f0 	movzbl 0xf023028d,%eax$/;"	l
f0104d61	obj/kern/kernel.asm	/^f0104d61:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0104d64	obj/kern/kernel.asm	/^f0104d64:	a2 8d 02 23 f0       	mov    %al,0xf023028d$/;"	l
f0104d69	obj/kern/kernel.asm	/^f0104d69:	b8 76 5b 10 f0       	mov    $0xf0105b76,%eax$/;"	l
f0104d6e	obj/kern/kernel.asm	/^f0104d6e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104d71	obj/kern/kernel.asm	/^f0104d71:	66 a3 8e 02 23 f0    	mov    %ax,0xf023028e$/;"	l
f0104d77	obj/kern/kernel.asm	/^f0104d77:	b8 7c 5b 10 f0       	mov    $0xf0105b7c,%eax$/;"	l
f0104d7c	obj/kern/kernel.asm	/^f0104d7c:	66 a3 90 02 23 f0    	mov    %ax,0xf0230290$/;"	l
f0104d82	obj/kern/kernel.asm	/^f0104d82:	66 c7 05 92 02 23 f0 	movw   $0x8,0xf0230292$/;"	l
f0104d89	obj/kern/kernel.asm	/^f0104d89:	08 00 $/;"	l
f0104d8b	obj/kern/kernel.asm	/^f0104d8b:	0f b6 05 94 02 23 f0 	movzbl 0xf0230294,%eax$/;"	l
f0104d92	obj/kern/kernel.asm	/^f0104d92:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0104d95	obj/kern/kernel.asm	/^f0104d95:	a2 94 02 23 f0       	mov    %al,0xf0230294$/;"	l
f0104d9a	obj/kern/kernel.asm	/^f0104d9a:	0f b6 05 94 02 23 f0 	movzbl 0xf0230294,%eax$/;"	l
f0104da1	obj/kern/kernel.asm	/^f0104da1:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0104da4	obj/kern/kernel.asm	/^f0104da4:	a2 94 02 23 f0       	mov    %al,0xf0230294$/;"	l
f0104da9	obj/kern/kernel.asm	/^f0104da9:	0f b6 05 95 02 23 f0 	movzbl 0xf0230295,%eax$/;"	l
f0104db0	obj/kern/kernel.asm	/^f0104db0:	83 c8 0f             	or     $0xf,%eax$/;"	l
f0104db3	obj/kern/kernel.asm	/^f0104db3:	a2 95 02 23 f0       	mov    %al,0xf0230295$/;"	l
f0104db8	obj/kern/kernel.asm	/^f0104db8:	0f b6 05 95 02 23 f0 	movzbl 0xf0230295,%eax$/;"	l
f0104dbf	obj/kern/kernel.asm	/^f0104dbf:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0104dc2	obj/kern/kernel.asm	/^f0104dc2:	a2 95 02 23 f0       	mov    %al,0xf0230295$/;"	l
f0104dc7	obj/kern/kernel.asm	/^f0104dc7:	0f b6 05 95 02 23 f0 	movzbl 0xf0230295,%eax$/;"	l
f0104dce	obj/kern/kernel.asm	/^f0104dce:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0104dd1	obj/kern/kernel.asm	/^f0104dd1:	a2 95 02 23 f0       	mov    %al,0xf0230295$/;"	l
f0104dd6	obj/kern/kernel.asm	/^f0104dd6:	0f b6 05 95 02 23 f0 	movzbl 0xf0230295,%eax$/;"	l
f0104ddd	obj/kern/kernel.asm	/^f0104ddd:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0104de0	obj/kern/kernel.asm	/^f0104de0:	a2 95 02 23 f0       	mov    %al,0xf0230295$/;"	l
f0104de5	obj/kern/kernel.asm	/^f0104de5:	b8 7c 5b 10 f0       	mov    $0xf0105b7c,%eax$/;"	l
f0104dea	obj/kern/kernel.asm	/^f0104dea:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104ded	obj/kern/kernel.asm	/^f0104ded:	66 a3 96 02 23 f0    	mov    %ax,0xf0230296$/;"	l
f0104df3	obj/kern/kernel.asm	/^f0104df3:	b8 82 5b 10 f0       	mov    $0xf0105b82,%eax$/;"	l
f0104df8	obj/kern/kernel.asm	/^f0104df8:	66 a3 98 02 23 f0    	mov    %ax,0xf0230298$/;"	l
f0104dfe	obj/kern/kernel.asm	/^f0104dfe:	66 c7 05 9a 02 23 f0 	movw   $0x8,0xf023029a$/;"	l
f0104e05	obj/kern/kernel.asm	/^f0104e05:	08 00 $/;"	l
f0104e07	obj/kern/kernel.asm	/^f0104e07:	0f b6 05 9c 02 23 f0 	movzbl 0xf023029c,%eax$/;"	l
f0104e0e	obj/kern/kernel.asm	/^f0104e0e:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0104e11	obj/kern/kernel.asm	/^f0104e11:	a2 9c 02 23 f0       	mov    %al,0xf023029c$/;"	l
f0104e16	obj/kern/kernel.asm	/^f0104e16:	0f b6 05 9c 02 23 f0 	movzbl 0xf023029c,%eax$/;"	l
f0104e1d	obj/kern/kernel.asm	/^f0104e1d:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0104e20	obj/kern/kernel.asm	/^f0104e20:	a2 9c 02 23 f0       	mov    %al,0xf023029c$/;"	l
f0104e25	obj/kern/kernel.asm	/^f0104e25:	0f b6 05 9d 02 23 f0 	movzbl 0xf023029d,%eax$/;"	l
f0104e2c	obj/kern/kernel.asm	/^f0104e2c:	83 c8 0f             	or     $0xf,%eax$/;"	l
f0104e2f	obj/kern/kernel.asm	/^f0104e2f:	a2 9d 02 23 f0       	mov    %al,0xf023029d$/;"	l
f0104e34	obj/kern/kernel.asm	/^f0104e34:	0f b6 05 9d 02 23 f0 	movzbl 0xf023029d,%eax$/;"	l
f0104e3b	obj/kern/kernel.asm	/^f0104e3b:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0104e3e	obj/kern/kernel.asm	/^f0104e3e:	a2 9d 02 23 f0       	mov    %al,0xf023029d$/;"	l
f0104e43	obj/kern/kernel.asm	/^f0104e43:	0f b6 05 9d 02 23 f0 	movzbl 0xf023029d,%eax$/;"	l
f0104e4a	obj/kern/kernel.asm	/^f0104e4a:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0104e4d	obj/kern/kernel.asm	/^f0104e4d:	a2 9d 02 23 f0       	mov    %al,0xf023029d$/;"	l
f0104e52	obj/kern/kernel.asm	/^f0104e52:	0f b6 05 9d 02 23 f0 	movzbl 0xf023029d,%eax$/;"	l
f0104e59	obj/kern/kernel.asm	/^f0104e59:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0104e5c	obj/kern/kernel.asm	/^f0104e5c:	a2 9d 02 23 f0       	mov    %al,0xf023029d$/;"	l
f0104e61	obj/kern/kernel.asm	/^f0104e61:	b8 82 5b 10 f0       	mov    $0xf0105b82,%eax$/;"	l
f0104e66	obj/kern/kernel.asm	/^f0104e66:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104e69	obj/kern/kernel.asm	/^f0104e69:	66 a3 9e 02 23 f0    	mov    %ax,0xf023029e$/;"	l
f0104e6f	obj/kern/kernel.asm	/^f0104e6f:	b8 7c 5b 10 f0       	mov    $0xf0105b7c,%eax$/;"	l
f0104e74	obj/kern/kernel.asm	/^f0104e74:	66 a3 a0 02 23 f0    	mov    %ax,0xf02302a0$/;"	l
f0104e7a	obj/kern/kernel.asm	/^f0104e7a:	66 c7 05 a2 02 23 f0 	movw   $0x8,0xf02302a2$/;"	l
f0104e81	obj/kern/kernel.asm	/^f0104e81:	08 00 $/;"	l
f0104e83	obj/kern/kernel.asm	/^f0104e83:	0f b6 05 a4 02 23 f0 	movzbl 0xf02302a4,%eax$/;"	l
f0104e8a	obj/kern/kernel.asm	/^f0104e8a:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0104e8d	obj/kern/kernel.asm	/^f0104e8d:	a2 a4 02 23 f0       	mov    %al,0xf02302a4$/;"	l
f0104e92	obj/kern/kernel.asm	/^f0104e92:	0f b6 05 a4 02 23 f0 	movzbl 0xf02302a4,%eax$/;"	l
f0104e99	obj/kern/kernel.asm	/^f0104e99:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0104e9c	obj/kern/kernel.asm	/^f0104e9c:	a2 a4 02 23 f0       	mov    %al,0xf02302a4$/;"	l
f0104ea1	obj/kern/kernel.asm	/^f0104ea1:	0f b6 05 a5 02 23 f0 	movzbl 0xf02302a5,%eax$/;"	l
f0104ea8	obj/kern/kernel.asm	/^f0104ea8:	83 c8 0f             	or     $0xf,%eax$/;"	l
f0104eab	obj/kern/kernel.asm	/^f0104eab:	a2 a5 02 23 f0       	mov    %al,0xf02302a5$/;"	l
f0104eb0	obj/kern/kernel.asm	/^f0104eb0:	0f b6 05 a5 02 23 f0 	movzbl 0xf02302a5,%eax$/;"	l
f0104eb7	obj/kern/kernel.asm	/^f0104eb7:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0104eba	obj/kern/kernel.asm	/^f0104eba:	a2 a5 02 23 f0       	mov    %al,0xf02302a5$/;"	l
f0104ebf	obj/kern/kernel.asm	/^f0104ebf:	0f b6 05 a5 02 23 f0 	movzbl 0xf02302a5,%eax$/;"	l
f0104ec6	obj/kern/kernel.asm	/^f0104ec6:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0104ec9	obj/kern/kernel.asm	/^f0104ec9:	a2 a5 02 23 f0       	mov    %al,0xf02302a5$/;"	l
f0104ece	obj/kern/kernel.asm	/^f0104ece:	0f b6 05 a5 02 23 f0 	movzbl 0xf02302a5,%eax$/;"	l
f0104ed5	obj/kern/kernel.asm	/^f0104ed5:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0104ed8	obj/kern/kernel.asm	/^f0104ed8:	a2 a5 02 23 f0       	mov    %al,0xf02302a5$/;"	l
f0104edd	obj/kern/kernel.asm	/^f0104edd:	b8 7c 5b 10 f0       	mov    $0xf0105b7c,%eax$/;"	l
f0104ee2	obj/kern/kernel.asm	/^f0104ee2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104ee5	obj/kern/kernel.asm	/^f0104ee5:	66 a3 a6 02 23 f0    	mov    %ax,0xf02302a6$/;"	l
f0104eeb	obj/kern/kernel.asm	/^f0104eeb:	b8 8e 5b 10 f0       	mov    $0xf0105b8e,%eax$/;"	l
f0104ef0	obj/kern/kernel.asm	/^f0104ef0:	66 a3 b0 02 23 f0    	mov    %ax,0xf02302b0$/;"	l
f0104ef6	obj/kern/kernel.asm	/^f0104ef6:	66 c7 05 b2 02 23 f0 	movw   $0x8,0xf02302b2$/;"	l
f0104efd	obj/kern/kernel.asm	/^f0104efd:	08 00 $/;"	l
f0104eff	obj/kern/kernel.asm	/^f0104eff:	0f b6 05 b4 02 23 f0 	movzbl 0xf02302b4,%eax$/;"	l
f0104f06	obj/kern/kernel.asm	/^f0104f06:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0104f09	obj/kern/kernel.asm	/^f0104f09:	a2 b4 02 23 f0       	mov    %al,0xf02302b4$/;"	l
f0104f0e	obj/kern/kernel.asm	/^f0104f0e:	0f b6 05 b4 02 23 f0 	movzbl 0xf02302b4,%eax$/;"	l
f0104f15	obj/kern/kernel.asm	/^f0104f15:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0104f18	obj/kern/kernel.asm	/^f0104f18:	a2 b4 02 23 f0       	mov    %al,0xf02302b4$/;"	l
f0104f1d	obj/kern/kernel.asm	/^f0104f1d:	0f b6 05 b5 02 23 f0 	movzbl 0xf02302b5,%eax$/;"	l
f0104f24	obj/kern/kernel.asm	/^f0104f24:	83 c8 0f             	or     $0xf,%eax$/;"	l
f0104f27	obj/kern/kernel.asm	/^f0104f27:	a2 b5 02 23 f0       	mov    %al,0xf02302b5$/;"	l
f0104f2c	obj/kern/kernel.asm	/^f0104f2c:	0f b6 05 b5 02 23 f0 	movzbl 0xf02302b5,%eax$/;"	l
f0104f33	obj/kern/kernel.asm	/^f0104f33:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0104f36	obj/kern/kernel.asm	/^f0104f36:	a2 b5 02 23 f0       	mov    %al,0xf02302b5$/;"	l
f0104f3b	obj/kern/kernel.asm	/^f0104f3b:	0f b6 05 b5 02 23 f0 	movzbl 0xf02302b5,%eax$/;"	l
f0104f42	obj/kern/kernel.asm	/^f0104f42:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0104f45	obj/kern/kernel.asm	/^f0104f45:	a2 b5 02 23 f0       	mov    %al,0xf02302b5$/;"	l
f0104f4a	obj/kern/kernel.asm	/^f0104f4a:	0f b6 05 b5 02 23 f0 	movzbl 0xf02302b5,%eax$/;"	l
f0104f51	obj/kern/kernel.asm	/^f0104f51:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0104f54	obj/kern/kernel.asm	/^f0104f54:	a2 b5 02 23 f0       	mov    %al,0xf02302b5$/;"	l
f0104f59	obj/kern/kernel.asm	/^f0104f59:	b8 8e 5b 10 f0       	mov    $0xf0105b8e,%eax$/;"	l
f0104f5e	obj/kern/kernel.asm	/^f0104f5e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104f61	obj/kern/kernel.asm	/^f0104f61:	66 a3 b6 02 23 f0    	mov    %ax,0xf02302b6$/;"	l
f0104f67	obj/kern/kernel.asm	/^f0104f67:	b8 92 5b 10 f0       	mov    $0xf0105b92,%eax$/;"	l
f0104f6c	obj/kern/kernel.asm	/^f0104f6c:	66 a3 b8 02 23 f0    	mov    %ax,0xf02302b8$/;"	l
f0104f72	obj/kern/kernel.asm	/^f0104f72:	66 c7 05 ba 02 23 f0 	movw   $0x8,0xf02302ba$/;"	l
f0104f79	obj/kern/kernel.asm	/^f0104f79:	08 00 $/;"	l
f0104f7b	obj/kern/kernel.asm	/^f0104f7b:	0f b6 05 bc 02 23 f0 	movzbl 0xf02302bc,%eax$/;"	l
f0104f82	obj/kern/kernel.asm	/^f0104f82:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0104f85	obj/kern/kernel.asm	/^f0104f85:	a2 bc 02 23 f0       	mov    %al,0xf02302bc$/;"	l
f0104f8a	obj/kern/kernel.asm	/^f0104f8a:	0f b6 05 bc 02 23 f0 	movzbl 0xf02302bc,%eax$/;"	l
f0104f91	obj/kern/kernel.asm	/^f0104f91:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0104f94	obj/kern/kernel.asm	/^f0104f94:	a2 bc 02 23 f0       	mov    %al,0xf02302bc$/;"	l
f0104f99	obj/kern/kernel.asm	/^f0104f99:	0f b6 05 bd 02 23 f0 	movzbl 0xf02302bd,%eax$/;"	l
f0104fa0	obj/kern/kernel.asm	/^f0104fa0:	83 c8 0f             	or     $0xf,%eax$/;"	l
f0104fa3	obj/kern/kernel.asm	/^f0104fa3:	a2 bd 02 23 f0       	mov    %al,0xf02302bd$/;"	l
f0104fa8	obj/kern/kernel.asm	/^f0104fa8:	0f b6 05 bd 02 23 f0 	movzbl 0xf02302bd,%eax$/;"	l
f0104faf	obj/kern/kernel.asm	/^f0104faf:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0104fb2	obj/kern/kernel.asm	/^f0104fb2:	a2 bd 02 23 f0       	mov    %al,0xf02302bd$/;"	l
f0104fb7	obj/kern/kernel.asm	/^f0104fb7:	0f b6 05 bd 02 23 f0 	movzbl 0xf02302bd,%eax$/;"	l
f0104fbe	obj/kern/kernel.asm	/^f0104fbe:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0104fc1	obj/kern/kernel.asm	/^f0104fc1:	a2 bd 02 23 f0       	mov    %al,0xf02302bd$/;"	l
f0104fc6	obj/kern/kernel.asm	/^f0104fc6:	0f b6 05 bd 02 23 f0 	movzbl 0xf02302bd,%eax$/;"	l
f0104fcd	obj/kern/kernel.asm	/^f0104fcd:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0104fd0	obj/kern/kernel.asm	/^f0104fd0:	a2 bd 02 23 f0       	mov    %al,0xf02302bd$/;"	l
f0104fd5	obj/kern/kernel.asm	/^f0104fd5:	b8 92 5b 10 f0       	mov    $0xf0105b92,%eax$/;"	l
f0104fda	obj/kern/kernel.asm	/^f0104fda:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0104fdd	obj/kern/kernel.asm	/^f0104fdd:	66 a3 be 02 23 f0    	mov    %ax,0xf02302be$/;"	l
f0104fe3	obj/kern/kernel.asm	/^f0104fe3:	b8 96 5b 10 f0       	mov    $0xf0105b96,%eax$/;"	l
f0104fe8	obj/kern/kernel.asm	/^f0104fe8:	66 a3 c0 02 23 f0    	mov    %ax,0xf02302c0$/;"	l
f0104fee	obj/kern/kernel.asm	/^f0104fee:	66 c7 05 c2 02 23 f0 	movw   $0x8,0xf02302c2$/;"	l
f0104ff5	obj/kern/kernel.asm	/^f0104ff5:	08 00 $/;"	l
f0104ff7	obj/kern/kernel.asm	/^f0104ff7:	0f b6 05 c4 02 23 f0 	movzbl 0xf02302c4,%eax$/;"	l
f0104ffe	obj/kern/kernel.asm	/^f0104ffe:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0105001	obj/kern/kernel.asm	/^f0105001:	a2 c4 02 23 f0       	mov    %al,0xf02302c4$/;"	l
f0105006	obj/kern/kernel.asm	/^f0105006:	0f b6 05 c4 02 23 f0 	movzbl 0xf02302c4,%eax$/;"	l
f010500d	obj/kern/kernel.asm	/^f010500d:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0105010	obj/kern/kernel.asm	/^f0105010:	a2 c4 02 23 f0       	mov    %al,0xf02302c4$/;"	l
f0105015	obj/kern/kernel.asm	/^f0105015:	0f b6 05 c5 02 23 f0 	movzbl 0xf02302c5,%eax$/;"	l
f010501c	obj/kern/kernel.asm	/^f010501c:	83 c8 0f             	or     $0xf,%eax$/;"	l
f010501f	obj/kern/kernel.asm	/^f010501f:	a2 c5 02 23 f0       	mov    %al,0xf02302c5$/;"	l
f0105024	obj/kern/kernel.asm	/^f0105024:	0f b6 05 c5 02 23 f0 	movzbl 0xf02302c5,%eax$/;"	l
f010502b	obj/kern/kernel.asm	/^f010502b:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f010502e	obj/kern/kernel.asm	/^f010502e:	a2 c5 02 23 f0       	mov    %al,0xf02302c5$/;"	l
f0105033	obj/kern/kernel.asm	/^f0105033:	0f b6 05 c5 02 23 f0 	movzbl 0xf02302c5,%eax$/;"	l
f010503a	obj/kern/kernel.asm	/^f010503a:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f010503d	obj/kern/kernel.asm	/^f010503d:	a2 c5 02 23 f0       	mov    %al,0xf02302c5$/;"	l
f0105042	obj/kern/kernel.asm	/^f0105042:	0f b6 05 c5 02 23 f0 	movzbl 0xf02302c5,%eax$/;"	l
f0105049	obj/kern/kernel.asm	/^f0105049:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f010504c	obj/kern/kernel.asm	/^f010504c:	a2 c5 02 23 f0       	mov    %al,0xf02302c5$/;"	l
f0105051	obj/kern/kernel.asm	/^f0105051:	b8 96 5b 10 f0       	mov    $0xf0105b96,%eax$/;"	l
f0105056	obj/kern/kernel.asm	/^f0105056:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105059	obj/kern/kernel.asm	/^f0105059:	66 a3 c6 02 23 f0    	mov    %ax,0xf02302c6$/;"	l
f010505f	obj/kern/kernel.asm	/^f010505f:	b8 9a 5b 10 f0       	mov    $0xf0105b9a,%eax$/;"	l
f0105064	obj/kern/kernel.asm	/^f0105064:	66 a3 c8 02 23 f0    	mov    %ax,0xf02302c8$/;"	l
f010506a	obj/kern/kernel.asm	/^f010506a:	66 c7 05 ca 02 23 f0 	movw   $0x8,0xf02302ca$/;"	l
f0105071	obj/kern/kernel.asm	/^f0105071:	08 00 $/;"	l
f0105073	obj/kern/kernel.asm	/^f0105073:	0f b6 05 cc 02 23 f0 	movzbl 0xf02302cc,%eax$/;"	l
f010507a	obj/kern/kernel.asm	/^f010507a:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f010507d	obj/kern/kernel.asm	/^f010507d:	a2 cc 02 23 f0       	mov    %al,0xf02302cc$/;"	l
f0105082	obj/kern/kernel.asm	/^f0105082:	0f b6 05 cc 02 23 f0 	movzbl 0xf02302cc,%eax$/;"	l
f0105089	obj/kern/kernel.asm	/^f0105089:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f010508c	obj/kern/kernel.asm	/^f010508c:	a2 cc 02 23 f0       	mov    %al,0xf02302cc$/;"	l
f0105091	obj/kern/kernel.asm	/^f0105091:	0f b6 05 cd 02 23 f0 	movzbl 0xf02302cd,%eax$/;"	l
f0105098	obj/kern/kernel.asm	/^f0105098:	83 c8 0f             	or     $0xf,%eax$/;"	l
f010509b	obj/kern/kernel.asm	/^f010509b:	a2 cd 02 23 f0       	mov    %al,0xf02302cd$/;"	l
f01050a0	obj/kern/kernel.asm	/^f01050a0:	0f b6 05 cd 02 23 f0 	movzbl 0xf02302cd,%eax$/;"	l
f01050a7	obj/kern/kernel.asm	/^f01050a7:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f01050aa	obj/kern/kernel.asm	/^f01050aa:	a2 cd 02 23 f0       	mov    %al,0xf02302cd$/;"	l
f01050af	obj/kern/kernel.asm	/^f01050af:	0f b6 05 cd 02 23 f0 	movzbl 0xf02302cd,%eax$/;"	l
f01050b6	obj/kern/kernel.asm	/^f01050b6:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f01050b9	obj/kern/kernel.asm	/^f01050b9:	a2 cd 02 23 f0       	mov    %al,0xf02302cd$/;"	l
f01050be	obj/kern/kernel.asm	/^f01050be:	0f b6 05 cd 02 23 f0 	movzbl 0xf02302cd,%eax$/;"	l
f01050c5	obj/kern/kernel.asm	/^f01050c5:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f01050c8	obj/kern/kernel.asm	/^f01050c8:	a2 cd 02 23 f0       	mov    %al,0xf02302cd$/;"	l
f01050cd	obj/kern/kernel.asm	/^f01050cd:	b8 9a 5b 10 f0       	mov    $0xf0105b9a,%eax$/;"	l
f01050d2	obj/kern/kernel.asm	/^f01050d2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01050d5	obj/kern/kernel.asm	/^f01050d5:	66 a3 ce 02 23 f0    	mov    %ax,0xf02302ce$/;"	l
f01050db	obj/kern/kernel.asm	/^f01050db:	b8 9e 5b 10 f0       	mov    $0xf0105b9e,%eax$/;"	l
f01050e0	obj/kern/kernel.asm	/^f01050e0:	66 a3 d0 02 23 f0    	mov    %ax,0xf02302d0$/;"	l
f01050e6	obj/kern/kernel.asm	/^f01050e6:	66 c7 05 d2 02 23 f0 	movw   $0x8,0xf02302d2$/;"	l
f01050ed	obj/kern/kernel.asm	/^f01050ed:	08 00 $/;"	l
f01050ef	obj/kern/kernel.asm	/^f01050ef:	0f b6 05 d4 02 23 f0 	movzbl 0xf02302d4,%eax$/;"	l
f01050f6	obj/kern/kernel.asm	/^f01050f6:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f01050f9	obj/kern/kernel.asm	/^f01050f9:	a2 d4 02 23 f0       	mov    %al,0xf02302d4$/;"	l
f01050fe	obj/kern/kernel.asm	/^f01050fe:	0f b6 05 d4 02 23 f0 	movzbl 0xf02302d4,%eax$/;"	l
f0105105	obj/kern/kernel.asm	/^f0105105:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0105108	obj/kern/kernel.asm	/^f0105108:	a2 d4 02 23 f0       	mov    %al,0xf02302d4$/;"	l
f010510d	obj/kern/kernel.asm	/^f010510d:	0f b6 05 d5 02 23 f0 	movzbl 0xf02302d5,%eax$/;"	l
f0105114	obj/kern/kernel.asm	/^f0105114:	83 c8 0f             	or     $0xf,%eax$/;"	l
f0105117	obj/kern/kernel.asm	/^f0105117:	a2 d5 02 23 f0       	mov    %al,0xf02302d5$/;"	l
f010511c	obj/kern/kernel.asm	/^f010511c:	0f b6 05 d5 02 23 f0 	movzbl 0xf02302d5,%eax$/;"	l
f0105123	obj/kern/kernel.asm	/^f0105123:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0105126	obj/kern/kernel.asm	/^f0105126:	a2 d5 02 23 f0       	mov    %al,0xf02302d5$/;"	l
f010512b	obj/kern/kernel.asm	/^f010512b:	0f b6 05 d5 02 23 f0 	movzbl 0xf02302d5,%eax$/;"	l
f0105132	obj/kern/kernel.asm	/^f0105132:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0105135	obj/kern/kernel.asm	/^f0105135:	a2 d5 02 23 f0       	mov    %al,0xf02302d5$/;"	l
f010513a	obj/kern/kernel.asm	/^f010513a:	0f b6 05 d5 02 23 f0 	movzbl 0xf02302d5,%eax$/;"	l
f0105141	obj/kern/kernel.asm	/^f0105141:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0105144	obj/kern/kernel.asm	/^f0105144:	a2 d5 02 23 f0       	mov    %al,0xf02302d5$/;"	l
f0105149	obj/kern/kernel.asm	/^f0105149:	b8 9e 5b 10 f0       	mov    $0xf0105b9e,%eax$/;"	l
f010514e	obj/kern/kernel.asm	/^f010514e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105151	obj/kern/kernel.asm	/^f0105151:	66 a3 d6 02 23 f0    	mov    %ax,0xf02302d6$/;"	l
f0105157	obj/kern/kernel.asm	/^f0105157:	b8 a2 5b 10 f0       	mov    $0xf0105ba2,%eax$/;"	l
f010515c	obj/kern/kernel.asm	/^f010515c:	66 a3 e0 02 23 f0    	mov    %ax,0xf02302e0$/;"	l
f0105162	obj/kern/kernel.asm	/^f0105162:	66 c7 05 e2 02 23 f0 	movw   $0x8,0xf02302e2$/;"	l
f0105169	obj/kern/kernel.asm	/^f0105169:	08 00 $/;"	l
f010516b	obj/kern/kernel.asm	/^f010516b:	0f b6 05 e4 02 23 f0 	movzbl 0xf02302e4,%eax$/;"	l
f0105172	obj/kern/kernel.asm	/^f0105172:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0105175	obj/kern/kernel.asm	/^f0105175:	a2 e4 02 23 f0       	mov    %al,0xf02302e4$/;"	l
f010517a	obj/kern/kernel.asm	/^f010517a:	0f b6 05 e4 02 23 f0 	movzbl 0xf02302e4,%eax$/;"	l
f0105181	obj/kern/kernel.asm	/^f0105181:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0105184	obj/kern/kernel.asm	/^f0105184:	a2 e4 02 23 f0       	mov    %al,0xf02302e4$/;"	l
f0105189	obj/kern/kernel.asm	/^f0105189:	0f b6 05 e5 02 23 f0 	movzbl 0xf02302e5,%eax$/;"	l
f0105190	obj/kern/kernel.asm	/^f0105190:	83 c8 0f             	or     $0xf,%eax$/;"	l
f0105193	obj/kern/kernel.asm	/^f0105193:	a2 e5 02 23 f0       	mov    %al,0xf02302e5$/;"	l
f0105198	obj/kern/kernel.asm	/^f0105198:	0f b6 05 e5 02 23 f0 	movzbl 0xf02302e5,%eax$/;"	l
f010519f	obj/kern/kernel.asm	/^f010519f:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f01051a2	obj/kern/kernel.asm	/^f01051a2:	a2 e5 02 23 f0       	mov    %al,0xf02302e5$/;"	l
f01051a7	obj/kern/kernel.asm	/^f01051a7:	0f b6 05 e5 02 23 f0 	movzbl 0xf02302e5,%eax$/;"	l
f01051ae	obj/kern/kernel.asm	/^f01051ae:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f01051b1	obj/kern/kernel.asm	/^f01051b1:	a2 e5 02 23 f0       	mov    %al,0xf02302e5$/;"	l
f01051b6	obj/kern/kernel.asm	/^f01051b6:	0f b6 05 e5 02 23 f0 	movzbl 0xf02302e5,%eax$/;"	l
f01051bd	obj/kern/kernel.asm	/^f01051bd:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f01051c0	obj/kern/kernel.asm	/^f01051c0:	a2 e5 02 23 f0       	mov    %al,0xf02302e5$/;"	l
f01051c5	obj/kern/kernel.asm	/^f01051c5:	b8 a2 5b 10 f0       	mov    $0xf0105ba2,%eax$/;"	l
f01051ca	obj/kern/kernel.asm	/^f01051ca:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01051cd	obj/kern/kernel.asm	/^f01051cd:	66 a3 e6 02 23 f0    	mov    %ax,0xf02302e6$/;"	l
f01051d3	obj/kern/kernel.asm	/^f01051d3:	b8 a8 5b 10 f0       	mov    $0xf0105ba8,%eax$/;"	l
f01051d8	obj/kern/kernel.asm	/^f01051d8:	66 a3 e8 02 23 f0    	mov    %ax,0xf02302e8$/;"	l
f01051de	obj/kern/kernel.asm	/^f01051de:	66 c7 05 ea 02 23 f0 	movw   $0x8,0xf02302ea$/;"	l
f01051e5	obj/kern/kernel.asm	/^f01051e5:	08 00 $/;"	l
f01051e7	obj/kern/kernel.asm	/^f01051e7:	0f b6 05 ec 02 23 f0 	movzbl 0xf02302ec,%eax$/;"	l
f01051ee	obj/kern/kernel.asm	/^f01051ee:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f01051f1	obj/kern/kernel.asm	/^f01051f1:	a2 ec 02 23 f0       	mov    %al,0xf02302ec$/;"	l
f01051f6	obj/kern/kernel.asm	/^f01051f6:	0f b6 05 ec 02 23 f0 	movzbl 0xf02302ec,%eax$/;"	l
f01051fd	obj/kern/kernel.asm	/^f01051fd:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0105200	obj/kern/kernel.asm	/^f0105200:	a2 ec 02 23 f0       	mov    %al,0xf02302ec$/;"	l
f0105205	obj/kern/kernel.asm	/^f0105205:	0f b6 05 ed 02 23 f0 	movzbl 0xf02302ed,%eax$/;"	l
f010520c	obj/kern/kernel.asm	/^f010520c:	83 c8 0f             	or     $0xf,%eax$/;"	l
f010520f	obj/kern/kernel.asm	/^f010520f:	a2 ed 02 23 f0       	mov    %al,0xf02302ed$/;"	l
f0105214	obj/kern/kernel.asm	/^f0105214:	0f b6 05 ed 02 23 f0 	movzbl 0xf02302ed,%eax$/;"	l
f010521b	obj/kern/kernel.asm	/^f010521b:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f010521e	obj/kern/kernel.asm	/^f010521e:	a2 ed 02 23 f0       	mov    %al,0xf02302ed$/;"	l
f0105223	obj/kern/kernel.asm	/^f0105223:	0f b6 05 ed 02 23 f0 	movzbl 0xf02302ed,%eax$/;"	l
f010522a	obj/kern/kernel.asm	/^f010522a:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f010522d	obj/kern/kernel.asm	/^f010522d:	a2 ed 02 23 f0       	mov    %al,0xf02302ed$/;"	l
f0105232	obj/kern/kernel.asm	/^f0105232:	0f b6 05 ed 02 23 f0 	movzbl 0xf02302ed,%eax$/;"	l
f0105239	obj/kern/kernel.asm	/^f0105239:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f010523c	obj/kern/kernel.asm	/^f010523c:	a2 ed 02 23 f0       	mov    %al,0xf02302ed$/;"	l
f0105241	obj/kern/kernel.asm	/^f0105241:	b8 a8 5b 10 f0       	mov    $0xf0105ba8,%eax$/;"	l
f0105246	obj/kern/kernel.asm	/^f0105246:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105249	obj/kern/kernel.asm	/^f0105249:	66 a3 ee 02 23 f0    	mov    %ax,0xf02302ee$/;"	l
f010524f	obj/kern/kernel.asm	/^f010524f:	b8 ac 5b 10 f0       	mov    $0xf0105bac,%eax$/;"	l
f0105254	obj/kern/kernel.asm	/^f0105254:	66 a3 f0 02 23 f0    	mov    %ax,0xf02302f0$/;"	l
f010525a	obj/kern/kernel.asm	/^f010525a:	66 c7 05 f2 02 23 f0 	movw   $0x8,0xf02302f2$/;"	l
f0105261	obj/kern/kernel.asm	/^f0105261:	08 00 $/;"	l
f0105263	obj/kern/kernel.asm	/^f0105263:	0f b6 05 f4 02 23 f0 	movzbl 0xf02302f4,%eax$/;"	l
f010526a	obj/kern/kernel.asm	/^f010526a:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f010526d	obj/kern/kernel.asm	/^f010526d:	a2 f4 02 23 f0       	mov    %al,0xf02302f4$/;"	l
f0105272	obj/kern/kernel.asm	/^f0105272:	0f b6 05 f4 02 23 f0 	movzbl 0xf02302f4,%eax$/;"	l
f0105279	obj/kern/kernel.asm	/^f0105279:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f010527c	obj/kern/kernel.asm	/^f010527c:	a2 f4 02 23 f0       	mov    %al,0xf02302f4$/;"	l
f0105281	obj/kern/kernel.asm	/^f0105281:	0f b6 05 f5 02 23 f0 	movzbl 0xf02302f5,%eax$/;"	l
f0105288	obj/kern/kernel.asm	/^f0105288:	83 c8 0f             	or     $0xf,%eax$/;"	l
f010528b	obj/kern/kernel.asm	/^f010528b:	a2 f5 02 23 f0       	mov    %al,0xf02302f5$/;"	l
f0105290	obj/kern/kernel.asm	/^f0105290:	0f b6 05 f5 02 23 f0 	movzbl 0xf02302f5,%eax$/;"	l
f0105297	obj/kern/kernel.asm	/^f0105297:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f010529a	obj/kern/kernel.asm	/^f010529a:	a2 f5 02 23 f0       	mov    %al,0xf02302f5$/;"	l
f010529f	obj/kern/kernel.asm	/^f010529f:	0f b6 05 f5 02 23 f0 	movzbl 0xf02302f5,%eax$/;"	l
f01052a6	obj/kern/kernel.asm	/^f01052a6:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f01052a9	obj/kern/kernel.asm	/^f01052a9:	a2 f5 02 23 f0       	mov    %al,0xf02302f5$/;"	l
f01052ae	obj/kern/kernel.asm	/^f01052ae:	0f b6 05 f5 02 23 f0 	movzbl 0xf02302f5,%eax$/;"	l
f01052b5	obj/kern/kernel.asm	/^f01052b5:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f01052b8	obj/kern/kernel.asm	/^f01052b8:	a2 f5 02 23 f0       	mov    %al,0xf02302f5$/;"	l
f01052bd	obj/kern/kernel.asm	/^f01052bd:	b8 ac 5b 10 f0       	mov    $0xf0105bac,%eax$/;"	l
f01052c2	obj/kern/kernel.asm	/^f01052c2:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01052c5	obj/kern/kernel.asm	/^f01052c5:	66 a3 f6 02 23 f0    	mov    %ax,0xf02302f6$/;"	l
f01052cb	obj/kern/kernel.asm	/^f01052cb:	b8 b0 5b 10 f0       	mov    $0xf0105bb0,%eax$/;"	l
f01052d0	obj/kern/kernel.asm	/^f01052d0:	66 a3 f8 02 23 f0    	mov    %ax,0xf02302f8$/;"	l
f01052d6	obj/kern/kernel.asm	/^f01052d6:	66 c7 05 fa 02 23 f0 	movw   $0x8,0xf02302fa$/;"	l
f01052dd	obj/kern/kernel.asm	/^f01052dd:	08 00 $/;"	l
f01052df	obj/kern/kernel.asm	/^f01052df:	0f b6 05 fc 02 23 f0 	movzbl 0xf02302fc,%eax$/;"	l
f01052e6	obj/kern/kernel.asm	/^f01052e6:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f01052e9	obj/kern/kernel.asm	/^f01052e9:	a2 fc 02 23 f0       	mov    %al,0xf02302fc$/;"	l
f01052ee	obj/kern/kernel.asm	/^f01052ee:	0f b6 05 fc 02 23 f0 	movzbl 0xf02302fc,%eax$/;"	l
f01052f5	obj/kern/kernel.asm	/^f01052f5:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f01052f8	obj/kern/kernel.asm	/^f01052f8:	a2 fc 02 23 f0       	mov    %al,0xf02302fc$/;"	l
f01052fd	obj/kern/kernel.asm	/^f01052fd:	0f b6 05 fd 02 23 f0 	movzbl 0xf02302fd,%eax$/;"	l
f0105304	obj/kern/kernel.asm	/^f0105304:	83 c8 0f             	or     $0xf,%eax$/;"	l
f0105307	obj/kern/kernel.asm	/^f0105307:	a2 fd 02 23 f0       	mov    %al,0xf02302fd$/;"	l
f010530c	obj/kern/kernel.asm	/^f010530c:	0f b6 05 fd 02 23 f0 	movzbl 0xf02302fd,%eax$/;"	l
f0105313	obj/kern/kernel.asm	/^f0105313:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0105316	obj/kern/kernel.asm	/^f0105316:	a2 fd 02 23 f0       	mov    %al,0xf02302fd$/;"	l
f010531b	obj/kern/kernel.asm	/^f010531b:	0f b6 05 fd 02 23 f0 	movzbl 0xf02302fd,%eax$/;"	l
f0105322	obj/kern/kernel.asm	/^f0105322:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f0105325	obj/kern/kernel.asm	/^f0105325:	a2 fd 02 23 f0       	mov    %al,0xf02302fd$/;"	l
f010532a	obj/kern/kernel.asm	/^f010532a:	0f b6 05 fd 02 23 f0 	movzbl 0xf02302fd,%eax$/;"	l
f0105331	obj/kern/kernel.asm	/^f0105331:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f0105334	obj/kern/kernel.asm	/^f0105334:	a2 fd 02 23 f0       	mov    %al,0xf02302fd$/;"	l
f0105339	obj/kern/kernel.asm	/^f0105339:	b8 b0 5b 10 f0       	mov    $0xf0105bb0,%eax$/;"	l
f010533e	obj/kern/kernel.asm	/^f010533e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105341	obj/kern/kernel.asm	/^f0105341:	66 a3 fe 02 23 f0    	mov    %ax,0xf02302fe$/;"	l
f0105347	obj/kern/kernel.asm	/^f0105347:	b8 b4 5b 10 f0       	mov    $0xf0105bb4,%eax$/;"	l
f010534c	obj/kern/kernel.asm	/^f010534c:	66 a3 e0 03 23 f0    	mov    %ax,0xf02303e0$/;"	l
f0105352	obj/kern/kernel.asm	/^f0105352:	66 c7 05 e2 03 23 f0 	movw   $0x8,0xf02303e2$/;"	l
f0105359	obj/kern/kernel.asm	/^f0105359:	08 00 $/;"	l
f010535b	obj/kern/kernel.asm	/^f010535b:	0f b6 05 e4 03 23 f0 	movzbl 0xf02303e4,%eax$/;"	l
f0105362	obj/kern/kernel.asm	/^f0105362:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
f0105365	obj/kern/kernel.asm	/^f0105365:	a2 e4 03 23 f0       	mov    %al,0xf02303e4$/;"	l
f010536a	obj/kern/kernel.asm	/^f010536a:	0f b6 05 e4 03 23 f0 	movzbl 0xf02303e4,%eax$/;"	l
f0105371	obj/kern/kernel.asm	/^f0105371:	83 e0 1f             	and    $0x1f,%eax$/;"	l
f0105374	obj/kern/kernel.asm	/^f0105374:	a2 e4 03 23 f0       	mov    %al,0xf02303e4$/;"	l
f0105379	obj/kern/kernel.asm	/^f0105379:	0f b6 05 e5 03 23 f0 	movzbl 0xf02303e5,%eax$/;"	l
f0105380	obj/kern/kernel.asm	/^f0105380:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0105383	obj/kern/kernel.asm	/^f0105383:	83 c8 0e             	or     $0xe,%eax$/;"	l
f0105386	obj/kern/kernel.asm	/^f0105386:	a2 e5 03 23 f0       	mov    %al,0xf02303e5$/;"	l
f010538b	obj/kern/kernel.asm	/^f010538b:	0f b6 05 e5 03 23 f0 	movzbl 0xf02303e5,%eax$/;"	l
f0105392	obj/kern/kernel.asm	/^f0105392:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f0105395	obj/kern/kernel.asm	/^f0105395:	a2 e5 03 23 f0       	mov    %al,0xf02303e5$/;"	l
f010539a	obj/kern/kernel.asm	/^f010539a:	0f b6 05 e5 03 23 f0 	movzbl 0xf02303e5,%eax$/;"	l
f01053a1	obj/kern/kernel.asm	/^f01053a1:	83 c8 60             	or     $0x60,%eax$/;"	l
f01053a4	obj/kern/kernel.asm	/^f01053a4:	a2 e5 03 23 f0       	mov    %al,0xf02303e5$/;"	l
f01053a9	obj/kern/kernel.asm	/^f01053a9:	0f b6 05 e5 03 23 f0 	movzbl 0xf02303e5,%eax$/;"	l
f01053b0	obj/kern/kernel.asm	/^f01053b0:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f01053b3	obj/kern/kernel.asm	/^f01053b3:	a2 e5 03 23 f0       	mov    %al,0xf02303e5$/;"	l
f01053b8	obj/kern/kernel.asm	/^f01053b8:	b8 b4 5b 10 f0       	mov    $0xf0105bb4,%eax$/;"	l
f01053bd	obj/kern/kernel.asm	/^f01053bd:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f01053c0	obj/kern/kernel.asm	/^f01053c0:	66 a3 e6 03 23 f0    	mov    %ax,0xf02303e6$/;"	l
f01053c6	obj/kern/kernel.asm	/^f01053c6:	e8 03 00 00 00       	call   f01053ce <trap_init_percpu>$/;"	l
f01053cb	obj/kern/kernel.asm	/^f01053cb:	90                   	nop$/;"	l
f01053cc	obj/kern/kernel.asm	/^f01053cc:	c9                   	leave  $/;"	l
f01053cd	obj/kern/kernel.asm	/^f01053cd:	c3                   	ret    $/;"	l
f01053ce	obj/kern/kernel.asm	/^f01053ce <trap_init_percpu>:$/;"	l
f01053ce	obj/kern/kernel.asm	/^f01053ce:	55                   	push   %ebp$/;"	l
f01053cf	obj/kern/kernel.asm	/^f01053cf:	89 e5                	mov    %esp,%ebp$/;"	l
f01053d1	obj/kern/kernel.asm	/^f01053d1:	56                   	push   %esi$/;"	l
f01053d2	obj/kern/kernel.asm	/^f01053d2:	53                   	push   %ebx$/;"	l
f01053d3	obj/kern/kernel.asm	/^f01053d3:	83 ec 20             	sub    $0x20,%esp$/;"	l
f01053d6	obj/kern/kernel.asm	/^f01053d6:	e8 84 29 00 00       	call   f0107d5f <cpunum>$/;"	l
f01053db	obj/kern/kernel.asm	/^f01053db:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01053de	obj/kern/kernel.asm	/^f01053de:	05 20 10 23 f0       	add    $0xf0231020,%eax$/;"	l
f01053e3	obj/kern/kernel.asm	/^f01053e3:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01053e6	obj/kern/kernel.asm	/^f01053e6:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01053e9	obj/kern/kernel.asm	/^f01053e9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01053ec	obj/kern/kernel.asm	/^f01053ec:	e8 6e 29 00 00       	call   f0107d5f <cpunum>$/;"	l
f01053f1	obj/kern/kernel.asm	/^f01053f1:	89 c1                	mov    %eax,%ecx$/;"	l
f01053f3	obj/kern/kernel.asm	/^f01053f3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01053f6	obj/kern/kernel.asm	/^f01053f6:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01053f9	obj/kern/kernel.asm	/^f01053f9:	ba 00 00 00 f0       	mov    $0xf0000000,%edx$/;"	l
f01053fe	obj/kern/kernel.asm	/^f01053fe:	29 c2                	sub    %eax,%edx$/;"	l
f0105400	obj/kern/kernel.asm	/^f0105400:	6b c1 74             	imul   $0x74,%ecx,%eax$/;"	l
f0105403	obj/kern/kernel.asm	/^f0105403:	05 30 10 23 f0       	add    $0xf0231030,%eax$/;"	l
f0105408	obj/kern/kernel.asm	/^f0105408:	89 10                	mov    %edx,(%eax)$/;"	l
f010540a	obj/kern/kernel.asm	/^f010540a:	e8 50 29 00 00       	call   f0107d5f <cpunum>$/;"	l
f010540f	obj/kern/kernel.asm	/^f010540f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105412	obj/kern/kernel.asm	/^f0105412:	05 34 10 23 f0       	add    $0xf0231034,%eax$/;"	l
f0105417	obj/kern/kernel.asm	/^f0105417:	66 c7 00 10 00       	movw   $0x10,(%eax)$/;"	l
f010541c	obj/kern/kernel.asm	/^f010541c:	e8 3e 29 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105421	obj/kern/kernel.asm	/^f0105421:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105424	obj/kern/kernel.asm	/^f0105424:	05 92 10 23 f0       	add    $0xf0231092,%eax$/;"	l
f0105429	obj/kern/kernel.asm	/^f0105429:	66 c7 00 68 00       	movw   $0x68,(%eax)$/;"	l
f010542e	obj/kern/kernel.asm	/^f010542e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0105431	obj/kern/kernel.asm	/^f0105431:	8d 58 05             	lea    0x5(%eax),%ebx$/;"	l
f0105434	obj/kern/kernel.asm	/^f0105434:	e8 26 29 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105439	obj/kern/kernel.asm	/^f0105439:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010543c	obj/kern/kernel.asm	/^f010543c:	05 20 10 23 f0       	add    $0xf0231020,%eax$/;"	l
f0105441	obj/kern/kernel.asm	/^f0105441:	83 c0 0c             	add    $0xc,%eax$/;"	l
f0105444	obj/kern/kernel.asm	/^f0105444:	89 c6                	mov    %eax,%esi$/;"	l
f0105446	obj/kern/kernel.asm	/^f0105446:	e8 14 29 00 00       	call   f0107d5f <cpunum>$/;"	l
f010544b	obj/kern/kernel.asm	/^f010544b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010544e	obj/kern/kernel.asm	/^f010544e:	05 20 10 23 f0       	add    $0xf0231020,%eax$/;"	l
f0105453	obj/kern/kernel.asm	/^f0105453:	83 c0 0c             	add    $0xc,%eax$/;"	l
f0105456	obj/kern/kernel.asm	/^f0105456:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0105459	obj/kern/kernel.asm	/^f0105459:	88 45 e7             	mov    %al,-0x19(%ebp)$/;"	l
f010545c	obj/kern/kernel.asm	/^f010545c:	e8 fe 28 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105461	obj/kern/kernel.asm	/^f0105461:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105464	obj/kern/kernel.asm	/^f0105464:	05 20 10 23 f0       	add    $0xf0231020,%eax$/;"	l
f0105469	obj/kern/kernel.asm	/^f0105469:	83 c0 0c             	add    $0xc,%eax$/;"	l
f010546c	obj/kern/kernel.asm	/^f010546c:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f010546f	obj/kern/kernel.asm	/^f010546f:	89 c2                	mov    %eax,%edx$/;"	l
f0105471	obj/kern/kernel.asm	/^f0105471:	66 c7 04 dd 60 55 12 	movw   $0x67,-0xfedaaa0(,%ebx,8)$/;"	l
f0105478	obj/kern/kernel.asm	/^f0105478:	f0 67 00 $/;"	l
f010547b	obj/kern/kernel.asm	/^f010547b:	66 89 34 dd 62 55 12 	mov    %si,-0xfedaa9e(,%ebx,8)$/;"	l
f0105482	obj/kern/kernel.asm	/^f0105482:	f0 $/;"	l
f0105483	obj/kern/kernel.asm	/^f0105483:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
f0105487	obj/kern/kernel.asm	/^f0105487:	88 04 dd 64 55 12 f0 	mov    %al,-0xfedaa9c(,%ebx,8)$/;"	l
f010548e	obj/kern/kernel.asm	/^f010548e:	0f b6 04 dd 65 55 12 	movzbl -0xfedaa9b(,%ebx,8),%eax$/;"	l
f0105495	obj/kern/kernel.asm	/^f0105495:	f0 $/;"	l
f0105496	obj/kern/kernel.asm	/^f0105496:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f0105499	obj/kern/kernel.asm	/^f0105499:	83 c8 09             	or     $0x9,%eax$/;"	l
f010549c	obj/kern/kernel.asm	/^f010549c:	88 04 dd 65 55 12 f0 	mov    %al,-0xfedaa9b(,%ebx,8)$/;"	l
f01054a3	obj/kern/kernel.asm	/^f01054a3:	0f b6 04 dd 65 55 12 	movzbl -0xfedaa9b(,%ebx,8),%eax$/;"	l
f01054aa	obj/kern/kernel.asm	/^f01054aa:	f0 $/;"	l
f01054ab	obj/kern/kernel.asm	/^f01054ab:	83 c8 10             	or     $0x10,%eax$/;"	l
f01054ae	obj/kern/kernel.asm	/^f01054ae:	88 04 dd 65 55 12 f0 	mov    %al,-0xfedaa9b(,%ebx,8)$/;"	l
f01054b5	obj/kern/kernel.asm	/^f01054b5:	0f b6 04 dd 65 55 12 	movzbl -0xfedaa9b(,%ebx,8),%eax$/;"	l
f01054bc	obj/kern/kernel.asm	/^f01054bc:	f0 $/;"	l
f01054bd	obj/kern/kernel.asm	/^f01054bd:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
f01054c0	obj/kern/kernel.asm	/^f01054c0:	88 04 dd 65 55 12 f0 	mov    %al,-0xfedaa9b(,%ebx,8)$/;"	l
f01054c7	obj/kern/kernel.asm	/^f01054c7:	0f b6 04 dd 65 55 12 	movzbl -0xfedaa9b(,%ebx,8),%eax$/;"	l
f01054ce	obj/kern/kernel.asm	/^f01054ce:	f0 $/;"	l
f01054cf	obj/kern/kernel.asm	/^f01054cf:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
f01054d2	obj/kern/kernel.asm	/^f01054d2:	88 04 dd 65 55 12 f0 	mov    %al,-0xfedaa9b(,%ebx,8)$/;"	l
f01054d9	obj/kern/kernel.asm	/^f01054d9:	0f b6 04 dd 66 55 12 	movzbl -0xfedaa9a(,%ebx,8),%eax$/;"	l
f01054e0	obj/kern/kernel.asm	/^f01054e0:	f0 $/;"	l
f01054e1	obj/kern/kernel.asm	/^f01054e1:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
f01054e4	obj/kern/kernel.asm	/^f01054e4:	88 04 dd 66 55 12 f0 	mov    %al,-0xfedaa9a(,%ebx,8)$/;"	l
f01054eb	obj/kern/kernel.asm	/^f01054eb:	0f b6 04 dd 66 55 12 	movzbl -0xfedaa9a(,%ebx,8),%eax$/;"	l
f01054f2	obj/kern/kernel.asm	/^f01054f2:	f0 $/;"	l
f01054f3	obj/kern/kernel.asm	/^f01054f3:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
f01054f6	obj/kern/kernel.asm	/^f01054f6:	88 04 dd 66 55 12 f0 	mov    %al,-0xfedaa9a(,%ebx,8)$/;"	l
f01054fd	obj/kern/kernel.asm	/^f01054fd:	0f b6 04 dd 66 55 12 	movzbl -0xfedaa9a(,%ebx,8),%eax$/;"	l
f0105504	obj/kern/kernel.asm	/^f0105504:	f0 $/;"	l
f0105505	obj/kern/kernel.asm	/^f0105505:	83 e0 df             	and    $0xffffffdf,%eax$/;"	l
f0105508	obj/kern/kernel.asm	/^f0105508:	88 04 dd 66 55 12 f0 	mov    %al,-0xfedaa9a(,%ebx,8)$/;"	l
f010550f	obj/kern/kernel.asm	/^f010550f:	0f b6 04 dd 66 55 12 	movzbl -0xfedaa9a(,%ebx,8),%eax$/;"	l
f0105516	obj/kern/kernel.asm	/^f0105516:	f0 $/;"	l
f0105517	obj/kern/kernel.asm	/^f0105517:	83 c8 40             	or     $0x40,%eax$/;"	l
f010551a	obj/kern/kernel.asm	/^f010551a:	88 04 dd 66 55 12 f0 	mov    %al,-0xfedaa9a(,%ebx,8)$/;"	l
f0105521	obj/kern/kernel.asm	/^f0105521:	0f b6 04 dd 66 55 12 	movzbl -0xfedaa9a(,%ebx,8),%eax$/;"	l
f0105528	obj/kern/kernel.asm	/^f0105528:	f0 $/;"	l
f0105529	obj/kern/kernel.asm	/^f0105529:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f010552c	obj/kern/kernel.asm	/^f010552c:	88 04 dd 66 55 12 f0 	mov    %al,-0xfedaa9a(,%ebx,8)$/;"	l
f0105533	obj/kern/kernel.asm	/^f0105533:	88 14 dd 67 55 12 f0 	mov    %dl,-0xfedaa99(,%ebx,8)$/;"	l
f010553a	obj/kern/kernel.asm	/^f010553a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010553d	obj/kern/kernel.asm	/^f010553d:	83 c0 05             	add    $0x5,%eax$/;"	l
f0105540	obj/kern/kernel.asm	/^f0105540:	0f b6 14 c5 65 55 12 	movzbl -0xfedaa9b(,%eax,8),%edx$/;"	l
f0105547	obj/kern/kernel.asm	/^f0105547:	f0 $/;"	l
f0105548	obj/kern/kernel.asm	/^f0105548:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
f010554b	obj/kern/kernel.asm	/^f010554b:	88 14 c5 65 55 12 f0 	mov    %dl,-0xfedaa9b(,%eax,8)$/;"	l
f0105552	obj/kern/kernel.asm	/^f0105552:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0105555	obj/kern/kernel.asm	/^f0105555:	c1 e0 03             	shl    $0x3,%eax$/;"	l
f0105558	obj/kern/kernel.asm	/^f0105558:	83 c0 28             	add    $0x28,%eax$/;"	l
f010555b	obj/kern/kernel.asm	/^f010555b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010555e	obj/kern/kernel.asm	/^f010555e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105561	obj/kern/kernel.asm	/^f0105561:	50                   	push   %eax$/;"	l
f0105562	obj/kern/kernel.asm	/^f0105562:	e8 79 f4 ff ff       	call   f01049e0 <ltr>$/;"	l
f0105567	obj/kern/kernel.asm	/^f0105567:	83 c4 10             	add    $0x10,%esp$/;"	l
f010556a	obj/kern/kernel.asm	/^f010556a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010556d	obj/kern/kernel.asm	/^f010556d:	68 d0 55 12 f0       	push   $0xf01255d0$/;"	l
f0105572	obj/kern/kernel.asm	/^f0105572:	e8 5d f4 ff ff       	call   f01049d4 <lidt>$/;"	l
f0105577	obj/kern/kernel.asm	/^f0105577:	83 c4 10             	add    $0x10,%esp$/;"	l
f010557a	obj/kern/kernel.asm	/^f010557a:	90                   	nop$/;"	l
f010557b	obj/kern/kernel.asm	/^f010557b:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010557e	obj/kern/kernel.asm	/^f010557e:	5b                   	pop    %ebx$/;"	l
f010557f	obj/kern/kernel.asm	/^f010557f:	5e                   	pop    %esi$/;"	l
f0105580	obj/kern/kernel.asm	/^f0105580:	5d                   	pop    %ebp$/;"	l
f0105581	obj/kern/kernel.asm	/^f0105581:	c3                   	ret    $/;"	l
f0105582	obj/kern/kernel.asm	/^f0105582 <print_trapframe>:$/;"	l
f0105582	obj/kern/kernel.asm	/^f0105582:	55                   	push   %ebp$/;"	l
f0105583	obj/kern/kernel.asm	/^f0105583:	89 e5                	mov    %esp,%ebp$/;"	l
f0105585	obj/kern/kernel.asm	/^f0105585:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105588	obj/kern/kernel.asm	/^f0105588:	e8 d2 27 00 00       	call   f0107d5f <cpunum>$/;"	l
f010558d	obj/kern/kernel.asm	/^f010558d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105590	obj/kern/kernel.asm	/^f0105590:	50                   	push   %eax$/;"	l
f0105591	obj/kern/kernel.asm	/^f0105591:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105594	obj/kern/kernel.asm	/^f0105594:	68 ae 98 10 f0       	push   $0xf01098ae$/;"	l
f0105599	obj/kern/kernel.asm	/^f0105599:	e8 10 f4 ff ff       	call   f01049ae <cprintf>$/;"	l
f010559e	obj/kern/kernel.asm	/^f010559e:	83 c4 10             	add    $0x10,%esp$/;"	l
f01055a1	obj/kern/kernel.asm	/^f01055a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01055a4	obj/kern/kernel.asm	/^f01055a4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01055a7	obj/kern/kernel.asm	/^f01055a7:	50                   	push   %eax$/;"	l
f01055a8	obj/kern/kernel.asm	/^f01055a8:	e8 ae 01 00 00       	call   f010575b <print_regs>$/;"	l
f01055ad	obj/kern/kernel.asm	/^f01055ad:	83 c4 10             	add    $0x10,%esp$/;"	l
f01055b0	obj/kern/kernel.asm	/^f01055b0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01055b3	obj/kern/kernel.asm	/^f01055b3:	0f b7 40 20          	movzwl 0x20(%eax),%eax$/;"	l
f01055b7	obj/kern/kernel.asm	/^f01055b7:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01055ba	obj/kern/kernel.asm	/^f01055ba:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01055bd	obj/kern/kernel.asm	/^f01055bd:	50                   	push   %eax$/;"	l
f01055be	obj/kern/kernel.asm	/^f01055be:	68 cc 98 10 f0       	push   $0xf01098cc$/;"	l
f01055c3	obj/kern/kernel.asm	/^f01055c3:	e8 e6 f3 ff ff       	call   f01049ae <cprintf>$/;"	l
f01055c8	obj/kern/kernel.asm	/^f01055c8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01055cb	obj/kern/kernel.asm	/^f01055cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01055ce	obj/kern/kernel.asm	/^f01055ce:	0f b7 40 24          	movzwl 0x24(%eax),%eax$/;"	l
f01055d2	obj/kern/kernel.asm	/^f01055d2:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01055d5	obj/kern/kernel.asm	/^f01055d5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01055d8	obj/kern/kernel.asm	/^f01055d8:	50                   	push   %eax$/;"	l
f01055d9	obj/kern/kernel.asm	/^f01055d9:	68 df 98 10 f0       	push   $0xf01098df$/;"	l
f01055de	obj/kern/kernel.asm	/^f01055de:	e8 cb f3 ff ff       	call   f01049ae <cprintf>$/;"	l
f01055e3	obj/kern/kernel.asm	/^f01055e3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01055e6	obj/kern/kernel.asm	/^f01055e6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01055e9	obj/kern/kernel.asm	/^f01055e9:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
f01055ec	obj/kern/kernel.asm	/^f01055ec:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01055ef	obj/kern/kernel.asm	/^f01055ef:	50                   	push   %eax$/;"	l
f01055f0	obj/kern/kernel.asm	/^f01055f0:	e8 56 f4 ff ff       	call   f0104a4b <trapname>$/;"	l
f01055f5	obj/kern/kernel.asm	/^f01055f5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01055f8	obj/kern/kernel.asm	/^f01055f8:	89 c2                	mov    %eax,%edx$/;"	l
f01055fa	obj/kern/kernel.asm	/^f01055fa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01055fd	obj/kern/kernel.asm	/^f01055fd:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
f0105600	obj/kern/kernel.asm	/^f0105600:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105603	obj/kern/kernel.asm	/^f0105603:	52                   	push   %edx$/;"	l
f0105604	obj/kern/kernel.asm	/^f0105604:	50                   	push   %eax$/;"	l
f0105605	obj/kern/kernel.asm	/^f0105605:	68 f2 98 10 f0       	push   $0xf01098f2$/;"	l
f010560a	obj/kern/kernel.asm	/^f010560a:	e8 9f f3 ff ff       	call   f01049ae <cprintf>$/;"	l
f010560f	obj/kern/kernel.asm	/^f010560f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105612	obj/kern/kernel.asm	/^f0105612:	a1 c8 0a 23 f0       	mov    0xf0230ac8,%eax$/;"	l
f0105617	obj/kern/kernel.asm	/^f0105617:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
f010561a	obj/kern/kernel.asm	/^f010561a:	75 21                	jne    f010563d <print_trapframe+0xbb>$/;"	l
f010561c	obj/kern/kernel.asm	/^f010561c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010561f	obj/kern/kernel.asm	/^f010561f:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
f0105622	obj/kern/kernel.asm	/^f0105622:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0105625	obj/kern/kernel.asm	/^f0105625:	75 16                	jne    f010563d <print_trapframe+0xbb>$/;"	l
f0105627	obj/kern/kernel.asm	/^f0105627:	e8 cb f3 ff ff       	call   f01049f7 <rcr2>$/;"	l
f010562c	obj/kern/kernel.asm	/^f010562c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010562f	obj/kern/kernel.asm	/^f010562f:	50                   	push   %eax$/;"	l
f0105630	obj/kern/kernel.asm	/^f0105630:	68 04 99 10 f0       	push   $0xf0109904$/;"	l
f0105635	obj/kern/kernel.asm	/^f0105635:	e8 74 f3 ff ff       	call   f01049ae <cprintf>$/;"	l
f010563a	obj/kern/kernel.asm	/^f010563a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010563d	obj/kern/kernel.asm	/^f010563d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105640	obj/kern/kernel.asm	/^f0105640:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
f0105643	obj/kern/kernel.asm	/^f0105643:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105646	obj/kern/kernel.asm	/^f0105646:	50                   	push   %eax$/;"	l
f0105647	obj/kern/kernel.asm	/^f0105647:	68 13 99 10 f0       	push   $0xf0109913$/;"	l
f010564c	obj/kern/kernel.asm	/^f010564c:	e8 5d f3 ff ff       	call   f01049ae <cprintf>$/;"	l
f0105651	obj/kern/kernel.asm	/^f0105651:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105654	obj/kern/kernel.asm	/^f0105654:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105657	obj/kern/kernel.asm	/^f0105657:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
f010565a	obj/kern/kernel.asm	/^f010565a:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f010565d	obj/kern/kernel.asm	/^f010565d:	75 5d                	jne    f01056bc <print_trapframe+0x13a>$/;"	l
f010565f	obj/kern/kernel.asm	/^f010565f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105662	obj/kern/kernel.asm	/^f0105662:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
f0105665	obj/kern/kernel.asm	/^f0105665:	83 e0 01             	and    $0x1,%eax$/;"	l
f0105668	obj/kern/kernel.asm	/^f0105668:	85 c0                	test   %eax,%eax$/;"	l
f010566a	obj/kern/kernel.asm	/^f010566a:	74 07                	je     f0105673 <print_trapframe+0xf1>$/;"	l
f010566c	obj/kern/kernel.asm	/^f010566c:	b9 21 99 10 f0       	mov    $0xf0109921,%ecx$/;"	l
f0105671	obj/kern/kernel.asm	/^f0105671:	eb 05                	jmp    f0105678 <print_trapframe+0xf6>$/;"	l
f0105673	obj/kern/kernel.asm	/^f0105673:	b9 2c 99 10 f0       	mov    $0xf010992c,%ecx$/;"	l
f0105678	obj/kern/kernel.asm	/^f0105678:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010567b	obj/kern/kernel.asm	/^f010567b:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
f010567e	obj/kern/kernel.asm	/^f010567e:	83 e0 02             	and    $0x2,%eax$/;"	l
f0105681	obj/kern/kernel.asm	/^f0105681:	85 c0                	test   %eax,%eax$/;"	l
f0105683	obj/kern/kernel.asm	/^f0105683:	74 07                	je     f010568c <print_trapframe+0x10a>$/;"	l
f0105685	obj/kern/kernel.asm	/^f0105685:	ba 38 99 10 f0       	mov    $0xf0109938,%edx$/;"	l
f010568a	obj/kern/kernel.asm	/^f010568a:	eb 05                	jmp    f0105691 <print_trapframe+0x10f>$/;"	l
f010568c	obj/kern/kernel.asm	/^f010568c:	ba 3e 99 10 f0       	mov    $0xf010993e,%edx$/;"	l
f0105691	obj/kern/kernel.asm	/^f0105691:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105694	obj/kern/kernel.asm	/^f0105694:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
f0105697	obj/kern/kernel.asm	/^f0105697:	83 e0 04             	and    $0x4,%eax$/;"	l
f010569a	obj/kern/kernel.asm	/^f010569a:	85 c0                	test   %eax,%eax$/;"	l
f010569c	obj/kern/kernel.asm	/^f010569c:	74 07                	je     f01056a5 <print_trapframe+0x123>$/;"	l
f010569e	obj/kern/kernel.asm	/^f010569e:	b8 43 99 10 f0       	mov    $0xf0109943,%eax$/;"	l
f01056a3	obj/kern/kernel.asm	/^f01056a3:	eb 05                	jmp    f01056aa <print_trapframe+0x128>$/;"	l
f01056a5	obj/kern/kernel.asm	/^f01056a5:	b8 48 99 10 f0       	mov    $0xf0109948,%eax$/;"	l
f01056aa	obj/kern/kernel.asm	/^f01056aa:	51                   	push   %ecx$/;"	l
f01056ab	obj/kern/kernel.asm	/^f01056ab:	52                   	push   %edx$/;"	l
f01056ac	obj/kern/kernel.asm	/^f01056ac:	50                   	push   %eax$/;"	l
f01056ad	obj/kern/kernel.asm	/^f01056ad:	68 4f 99 10 f0       	push   $0xf010994f$/;"	l
f01056b2	obj/kern/kernel.asm	/^f01056b2:	e8 f7 f2 ff ff       	call   f01049ae <cprintf>$/;"	l
f01056b7	obj/kern/kernel.asm	/^f01056b7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01056ba	obj/kern/kernel.asm	/^f01056ba:	eb 10                	jmp    f01056cc <print_trapframe+0x14a>$/;"	l
f01056bc	obj/kern/kernel.asm	/^f01056bc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01056bf	obj/kern/kernel.asm	/^f01056bf:	68 5e 99 10 f0       	push   $0xf010995e$/;"	l
f01056c4	obj/kern/kernel.asm	/^f01056c4:	e8 e5 f2 ff ff       	call   f01049ae <cprintf>$/;"	l
f01056c9	obj/kern/kernel.asm	/^f01056c9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01056cc	obj/kern/kernel.asm	/^f01056cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01056cf	obj/kern/kernel.asm	/^f01056cf:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
f01056d2	obj/kern/kernel.asm	/^f01056d2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01056d5	obj/kern/kernel.asm	/^f01056d5:	50                   	push   %eax$/;"	l
f01056d6	obj/kern/kernel.asm	/^f01056d6:	68 60 99 10 f0       	push   $0xf0109960$/;"	l
f01056db	obj/kern/kernel.asm	/^f01056db:	e8 ce f2 ff ff       	call   f01049ae <cprintf>$/;"	l
f01056e0	obj/kern/kernel.asm	/^f01056e0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01056e3	obj/kern/kernel.asm	/^f01056e3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01056e6	obj/kern/kernel.asm	/^f01056e6:	0f b7 40 34          	movzwl 0x34(%eax),%eax$/;"	l
f01056ea	obj/kern/kernel.asm	/^f01056ea:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01056ed	obj/kern/kernel.asm	/^f01056ed:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01056f0	obj/kern/kernel.asm	/^f01056f0:	50                   	push   %eax$/;"	l
f01056f1	obj/kern/kernel.asm	/^f01056f1:	68 6f 99 10 f0       	push   $0xf010996f$/;"	l
f01056f6	obj/kern/kernel.asm	/^f01056f6:	e8 b3 f2 ff ff       	call   f01049ae <cprintf>$/;"	l
f01056fb	obj/kern/kernel.asm	/^f01056fb:	83 c4 10             	add    $0x10,%esp$/;"	l
f01056fe	obj/kern/kernel.asm	/^f01056fe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105701	obj/kern/kernel.asm	/^f0105701:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
f0105704	obj/kern/kernel.asm	/^f0105704:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105707	obj/kern/kernel.asm	/^f0105707:	50                   	push   %eax$/;"	l
f0105708	obj/kern/kernel.asm	/^f0105708:	68 82 99 10 f0       	push   $0xf0109982$/;"	l
f010570d	obj/kern/kernel.asm	/^f010570d:	e8 9c f2 ff ff       	call   f01049ae <cprintf>$/;"	l
f0105712	obj/kern/kernel.asm	/^f0105712:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105715	obj/kern/kernel.asm	/^f0105715:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105718	obj/kern/kernel.asm	/^f0105718:	0f b7 40 34          	movzwl 0x34(%eax),%eax$/;"	l
f010571c	obj/kern/kernel.asm	/^f010571c:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010571f	obj/kern/kernel.asm	/^f010571f:	83 e0 03             	and    $0x3,%eax$/;"	l
f0105722	obj/kern/kernel.asm	/^f0105722:	85 c0                	test   %eax,%eax$/;"	l
f0105724	obj/kern/kernel.asm	/^f0105724:	74 32                	je     f0105758 <print_trapframe+0x1d6>$/;"	l
f0105726	obj/kern/kernel.asm	/^f0105726:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105729	obj/kern/kernel.asm	/^f0105729:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
f010572c	obj/kern/kernel.asm	/^f010572c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010572f	obj/kern/kernel.asm	/^f010572f:	50                   	push   %eax$/;"	l
f0105730	obj/kern/kernel.asm	/^f0105730:	68 91 99 10 f0       	push   $0xf0109991$/;"	l
f0105735	obj/kern/kernel.asm	/^f0105735:	e8 74 f2 ff ff       	call   f01049ae <cprintf>$/;"	l
f010573a	obj/kern/kernel.asm	/^f010573a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010573d	obj/kern/kernel.asm	/^f010573d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105740	obj/kern/kernel.asm	/^f0105740:	0f b7 40 40          	movzwl 0x40(%eax),%eax$/;"	l
f0105744	obj/kern/kernel.asm	/^f0105744:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0105747	obj/kern/kernel.asm	/^f0105747:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010574a	obj/kern/kernel.asm	/^f010574a:	50                   	push   %eax$/;"	l
f010574b	obj/kern/kernel.asm	/^f010574b:	68 a0 99 10 f0       	push   $0xf01099a0$/;"	l
f0105750	obj/kern/kernel.asm	/^f0105750:	e8 59 f2 ff ff       	call   f01049ae <cprintf>$/;"	l
f0105755	obj/kern/kernel.asm	/^f0105755:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105758	obj/kern/kernel.asm	/^f0105758:	90                   	nop$/;"	l
f0105759	obj/kern/kernel.asm	/^f0105759:	c9                   	leave  $/;"	l
f010575a	obj/kern/kernel.asm	/^f010575a:	c3                   	ret    $/;"	l
f010575b	obj/kern/kernel.asm	/^f010575b <print_regs>:$/;"	l
f010575b	obj/kern/kernel.asm	/^f010575b:	55                   	push   %ebp$/;"	l
f010575c	obj/kern/kernel.asm	/^f010575c:	89 e5                	mov    %esp,%ebp$/;"	l
f010575e	obj/kern/kernel.asm	/^f010575e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105761	obj/kern/kernel.asm	/^f0105761:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105764	obj/kern/kernel.asm	/^f0105764:	8b 00                	mov    (%eax),%eax$/;"	l
f0105766	obj/kern/kernel.asm	/^f0105766:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105769	obj/kern/kernel.asm	/^f0105769:	50                   	push   %eax$/;"	l
f010576a	obj/kern/kernel.asm	/^f010576a:	68 b3 99 10 f0       	push   $0xf01099b3$/;"	l
f010576f	obj/kern/kernel.asm	/^f010576f:	e8 3a f2 ff ff       	call   f01049ae <cprintf>$/;"	l
f0105774	obj/kern/kernel.asm	/^f0105774:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105777	obj/kern/kernel.asm	/^f0105777:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010577a	obj/kern/kernel.asm	/^f010577a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f010577d	obj/kern/kernel.asm	/^f010577d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105780	obj/kern/kernel.asm	/^f0105780:	50                   	push   %eax$/;"	l
f0105781	obj/kern/kernel.asm	/^f0105781:	68 c2 99 10 f0       	push   $0xf01099c2$/;"	l
f0105786	obj/kern/kernel.asm	/^f0105786:	e8 23 f2 ff ff       	call   f01049ae <cprintf>$/;"	l
f010578b	obj/kern/kernel.asm	/^f010578b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010578e	obj/kern/kernel.asm	/^f010578e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105791	obj/kern/kernel.asm	/^f0105791:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0105794	obj/kern/kernel.asm	/^f0105794:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105797	obj/kern/kernel.asm	/^f0105797:	50                   	push   %eax$/;"	l
f0105798	obj/kern/kernel.asm	/^f0105798:	68 d1 99 10 f0       	push   $0xf01099d1$/;"	l
f010579d	obj/kern/kernel.asm	/^f010579d:	e8 0c f2 ff ff       	call   f01049ae <cprintf>$/;"	l
f01057a2	obj/kern/kernel.asm	/^f01057a2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01057a5	obj/kern/kernel.asm	/^f01057a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01057a8	obj/kern/kernel.asm	/^f01057a8:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
f01057ab	obj/kern/kernel.asm	/^f01057ab:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01057ae	obj/kern/kernel.asm	/^f01057ae:	50                   	push   %eax$/;"	l
f01057af	obj/kern/kernel.asm	/^f01057af:	68 e0 99 10 f0       	push   $0xf01099e0$/;"	l
f01057b4	obj/kern/kernel.asm	/^f01057b4:	e8 f5 f1 ff ff       	call   f01049ae <cprintf>$/;"	l
f01057b9	obj/kern/kernel.asm	/^f01057b9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01057bc	obj/kern/kernel.asm	/^f01057bc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01057bf	obj/kern/kernel.asm	/^f01057bf:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
f01057c2	obj/kern/kernel.asm	/^f01057c2:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01057c5	obj/kern/kernel.asm	/^f01057c5:	50                   	push   %eax$/;"	l
f01057c6	obj/kern/kernel.asm	/^f01057c6:	68 ef 99 10 f0       	push   $0xf01099ef$/;"	l
f01057cb	obj/kern/kernel.asm	/^f01057cb:	e8 de f1 ff ff       	call   f01049ae <cprintf>$/;"	l
f01057d0	obj/kern/kernel.asm	/^f01057d0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01057d3	obj/kern/kernel.asm	/^f01057d3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01057d6	obj/kern/kernel.asm	/^f01057d6:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
f01057d9	obj/kern/kernel.asm	/^f01057d9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01057dc	obj/kern/kernel.asm	/^f01057dc:	50                   	push   %eax$/;"	l
f01057dd	obj/kern/kernel.asm	/^f01057dd:	68 fe 99 10 f0       	push   $0xf01099fe$/;"	l
f01057e2	obj/kern/kernel.asm	/^f01057e2:	e8 c7 f1 ff ff       	call   f01049ae <cprintf>$/;"	l
f01057e7	obj/kern/kernel.asm	/^f01057e7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01057ea	obj/kern/kernel.asm	/^f01057ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01057ed	obj/kern/kernel.asm	/^f01057ed:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
f01057f0	obj/kern/kernel.asm	/^f01057f0:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01057f3	obj/kern/kernel.asm	/^f01057f3:	50                   	push   %eax$/;"	l
f01057f4	obj/kern/kernel.asm	/^f01057f4:	68 0d 9a 10 f0       	push   $0xf0109a0d$/;"	l
f01057f9	obj/kern/kernel.asm	/^f01057f9:	e8 b0 f1 ff ff       	call   f01049ae <cprintf>$/;"	l
f01057fe	obj/kern/kernel.asm	/^f01057fe:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105801	obj/kern/kernel.asm	/^f0105801:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105804	obj/kern/kernel.asm	/^f0105804:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
f0105807	obj/kern/kernel.asm	/^f0105807:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010580a	obj/kern/kernel.asm	/^f010580a:	50                   	push   %eax$/;"	l
f010580b	obj/kern/kernel.asm	/^f010580b:	68 1c 9a 10 f0       	push   $0xf0109a1c$/;"	l
f0105810	obj/kern/kernel.asm	/^f0105810:	e8 99 f1 ff ff       	call   f01049ae <cprintf>$/;"	l
f0105815	obj/kern/kernel.asm	/^f0105815:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105818	obj/kern/kernel.asm	/^f0105818:	90                   	nop$/;"	l
f0105819	obj/kern/kernel.asm	/^f0105819:	c9                   	leave  $/;"	l
f010581a	obj/kern/kernel.asm	/^f010581a:	c3                   	ret    $/;"	l
f010581b	obj/kern/kernel.asm	/^f010581b <trap_dispatch>:$/;"	l
f010581b	obj/kern/kernel.asm	/^f010581b:	55                   	push   %ebp$/;"	l
f010581c	obj/kern/kernel.asm	/^f010581c:	89 e5                	mov    %esp,%ebp$/;"	l
f010581e	obj/kern/kernel.asm	/^f010581e:	57                   	push   %edi$/;"	l
f010581f	obj/kern/kernel.asm	/^f010581f:	56                   	push   %esi$/;"	l
f0105820	obj/kern/kernel.asm	/^f0105820:	53                   	push   %ebx$/;"	l
f0105821	obj/kern/kernel.asm	/^f0105821:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105824	obj/kern/kernel.asm	/^f0105824:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105827	obj/kern/kernel.asm	/^f0105827:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
f010582a	obj/kern/kernel.asm	/^f010582a:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f010582d	obj/kern/kernel.asm	/^f010582d:	74 2e                	je     f010585d <trap_dispatch+0x42>$/;"	l
f010582f	obj/kern/kernel.asm	/^f010582f:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0105832	obj/kern/kernel.asm	/^f0105832:	77 0a                	ja     f010583e <trap_dispatch+0x23>$/;"	l
f0105834	obj/kern/kernel.asm	/^f0105834:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0105837	obj/kern/kernel.asm	/^f0105837:	74 11                	je     f010584a <trap_dispatch+0x2f>$/;"	l
f0105839	obj/kern/kernel.asm	/^f0105839:	e9 83 00 00 00       	jmp    f01058c1 <trap_dispatch+0xa6>$/;"	l
f010583e	obj/kern/kernel.asm	/^f010583e:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
f0105841	obj/kern/kernel.asm	/^f0105841:	74 2d                	je     f0105870 <trap_dispatch+0x55>$/;"	l
f0105843	obj/kern/kernel.asm	/^f0105843:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f0105846	obj/kern/kernel.asm	/^f0105846:	74 3b                	je     f0105883 <trap_dispatch+0x68>$/;"	l
f0105848	obj/kern/kernel.asm	/^f0105848:	eb 77                	jmp    f01058c1 <trap_dispatch+0xa6>$/;"	l
f010584a	obj/kern/kernel.asm	/^f010584a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010584d	obj/kern/kernel.asm	/^f010584d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105850	obj/kern/kernel.asm	/^f0105850:	e8 c7 b9 ff ff       	call   f010121c <monitor>$/;"	l
f0105855	obj/kern/kernel.asm	/^f0105855:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105858	obj/kern/kernel.asm	/^f0105858:	e9 dd 00 00 00       	jmp    f010593a <trap_dispatch+0x11f>$/;"	l
f010585d	obj/kern/kernel.asm	/^f010585d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105860	obj/kern/kernel.asm	/^f0105860:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105863	obj/kern/kernel.asm	/^f0105863:	e8 b4 b9 ff ff       	call   f010121c <monitor>$/;"	l
f0105868	obj/kern/kernel.asm	/^f0105868:	83 c4 10             	add    $0x10,%esp$/;"	l
f010586b	obj/kern/kernel.asm	/^f010586b:	e9 ca 00 00 00       	jmp    f010593a <trap_dispatch+0x11f>$/;"	l
f0105870	obj/kern/kernel.asm	/^f0105870:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105873	obj/kern/kernel.asm	/^f0105873:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105876	obj/kern/kernel.asm	/^f0105876:	e8 4b 02 00 00       	call   f0105ac6 <page_fault_handler>$/;"	l
f010587b	obj/kern/kernel.asm	/^f010587b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010587e	obj/kern/kernel.asm	/^f010587e:	e9 b7 00 00 00       	jmp    f010593a <trap_dispatch+0x11f>$/;"	l
f0105883	obj/kern/kernel.asm	/^f0105883:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105886	obj/kern/kernel.asm	/^f0105886:	8b 78 04             	mov    0x4(%eax),%edi$/;"	l
f0105889	obj/kern/kernel.asm	/^f0105889:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010588c	obj/kern/kernel.asm	/^f010588c:	8b 30                	mov    (%eax),%esi$/;"	l
f010588e	obj/kern/kernel.asm	/^f010588e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105891	obj/kern/kernel.asm	/^f0105891:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
f0105894	obj/kern/kernel.asm	/^f0105894:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105897	obj/kern/kernel.asm	/^f0105897:	8b 48 18             	mov    0x18(%eax),%ecx$/;"	l
f010589a	obj/kern/kernel.asm	/^f010589a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010589d	obj/kern/kernel.asm	/^f010589d:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
f01058a0	obj/kern/kernel.asm	/^f01058a0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01058a3	obj/kern/kernel.asm	/^f01058a3:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
f01058a6	obj/kern/kernel.asm	/^f01058a6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01058a9	obj/kern/kernel.asm	/^f01058a9:	57                   	push   %edi$/;"	l
f01058aa	obj/kern/kernel.asm	/^f01058aa:	56                   	push   %esi$/;"	l
f01058ab	obj/kern/kernel.asm	/^f01058ab:	53                   	push   %ebx$/;"	l
f01058ac	obj/kern/kernel.asm	/^f01058ac:	51                   	push   %ecx$/;"	l
f01058ad	obj/kern/kernel.asm	/^f01058ad:	52                   	push   %edx$/;"	l
f01058ae	obj/kern/kernel.asm	/^f01058ae:	50                   	push   %eax$/;"	l
f01058af	obj/kern/kernel.asm	/^f01058af:	e8 a8 0a 00 00       	call   f010635c <syscall>$/;"	l
f01058b4	obj/kern/kernel.asm	/^f01058b4:	83 c4 20             	add    $0x20,%esp$/;"	l
f01058b7	obj/kern/kernel.asm	/^f01058b7:	89 c2                	mov    %eax,%edx$/;"	l
f01058b9	obj/kern/kernel.asm	/^f01058b9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01058bc	obj/kern/kernel.asm	/^f01058bc:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
f01058bf	obj/kern/kernel.asm	/^f01058bf:	eb 79                	jmp    f010593a <trap_dispatch+0x11f>$/;"	l
f01058c1	obj/kern/kernel.asm	/^f01058c1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01058c4	obj/kern/kernel.asm	/^f01058c4:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
f01058c7	obj/kern/kernel.asm	/^f01058c7:	83 f8 27             	cmp    $0x27,%eax$/;"	l
f01058ca	obj/kern/kernel.asm	/^f01058ca:	75 20                	jne    f01058ec <trap_dispatch+0xd1>$/;"	l
f01058cc	obj/kern/kernel.asm	/^f01058cc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01058cf	obj/kern/kernel.asm	/^f01058cf:	68 2b 9a 10 f0       	push   $0xf0109a2b$/;"	l
f01058d4	obj/kern/kernel.asm	/^f01058d4:	e8 d5 f0 ff ff       	call   f01049ae <cprintf>$/;"	l
f01058d9	obj/kern/kernel.asm	/^f01058d9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01058dc	obj/kern/kernel.asm	/^f01058dc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01058df	obj/kern/kernel.asm	/^f01058df:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01058e2	obj/kern/kernel.asm	/^f01058e2:	e8 9b fc ff ff       	call   f0105582 <print_trapframe>$/;"	l
f01058e7	obj/kern/kernel.asm	/^f01058e7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01058ea	obj/kern/kernel.asm	/^f01058ea:	eb 4e                	jmp    f010593a <trap_dispatch+0x11f>$/;"	l
f01058ec	obj/kern/kernel.asm	/^f01058ec:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01058ef	obj/kern/kernel.asm	/^f01058ef:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01058f2	obj/kern/kernel.asm	/^f01058f2:	e8 8b fc ff ff       	call   f0105582 <print_trapframe>$/;"	l
f01058f7	obj/kern/kernel.asm	/^f01058f7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01058fa	obj/kern/kernel.asm	/^f01058fa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01058fd	obj/kern/kernel.asm	/^f01058fd:	0f b7 40 34          	movzwl 0x34(%eax),%eax$/;"	l
f0105901	obj/kern/kernel.asm	/^f0105901:	66 83 f8 08          	cmp    $0x8,%ax$/;"	l
f0105905	obj/kern/kernel.asm	/^f0105905:	75 17                	jne    f010591e <trap_dispatch+0x103>$/;"	l
f0105907	obj/kern/kernel.asm	/^f0105907:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010590a	obj/kern/kernel.asm	/^f010590a:	68 48 9a 10 f0       	push   $0xf0109a48$/;"	l
f010590f	obj/kern/kernel.asm	/^f010590f:	68 01 01 00 00       	push   $0x101$/;"	l
f0105914	obj/kern/kernel.asm	/^f0105914:	68 61 9a 10 f0       	push   $0xf0109a61$/;"	l
f0105919	obj/kern/kernel.asm	/^f0105919:	e8 c2 a9 ff ff       	call   f01002e0 <_panic>$/;"	l
f010591e	obj/kern/kernel.asm	/^f010591e:	e8 3c 24 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105923	obj/kern/kernel.asm	/^f0105923:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105926	obj/kern/kernel.asm	/^f0105926:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f010592b	obj/kern/kernel.asm	/^f010592b:	8b 00                	mov    (%eax),%eax$/;"	l
f010592d	obj/kern/kernel.asm	/^f010592d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105930	obj/kern/kernel.asm	/^f0105930:	50                   	push   %eax$/;"	l
f0105931	obj/kern/kernel.asm	/^f0105931:	e8 70 ec ff ff       	call   f01045a6 <env_destroy>$/;"	l
f0105936	obj/kern/kernel.asm	/^f0105936:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105939	obj/kern/kernel.asm	/^f0105939:	90                   	nop$/;"	l
f010593a	obj/kern/kernel.asm	/^f010593a:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f010593d	obj/kern/kernel.asm	/^f010593d:	5b                   	pop    %ebx$/;"	l
f010593e	obj/kern/kernel.asm	/^f010593e:	5e                   	pop    %esi$/;"	l
f010593f	obj/kern/kernel.asm	/^f010593f:	5f                   	pop    %edi$/;"	l
f0105940	obj/kern/kernel.asm	/^f0105940:	5d                   	pop    %ebp$/;"	l
f0105941	obj/kern/kernel.asm	/^f0105941:	c3                   	ret    $/;"	l
f0105942	obj/kern/kernel.asm	/^f0105942 <trap>:$/;"	l
f0105942	obj/kern/kernel.asm	/^f0105942:	55                   	push   %ebp$/;"	l
f0105943	obj/kern/kernel.asm	/^f0105943:	89 e5                	mov    %esp,%ebp$/;"	l
f0105945	obj/kern/kernel.asm	/^f0105945:	57                   	push   %edi$/;"	l
f0105946	obj/kern/kernel.asm	/^f0105946:	56                   	push   %esi$/;"	l
f0105947	obj/kern/kernel.asm	/^f0105947:	53                   	push   %ebx$/;"	l
f0105948	obj/kern/kernel.asm	/^f0105948:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010594b	obj/kern/kernel.asm	/^f010594b:	fc                   	cld    $/;"	l
f010594c	obj/kern/kernel.asm	/^f010594c:	a1 e0 0e 23 f0       	mov    0xf0230ee0,%eax$/;"	l
f0105951	obj/kern/kernel.asm	/^f0105951:	85 c0                	test   %eax,%eax$/;"	l
f0105953	obj/kern/kernel.asm	/^f0105953:	74 01                	je     f0105956 <trap+0x14>$/;"	l
f0105955	obj/kern/kernel.asm	/^f0105955:	f4                   	hlt    $/;"	l
f0105956	obj/kern/kernel.asm	/^f0105956:	e8 04 24 00 00       	call   f0107d5f <cpunum>$/;"	l
f010595b	obj/kern/kernel.asm	/^f010595b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f010595e	obj/kern/kernel.asm	/^f010595e:	05 20 10 23 f0       	add    $0xf0231020,%eax$/;"	l
f0105963	obj/kern/kernel.asm	/^f0105963:	83 c0 04             	add    $0x4,%eax$/;"	l
f0105966	obj/kern/kernel.asm	/^f0105966:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105969	obj/kern/kernel.asm	/^f0105969:	6a 01                	push   $0x1$/;"	l
f010596b	obj/kern/kernel.asm	/^f010596b:	50                   	push   %eax$/;"	l
f010596c	obj/kern/kernel.asm	/^f010596c:	e8 a7 f0 ff ff       	call   f0104a18 <xchg>$/;"	l
f0105971	obj/kern/kernel.asm	/^f0105971:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105974	obj/kern/kernel.asm	/^f0105974:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0105977	obj/kern/kernel.asm	/^f0105977:	75 05                	jne    f010597e <trap+0x3c>$/;"	l
f0105979	obj/kern/kernel.asm	/^f0105979:	e8 b4 f0 ff ff       	call   f0104a32 <lock_kernel>$/;"	l
f010597e	obj/kern/kernel.asm	/^f010597e:	e8 85 f0 ff ff       	call   f0104a08 <read_eflags>$/;"	l
f0105983	obj/kern/kernel.asm	/^f0105983:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
f0105988	obj/kern/kernel.asm	/^f0105988:	85 c0                	test   %eax,%eax$/;"	l
f010598a	obj/kern/kernel.asm	/^f010598a:	74 19                	je     f01059a5 <trap+0x63>$/;"	l
f010598c	obj/kern/kernel.asm	/^f010598c:	68 6d 9a 10 f0       	push   $0xf0109a6d$/;"	l
f0105991	obj/kern/kernel.asm	/^f0105991:	68 86 9a 10 f0       	push   $0xf0109a86$/;"	l
f0105996	obj/kern/kernel.asm	/^f0105996:	68 1b 01 00 00       	push   $0x11b$/;"	l
f010599b	obj/kern/kernel.asm	/^f010599b:	68 61 9a 10 f0       	push   $0xf0109a61$/;"	l
f01059a0	obj/kern/kernel.asm	/^f01059a0:	e8 3b a9 ff ff       	call   f01002e0 <_panic>$/;"	l
f01059a5	obj/kern/kernel.asm	/^f01059a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01059a8	obj/kern/kernel.asm	/^f01059a8:	0f b7 40 34          	movzwl 0x34(%eax),%eax$/;"	l
f01059ac	obj/kern/kernel.asm	/^f01059ac:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01059af	obj/kern/kernel.asm	/^f01059af:	83 e0 03             	and    $0x3,%eax$/;"	l
f01059b2	obj/kern/kernel.asm	/^f01059b2:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f01059b5	obj/kern/kernel.asm	/^f01059b5:	0f 85 ae 00 00 00    	jne    f0105a69 <trap+0x127>$/;"	l
f01059bb	obj/kern/kernel.asm	/^f01059bb:	e8 72 f0 ff ff       	call   f0104a32 <lock_kernel>$/;"	l
f01059c0	obj/kern/kernel.asm	/^f01059c0:	e8 9a 23 00 00       	call   f0107d5f <cpunum>$/;"	l
f01059c5	obj/kern/kernel.asm	/^f01059c5:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01059c8	obj/kern/kernel.asm	/^f01059c8:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f01059cd	obj/kern/kernel.asm	/^f01059cd:	8b 00                	mov    (%eax),%eax$/;"	l
f01059cf	obj/kern/kernel.asm	/^f01059cf:	85 c0                	test   %eax,%eax$/;"	l
f01059d1	obj/kern/kernel.asm	/^f01059d1:	75 19                	jne    f01059ec <trap+0xaa>$/;"	l
f01059d3	obj/kern/kernel.asm	/^f01059d3:	68 9b 9a 10 f0       	push   $0xf0109a9b$/;"	l
f01059d8	obj/kern/kernel.asm	/^f01059d8:	68 86 9a 10 f0       	push   $0xf0109a86$/;"	l
f01059dd	obj/kern/kernel.asm	/^f01059dd:	68 23 01 00 00       	push   $0x123$/;"	l
f01059e2	obj/kern/kernel.asm	/^f01059e2:	68 61 9a 10 f0       	push   $0xf0109a61$/;"	l
f01059e7	obj/kern/kernel.asm	/^f01059e7:	e8 f4 a8 ff ff       	call   f01002e0 <_panic>$/;"	l
f01059ec	obj/kern/kernel.asm	/^f01059ec:	e8 6e 23 00 00       	call   f0107d5f <cpunum>$/;"	l
f01059f1	obj/kern/kernel.asm	/^f01059f1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01059f4	obj/kern/kernel.asm	/^f01059f4:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f01059f9	obj/kern/kernel.asm	/^f01059f9:	8b 00                	mov    (%eax),%eax$/;"	l
f01059fb	obj/kern/kernel.asm	/^f01059fb:	8b 40 54             	mov    0x54(%eax),%eax$/;"	l
f01059fe	obj/kern/kernel.asm	/^f01059fe:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0105a01	obj/kern/kernel.asm	/^f0105a01:	75 33                	jne    f0105a36 <trap+0xf4>$/;"	l
f0105a03	obj/kern/kernel.asm	/^f0105a03:	e8 57 23 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105a08	obj/kern/kernel.asm	/^f0105a08:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105a0b	obj/kern/kernel.asm	/^f0105a0b:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0105a10	obj/kern/kernel.asm	/^f0105a10:	8b 00                	mov    (%eax),%eax$/;"	l
f0105a12	obj/kern/kernel.asm	/^f0105a12:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105a15	obj/kern/kernel.asm	/^f0105a15:	50                   	push   %eax$/;"	l
f0105a16	obj/kern/kernel.asm	/^f0105a16:	e8 af e9 ff ff       	call   f01043ca <env_free>$/;"	l
f0105a1b	obj/kern/kernel.asm	/^f0105a1b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105a1e	obj/kern/kernel.asm	/^f0105a1e:	e8 3c 23 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105a23	obj/kern/kernel.asm	/^f0105a23:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105a26	obj/kern/kernel.asm	/^f0105a26:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0105a2b	obj/kern/kernel.asm	/^f0105a2b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0105a31	obj/kern/kernel.asm	/^f0105a31:	e8 04 02 00 00       	call   f0105c3a <sched_yield>$/;"	l
f0105a36	obj/kern/kernel.asm	/^f0105a36:	e8 24 23 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105a3b	obj/kern/kernel.asm	/^f0105a3b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105a3e	obj/kern/kernel.asm	/^f0105a3e:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0105a43	obj/kern/kernel.asm	/^f0105a43:	8b 10                	mov    (%eax),%edx$/;"	l
f0105a45	obj/kern/kernel.asm	/^f0105a45:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105a48	obj/kern/kernel.asm	/^f0105a48:	89 c3                	mov    %eax,%ebx$/;"	l
f0105a4a	obj/kern/kernel.asm	/^f0105a4a:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0105a4f	obj/kern/kernel.asm	/^f0105a4f:	89 d7                	mov    %edx,%edi$/;"	l
f0105a51	obj/kern/kernel.asm	/^f0105a51:	89 de                	mov    %ebx,%esi$/;"	l
f0105a53	obj/kern/kernel.asm	/^f0105a53:	89 c1                	mov    %eax,%ecx$/;"	l
f0105a55	obj/kern/kernel.asm	/^f0105a55:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105a57	obj/kern/kernel.asm	/^f0105a57:	e8 03 23 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105a5c	obj/kern/kernel.asm	/^f0105a5c:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105a5f	obj/kern/kernel.asm	/^f0105a5f:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0105a64	obj/kern/kernel.asm	/^f0105a64:	8b 00                	mov    (%eax),%eax$/;"	l
f0105a66	obj/kern/kernel.asm	/^f0105a66:	89 45 08             	mov    %eax,0x8(%ebp)$/;"	l
f0105a69	obj/kern/kernel.asm	/^f0105a69:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105a6c	obj/kern/kernel.asm	/^f0105a6c:	a3 c8 0a 23 f0       	mov    %eax,0xf0230ac8$/;"	l
f0105a71	obj/kern/kernel.asm	/^f0105a71:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105a74	obj/kern/kernel.asm	/^f0105a74:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105a77	obj/kern/kernel.asm	/^f0105a77:	e8 9f fd ff ff       	call   f010581b <trap_dispatch>$/;"	l
f0105a7c	obj/kern/kernel.asm	/^f0105a7c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105a7f	obj/kern/kernel.asm	/^f0105a7f:	e8 db 22 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105a84	obj/kern/kernel.asm	/^f0105a84:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105a87	obj/kern/kernel.asm	/^f0105a87:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0105a8c	obj/kern/kernel.asm	/^f0105a8c:	8b 00                	mov    (%eax),%eax$/;"	l
f0105a8e	obj/kern/kernel.asm	/^f0105a8e:	85 c0                	test   %eax,%eax$/;"	l
f0105a90	obj/kern/kernel.asm	/^f0105a90:	74 2f                	je     f0105ac1 <trap+0x17f>$/;"	l
f0105a92	obj/kern/kernel.asm	/^f0105a92:	e8 c8 22 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105a97	obj/kern/kernel.asm	/^f0105a97:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105a9a	obj/kern/kernel.asm	/^f0105a9a:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0105a9f	obj/kern/kernel.asm	/^f0105a9f:	8b 00                	mov    (%eax),%eax$/;"	l
f0105aa1	obj/kern/kernel.asm	/^f0105aa1:	8b 40 54             	mov    0x54(%eax),%eax$/;"	l
f0105aa4	obj/kern/kernel.asm	/^f0105aa4:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0105aa7	obj/kern/kernel.asm	/^f0105aa7:	75 18                	jne    f0105ac1 <trap+0x17f>$/;"	l
f0105aa9	obj/kern/kernel.asm	/^f0105aa9:	e8 b1 22 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105aae	obj/kern/kernel.asm	/^f0105aae:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105ab1	obj/kern/kernel.asm	/^f0105ab1:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0105ab6	obj/kern/kernel.asm	/^f0105ab6:	8b 00                	mov    (%eax),%eax$/;"	l
f0105ab8	obj/kern/kernel.asm	/^f0105ab8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105abb	obj/kern/kernel.asm	/^f0105abb:	50                   	push   %eax$/;"	l
f0105abc	obj/kern/kernel.asm	/^f0105abc:	e8 91 eb ff ff       	call   f0104652 <env_run>$/;"	l
f0105ac1	obj/kern/kernel.asm	/^f0105ac1:	e8 74 01 00 00       	call   f0105c3a <sched_yield>$/;"	l
f0105ac6	obj/kern/kernel.asm	/^f0105ac6 <page_fault_handler>:$/;"	l
f0105ac6	obj/kern/kernel.asm	/^f0105ac6:	55                   	push   %ebp$/;"	l
f0105ac7	obj/kern/kernel.asm	/^f0105ac7:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ac9	obj/kern/kernel.asm	/^f0105ac9:	53                   	push   %ebx$/;"	l
f0105aca	obj/kern/kernel.asm	/^f0105aca:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0105acd	obj/kern/kernel.asm	/^f0105acd:	e8 25 ef ff ff       	call   f01049f7 <rcr2>$/;"	l
f0105ad2	obj/kern/kernel.asm	/^f0105ad2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0105ad5	obj/kern/kernel.asm	/^f0105ad5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105ad8	obj/kern/kernel.asm	/^f0105ad8:	0f b7 40 34          	movzwl 0x34(%eax),%eax$/;"	l
f0105adc	obj/kern/kernel.asm	/^f0105adc:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0105adf	obj/kern/kernel.asm	/^f0105adf:	83 e0 03             	and    $0x3,%eax$/;"	l
f0105ae2	obj/kern/kernel.asm	/^f0105ae2:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0105ae5	obj/kern/kernel.asm	/^f0105ae5:	75 17                	jne    f0105afe <page_fault_handler+0x38>$/;"	l
f0105ae7	obj/kern/kernel.asm	/^f0105ae7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105aea	obj/kern/kernel.asm	/^f0105aea:	68 a2 9a 10 f0       	push   $0xf0109aa2$/;"	l
f0105aef	obj/kern/kernel.asm	/^f0105aef:	68 51 01 00 00       	push   $0x151$/;"	l
f0105af4	obj/kern/kernel.asm	/^f0105af4:	68 61 9a 10 f0       	push   $0xf0109a61$/;"	l
f0105af9	obj/kern/kernel.asm	/^f0105af9:	e8 e2 a7 ff ff       	call   f01002e0 <_panic>$/;"	l
f0105afe	obj/kern/kernel.asm	/^f0105afe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105b01	obj/kern/kernel.asm	/^f0105b01:	8b 58 30             	mov    0x30(%eax),%ebx$/;"	l
f0105b04	obj/kern/kernel.asm	/^f0105b04:	e8 56 22 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105b09	obj/kern/kernel.asm	/^f0105b09:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105b0c	obj/kern/kernel.asm	/^f0105b0c:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0105b11	obj/kern/kernel.asm	/^f0105b11:	8b 00                	mov    (%eax),%eax$/;"	l
f0105b13	obj/kern/kernel.asm	/^f0105b13:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105b16	obj/kern/kernel.asm	/^f0105b16:	53                   	push   %ebx$/;"	l
f0105b17	obj/kern/kernel.asm	/^f0105b17:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0105b1a	obj/kern/kernel.asm	/^f0105b1a:	50                   	push   %eax$/;"	l
f0105b1b	obj/kern/kernel.asm	/^f0105b1b:	68 b4 9a 10 f0       	push   $0xf0109ab4$/;"	l
f0105b20	obj/kern/kernel.asm	/^f0105b20:	e8 89 ee ff ff       	call   f01049ae <cprintf>$/;"	l
f0105b25	obj/kern/kernel.asm	/^f0105b25:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105b28	obj/kern/kernel.asm	/^f0105b28:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105b2b	obj/kern/kernel.asm	/^f0105b2b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105b2e	obj/kern/kernel.asm	/^f0105b2e:	e8 4f fa ff ff       	call   f0105582 <print_trapframe>$/;"	l
f0105b33	obj/kern/kernel.asm	/^f0105b33:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105b36	obj/kern/kernel.asm	/^f0105b36:	e8 24 22 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105b3b	obj/kern/kernel.asm	/^f0105b3b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105b3e	obj/kern/kernel.asm	/^f0105b3e:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0105b43	obj/kern/kernel.asm	/^f0105b43:	8b 00                	mov    (%eax),%eax$/;"	l
f0105b45	obj/kern/kernel.asm	/^f0105b45:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105b48	obj/kern/kernel.asm	/^f0105b48:	50                   	push   %eax$/;"	l
f0105b49	obj/kern/kernel.asm	/^f0105b49:	e8 58 ea ff ff       	call   f01045a6 <env_destroy>$/;"	l
f0105b4e	obj/kern/kernel.asm	/^f0105b4e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105b51	obj/kern/kernel.asm	/^f0105b51:	90                   	nop$/;"	l
f0105b52	obj/kern/kernel.asm	/^f0105b52:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0105b55	obj/kern/kernel.asm	/^f0105b55:	c9                   	leave  $/;"	l
f0105b56	obj/kern/kernel.asm	/^f0105b56:	c3                   	ret    $/;"	l
f0105b57	obj/kern/kernel.asm	/^f0105b57:	90                   	nop$/;"	l
f0105b58	obj/kern/kernel.asm	/^f0105b58 <handler0>:$/;"	l
f0105b58	obj/kern/kernel.asm	/^f0105b58:	6a 00                	push   $0x0$/;"	l
f0105b5a	obj/kern/kernel.asm	/^f0105b5a:	6a 00                	push   $0x0$/;"	l
f0105b5c	obj/kern/kernel.asm	/^f0105b5c:	eb 5c                	jmp    f0105bba <_alltraps>$/;"	l
f0105b5e	obj/kern/kernel.asm	/^f0105b5e <handler1>:$/;"	l
f0105b5e	obj/kern/kernel.asm	/^f0105b5e:	6a 00                	push   $0x0$/;"	l
f0105b60	obj/kern/kernel.asm	/^f0105b60:	6a 01                	push   $0x1$/;"	l
f0105b62	obj/kern/kernel.asm	/^f0105b62:	eb 56                	jmp    f0105bba <_alltraps>$/;"	l
f0105b64	obj/kern/kernel.asm	/^f0105b64 <handler2>:$/;"	l
f0105b64	obj/kern/kernel.asm	/^f0105b64:	6a 00                	push   $0x0$/;"	l
f0105b66	obj/kern/kernel.asm	/^f0105b66:	6a 02                	push   $0x2$/;"	l
f0105b68	obj/kern/kernel.asm	/^f0105b68:	eb 50                	jmp    f0105bba <_alltraps>$/;"	l
f0105b6a	obj/kern/kernel.asm	/^f0105b6a <handler3>:$/;"	l
f0105b6a	obj/kern/kernel.asm	/^f0105b6a:	6a 00                	push   $0x0$/;"	l
f0105b6c	obj/kern/kernel.asm	/^f0105b6c:	6a 03                	push   $0x3$/;"	l
f0105b6e	obj/kern/kernel.asm	/^f0105b6e:	eb 4a                	jmp    f0105bba <_alltraps>$/;"	l
f0105b70	obj/kern/kernel.asm	/^f0105b70 <handler4>:$/;"	l
f0105b70	obj/kern/kernel.asm	/^f0105b70:	6a 00                	push   $0x0$/;"	l
f0105b72	obj/kern/kernel.asm	/^f0105b72:	6a 04                	push   $0x4$/;"	l
f0105b74	obj/kern/kernel.asm	/^f0105b74:	eb 44                	jmp    f0105bba <_alltraps>$/;"	l
f0105b76	obj/kern/kernel.asm	/^f0105b76 <handler5>:$/;"	l
f0105b76	obj/kern/kernel.asm	/^f0105b76:	6a 00                	push   $0x0$/;"	l
f0105b78	obj/kern/kernel.asm	/^f0105b78:	6a 05                	push   $0x5$/;"	l
f0105b7a	obj/kern/kernel.asm	/^f0105b7a:	eb 3e                	jmp    f0105bba <_alltraps>$/;"	l
f0105b7c	obj/kern/kernel.asm	/^f0105b7c <handler6>:$/;"	l
f0105b7c	obj/kern/kernel.asm	/^f0105b7c:	6a 00                	push   $0x0$/;"	l
f0105b7e	obj/kern/kernel.asm	/^f0105b7e:	6a 06                	push   $0x6$/;"	l
f0105b80	obj/kern/kernel.asm	/^f0105b80:	eb 38                	jmp    f0105bba <_alltraps>$/;"	l
f0105b82	obj/kern/kernel.asm	/^f0105b82 <handler7>:$/;"	l
f0105b82	obj/kern/kernel.asm	/^f0105b82:	6a 00                	push   $0x0$/;"	l
f0105b84	obj/kern/kernel.asm	/^f0105b84:	6a 07                	push   $0x7$/;"	l
f0105b86	obj/kern/kernel.asm	/^f0105b86:	eb 32                	jmp    f0105bba <_alltraps>$/;"	l
f0105b88	obj/kern/kernel.asm	/^f0105b88 <handler8>:$/;"	l
f0105b88	obj/kern/kernel.asm	/^f0105b88:	6a 00                	push   $0x0$/;"	l
f0105b8a	obj/kern/kernel.asm	/^f0105b8a:	6a 08                	push   $0x8$/;"	l
f0105b8c	obj/kern/kernel.asm	/^f0105b8c:	eb 2c                	jmp    f0105bba <_alltraps>$/;"	l
f0105b8e	obj/kern/kernel.asm	/^f0105b8e <handler10>:$/;"	l
f0105b8e	obj/kern/kernel.asm	/^f0105b8e:	6a 0a                	push   $0xa$/;"	l
f0105b90	obj/kern/kernel.asm	/^f0105b90:	eb 28                	jmp    f0105bba <_alltraps>$/;"	l
f0105b92	obj/kern/kernel.asm	/^f0105b92 <handler11>:$/;"	l
f0105b92	obj/kern/kernel.asm	/^f0105b92:	6a 0b                	push   $0xb$/;"	l
f0105b94	obj/kern/kernel.asm	/^f0105b94:	eb 24                	jmp    f0105bba <_alltraps>$/;"	l
f0105b96	obj/kern/kernel.asm	/^f0105b96 <handler12>:$/;"	l
f0105b96	obj/kern/kernel.asm	/^f0105b96:	6a 0c                	push   $0xc$/;"	l
f0105b98	obj/kern/kernel.asm	/^f0105b98:	eb 20                	jmp    f0105bba <_alltraps>$/;"	l
f0105b9a	obj/kern/kernel.asm	/^f0105b9a <handler13>:$/;"	l
f0105b9a	obj/kern/kernel.asm	/^f0105b9a:	6a 0d                	push   $0xd$/;"	l
f0105b9c	obj/kern/kernel.asm	/^f0105b9c:	eb 1c                	jmp    f0105bba <_alltraps>$/;"	l
f0105b9e	obj/kern/kernel.asm	/^f0105b9e <handler14>:$/;"	l
f0105b9e	obj/kern/kernel.asm	/^f0105b9e:	6a 0e                	push   $0xe$/;"	l
f0105ba0	obj/kern/kernel.asm	/^f0105ba0:	eb 18                	jmp    f0105bba <_alltraps>$/;"	l
f0105ba2	obj/kern/kernel.asm	/^f0105ba2 <handler16>:$/;"	l
f0105ba2	obj/kern/kernel.asm	/^f0105ba2:	6a 00                	push   $0x0$/;"	l
f0105ba4	obj/kern/kernel.asm	/^f0105ba4:	6a 10                	push   $0x10$/;"	l
f0105ba6	obj/kern/kernel.asm	/^f0105ba6:	eb 12                	jmp    f0105bba <_alltraps>$/;"	l
f0105ba8	obj/kern/kernel.asm	/^f0105ba8 <handler17>:$/;"	l
f0105ba8	obj/kern/kernel.asm	/^f0105ba8:	6a 11                	push   $0x11$/;"	l
f0105baa	obj/kern/kernel.asm	/^f0105baa:	eb 0e                	jmp    f0105bba <_alltraps>$/;"	l
f0105bac	obj/kern/kernel.asm	/^f0105bac <handler18>:$/;"	l
f0105bac	obj/kern/kernel.asm	/^f0105bac:	6a 12                	push   $0x12$/;"	l
f0105bae	obj/kern/kernel.asm	/^f0105bae:	eb 0a                	jmp    f0105bba <_alltraps>$/;"	l
f0105bb0	obj/kern/kernel.asm	/^f0105bb0 <handler19>:$/;"	l
f0105bb0	obj/kern/kernel.asm	/^f0105bb0:	6a 13                	push   $0x13$/;"	l
f0105bb2	obj/kern/kernel.asm	/^f0105bb2:	eb 06                	jmp    f0105bba <_alltraps>$/;"	l
f0105bb4	obj/kern/kernel.asm	/^f0105bb4 <handler48>:$/;"	l
f0105bb4	obj/kern/kernel.asm	/^f0105bb4:	6a 00                	push   $0x0$/;"	l
f0105bb6	obj/kern/kernel.asm	/^f0105bb6:	6a 30                	push   $0x30$/;"	l
f0105bb8	obj/kern/kernel.asm	/^f0105bb8:	eb 00                	jmp    f0105bba <_alltraps>$/;"	l
f0105bba	obj/kern/kernel.asm	/^f0105bba <_alltraps>:$/;"	l
f0105bba	obj/kern/kernel.asm	/^f0105bba:	1e                   	push   %ds$/;"	l
f0105bbb	obj/kern/kernel.asm	/^f0105bbb:	06                   	push   %es$/;"	l
f0105bbc	obj/kern/kernel.asm	/^f0105bbc:	60                   	pusha  $/;"	l
f0105bbd	obj/kern/kernel.asm	/^f0105bbd:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0105bc2	obj/kern/kernel.asm	/^f0105bc2:	8e d8                	mov    %eax,%ds$/;"	l
f0105bc4	obj/kern/kernel.asm	/^f0105bc4:	8e c0                	mov    %eax,%es$/;"	l
f0105bc6	obj/kern/kernel.asm	/^f0105bc6:	54                   	push   %esp$/;"	l
f0105bc7	obj/kern/kernel.asm	/^f0105bc7:	e8 76 fd ff ff       	call   f0105942 <trap>$/;"	l
f0105bcc	obj/kern/kernel.asm	/^f0105bcc <lcr3>:$/;"	l
f0105bcc	obj/kern/kernel.asm	/^f0105bcc:	55                   	push   %ebp$/;"	l
f0105bcd	obj/kern/kernel.asm	/^f0105bcd:	89 e5                	mov    %esp,%ebp$/;"	l
f0105bcf	obj/kern/kernel.asm	/^f0105bcf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0105bd2	obj/kern/kernel.asm	/^f0105bd2:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0105bd5	obj/kern/kernel.asm	/^f0105bd5:	90                   	nop$/;"	l
f0105bd6	obj/kern/kernel.asm	/^f0105bd6:	5d                   	pop    %ebp$/;"	l
f0105bd7	obj/kern/kernel.asm	/^f0105bd7:	c3                   	ret    $/;"	l
f0105bd8	obj/kern/kernel.asm	/^f0105bd8 <xchg>:$/;"	l
f0105bd8	obj/kern/kernel.asm	/^f0105bd8:	55                   	push   %ebp$/;"	l
f0105bd9	obj/kern/kernel.asm	/^f0105bd9:	89 e5                	mov    %esp,%ebp$/;"	l
f0105bdb	obj/kern/kernel.asm	/^f0105bdb:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0105bde	obj/kern/kernel.asm	/^f0105bde:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0105be1	obj/kern/kernel.asm	/^f0105be1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0105be4	obj/kern/kernel.asm	/^f0105be4:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0105be7	obj/kern/kernel.asm	/^f0105be7:	f0 87 02             	lock xchg %eax,(%edx)$/;"	l
f0105bea	obj/kern/kernel.asm	/^f0105bea:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f0105bed	obj/kern/kernel.asm	/^f0105bed:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0105bf0	obj/kern/kernel.asm	/^f0105bf0:	c9                   	leave  $/;"	l
f0105bf1	obj/kern/kernel.asm	/^f0105bf1:	c3                   	ret    $/;"	l
f0105bf2	obj/kern/kernel.asm	/^f0105bf2 <unlock_kernel>:$/;"	l
f0105bf2	obj/kern/kernel.asm	/^f0105bf2:	55                   	push   %ebp$/;"	l
f0105bf3	obj/kern/kernel.asm	/^f0105bf3:	89 e5                	mov    %esp,%ebp$/;"	l
f0105bf5	obj/kern/kernel.asm	/^f0105bf5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105bf8	obj/kern/kernel.asm	/^f0105bf8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105bfb	obj/kern/kernel.asm	/^f0105bfb:	68 e0 55 12 f0       	push   $0xf01255e0$/;"	l
f0105c00	obj/kern/kernel.asm	/^f0105c00:	e8 53 24 00 00       	call   f0108058 <spin_unlock>$/;"	l
f0105c05	obj/kern/kernel.asm	/^f0105c05:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105c08	obj/kern/kernel.asm	/^f0105c08:	f3 90                	pause  $/;"	l
f0105c0a	obj/kern/kernel.asm	/^f0105c0a:	90                   	nop$/;"	l
f0105c0b	obj/kern/kernel.asm	/^f0105c0b:	c9                   	leave  $/;"	l
f0105c0c	obj/kern/kernel.asm	/^f0105c0c:	c3                   	ret    $/;"	l
f0105c0d	obj/kern/kernel.asm	/^f0105c0d <_paddr>:$/;"	l
f0105c0d	obj/kern/kernel.asm	/^f0105c0d:	55                   	push   %ebp$/;"	l
f0105c0e	obj/kern/kernel.asm	/^f0105c0e:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c10	obj/kern/kernel.asm	/^f0105c10:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105c13	obj/kern/kernel.asm	/^f0105c13:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105c16	obj/kern/kernel.asm	/^f0105c16:	3d ff ff ff ef       	cmp    $0xefffffff,%eax$/;"	l
f0105c1b	obj/kern/kernel.asm	/^f0105c1b:	77 13                	ja     f0105c30 <_paddr+0x23>$/;"	l
f0105c1d	obj/kern/kernel.asm	/^f0105c1d:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0105c20	obj/kern/kernel.asm	/^f0105c20:	68 70 9c 10 f0       	push   $0xf0109c70$/;"	l
f0105c25	obj/kern/kernel.asm	/^f0105c25:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105c28	obj/kern/kernel.asm	/^f0105c28:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105c2b	obj/kern/kernel.asm	/^f0105c2b:	e8 b0 a6 ff ff       	call   f01002e0 <_panic>$/;"	l
f0105c30	obj/kern/kernel.asm	/^f0105c30:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0105c33	obj/kern/kernel.asm	/^f0105c33:	05 00 00 00 10       	add    $0x10000000,%eax$/;"	l
f0105c38	obj/kern/kernel.asm	/^f0105c38:	c9                   	leave  $/;"	l
f0105c39	obj/kern/kernel.asm	/^f0105c39:	c3                   	ret    $/;"	l
f0105c3a	obj/kern/kernel.asm	/^f0105c3a <sched_yield>:$/;"	l
f0105c3a	obj/kern/kernel.asm	/^f0105c3a:	55                   	push   %ebp$/;"	l
f0105c3b	obj/kern/kernel.asm	/^f0105c3b:	89 e5                	mov    %esp,%ebp$/;"	l
f0105c3d	obj/kern/kernel.asm	/^f0105c3d:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105c40	obj/kern/kernel.asm	/^f0105c40:	e8 1a 21 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105c45	obj/kern/kernel.asm	/^f0105c45:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105c48	obj/kern/kernel.asm	/^f0105c48:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0105c4d	obj/kern/kernel.asm	/^f0105c4d:	8b 00                	mov    (%eax),%eax$/;"	l
f0105c4f	obj/kern/kernel.asm	/^f0105c4f:	85 c0                	test   %eax,%eax$/;"	l
f0105c51	obj/kern/kernel.asm	/^f0105c51:	75 09                	jne    f0105c5c <sched_yield+0x22>$/;"	l
f0105c53	obj/kern/kernel.asm	/^f0105c53:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0105c5a	obj/kern/kernel.asm	/^f0105c5a:	eb 31                	jmp    f0105c8d <sched_yield+0x53>$/;"	l
f0105c5c	obj/kern/kernel.asm	/^f0105c5c:	e8 fe 20 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105c61	obj/kern/kernel.asm	/^f0105c61:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105c64	obj/kern/kernel.asm	/^f0105c64:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0105c69	obj/kern/kernel.asm	/^f0105c69:	8b 00                	mov    (%eax),%eax$/;"	l
f0105c6b	obj/kern/kernel.asm	/^f0105c6b:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105c6e	obj/kern/kernel.asm	/^f0105c6e:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0105c73	obj/kern/kernel.asm	/^f0105c73:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0105c76	obj/kern/kernel.asm	/^f0105c76:	89 d0                	mov    %edx,%eax$/;"	l
f0105c78	obj/kern/kernel.asm	/^f0105c78:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0105c7b	obj/kern/kernel.asm	/^f0105c7b:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0105c7e	obj/kern/kernel.asm	/^f0105c7e:	01 c2                	add    %eax,%edx$/;"	l
f0105c80	obj/kern/kernel.asm	/^f0105c80:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0105c86	obj/kern/kernel.asm	/^f0105c86:	29 c2                	sub    %eax,%edx$/;"	l
f0105c88	obj/kern/kernel.asm	/^f0105c88:	89 d0                	mov    %edx,%eax$/;"	l
f0105c8a	obj/kern/kernel.asm	/^f0105c8a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0105c8d	obj/kern/kernel.asm	/^f0105c8d:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
f0105c94	obj/kern/kernel.asm	/^f0105c94:	eb 62                	jmp    f0105cf8 <sched_yield+0xbe>$/;"	l
f0105c96	obj/kern/kernel.asm	/^f0105c96:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0105c99	obj/kern/kernel.asm	/^f0105c99:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0105c9c	obj/kern/kernel.asm	/^f0105c9c:	01 c2                	add    %eax,%edx$/;"	l
f0105c9e	obj/kern/kernel.asm	/^f0105c9e:	89 d0                	mov    %edx,%eax$/;"	l
f0105ca0	obj/kern/kernel.asm	/^f0105ca0:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
f0105ca3	obj/kern/kernel.asm	/^f0105ca3:	c1 e8 16             	shr    $0x16,%eax$/;"	l
f0105ca6	obj/kern/kernel.asm	/^f0105ca6:	01 c2                	add    %eax,%edx$/;"	l
f0105ca8	obj/kern/kernel.asm	/^f0105ca8:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
f0105cae	obj/kern/kernel.asm	/^f0105cae:	29 c2                	sub    %eax,%edx$/;"	l
f0105cb0	obj/kern/kernel.asm	/^f0105cb0:	89 d0                	mov    %edx,%eax$/;"	l
f0105cb2	obj/kern/kernel.asm	/^f0105cb2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0105cb5	obj/kern/kernel.asm	/^f0105cb5:	8b 15 3c 02 23 f0    	mov    0xf023023c,%edx$/;"	l
f0105cbb	obj/kern/kernel.asm	/^f0105cbb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0105cbe	obj/kern/kernel.asm	/^f0105cbe:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0105cc1	obj/kern/kernel.asm	/^f0105cc1:	89 c1                	mov    %eax,%ecx$/;"	l
f0105cc3	obj/kern/kernel.asm	/^f0105cc3:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f0105cc6	obj/kern/kernel.asm	/^f0105cc6:	29 c1                	sub    %eax,%ecx$/;"	l
f0105cc8	obj/kern/kernel.asm	/^f0105cc8:	89 c8                	mov    %ecx,%eax$/;"	l
f0105cca	obj/kern/kernel.asm	/^f0105cca:	01 d0                	add    %edx,%eax$/;"	l
f0105ccc	obj/kern/kernel.asm	/^f0105ccc:	8b 40 54             	mov    0x54(%eax),%eax$/;"	l
f0105ccf	obj/kern/kernel.asm	/^f0105ccf:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0105cd2	obj/kern/kernel.asm	/^f0105cd2:	75 20                	jne    f0105cf4 <sched_yield+0xba>$/;"	l
f0105cd4	obj/kern/kernel.asm	/^f0105cd4:	8b 15 3c 02 23 f0    	mov    0xf023023c,%edx$/;"	l
f0105cda	obj/kern/kernel.asm	/^f0105cda:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0105cdd	obj/kern/kernel.asm	/^f0105cdd:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0105ce0	obj/kern/kernel.asm	/^f0105ce0:	89 c1                	mov    %eax,%ecx$/;"	l
f0105ce2	obj/kern/kernel.asm	/^f0105ce2:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f0105ce5	obj/kern/kernel.asm	/^f0105ce5:	29 c1                	sub    %eax,%ecx$/;"	l
f0105ce7	obj/kern/kernel.asm	/^f0105ce7:	89 c8                	mov    %ecx,%eax$/;"	l
f0105ce9	obj/kern/kernel.asm	/^f0105ce9:	01 d0                	add    %edx,%eax$/;"	l
f0105ceb	obj/kern/kernel.asm	/^f0105ceb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105cee	obj/kern/kernel.asm	/^f0105cee:	50                   	push   %eax$/;"	l
f0105cef	obj/kern/kernel.asm	/^f0105cef:	e8 5e e9 ff ff       	call   f0104652 <env_run>$/;"	l
f0105cf4	obj/kern/kernel.asm	/^f0105cf4:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
f0105cf8	obj/kern/kernel.asm	/^f0105cf8:	81 7d ec fe 03 00 00 	cmpl   $0x3fe,-0x14(%ebp)$/;"	l
f0105cff	obj/kern/kernel.asm	/^f0105cff:	7e 95                	jle    f0105c96 <sched_yield+0x5c>$/;"	l
f0105d01	obj/kern/kernel.asm	/^f0105d01:	8b 15 3c 02 23 f0    	mov    0xf023023c,%edx$/;"	l
f0105d07	obj/kern/kernel.asm	/^f0105d07:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0105d0a	obj/kern/kernel.asm	/^f0105d0a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0105d0d	obj/kern/kernel.asm	/^f0105d0d:	89 c1                	mov    %eax,%ecx$/;"	l
f0105d0f	obj/kern/kernel.asm	/^f0105d0f:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f0105d12	obj/kern/kernel.asm	/^f0105d12:	29 c1                	sub    %eax,%ecx$/;"	l
f0105d14	obj/kern/kernel.asm	/^f0105d14:	89 c8                	mov    %ecx,%eax$/;"	l
f0105d16	obj/kern/kernel.asm	/^f0105d16:	01 d0                	add    %edx,%eax$/;"	l
f0105d18	obj/kern/kernel.asm	/^f0105d18:	8b 40 54             	mov    0x54(%eax),%eax$/;"	l
f0105d1b	obj/kern/kernel.asm	/^f0105d1b:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0105d1e	obj/kern/kernel.asm	/^f0105d1e:	75 20                	jne    f0105d40 <sched_yield+0x106>$/;"	l
f0105d20	obj/kern/kernel.asm	/^f0105d20:	8b 15 3c 02 23 f0    	mov    0xf023023c,%edx$/;"	l
f0105d26	obj/kern/kernel.asm	/^f0105d26:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0105d29	obj/kern/kernel.asm	/^f0105d29:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0105d2c	obj/kern/kernel.asm	/^f0105d2c:	89 c1                	mov    %eax,%ecx$/;"	l
f0105d2e	obj/kern/kernel.asm	/^f0105d2e:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f0105d31	obj/kern/kernel.asm	/^f0105d31:	29 c1                	sub    %eax,%ecx$/;"	l
f0105d33	obj/kern/kernel.asm	/^f0105d33:	89 c8                	mov    %ecx,%eax$/;"	l
f0105d35	obj/kern/kernel.asm	/^f0105d35:	01 d0                	add    %edx,%eax$/;"	l
f0105d37	obj/kern/kernel.asm	/^f0105d37:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105d3a	obj/kern/kernel.asm	/^f0105d3a:	50                   	push   %eax$/;"	l
f0105d3b	obj/kern/kernel.asm	/^f0105d3b:	e8 12 e9 ff ff       	call   f0104652 <env_run>$/;"	l
f0105d40	obj/kern/kernel.asm	/^f0105d40:	e8 03 00 00 00       	call   f0105d48 <sched_halt>$/;"	l
f0105d45	obj/kern/kernel.asm	/^f0105d45:	90                   	nop$/;"	l
f0105d46	obj/kern/kernel.asm	/^f0105d46:	c9                   	leave  $/;"	l
f0105d47	obj/kern/kernel.asm	/^f0105d47:	c3                   	ret    $/;"	l
f0105d48	obj/kern/kernel.asm	/^f0105d48 <sched_halt>:$/;"	l
f0105d48	obj/kern/kernel.asm	/^f0105d48:	55                   	push   %ebp$/;"	l
f0105d49	obj/kern/kernel.asm	/^f0105d49:	89 e5                	mov    %esp,%ebp$/;"	l
f0105d4b	obj/kern/kernel.asm	/^f0105d4b:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0105d4e	obj/kern/kernel.asm	/^f0105d4e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0105d55	obj/kern/kernel.asm	/^f0105d55:	eb 61                	jmp    f0105db8 <sched_halt+0x70>$/;"	l
f0105d57	obj/kern/kernel.asm	/^f0105d57:	8b 15 3c 02 23 f0    	mov    0xf023023c,%edx$/;"	l
f0105d5d	obj/kern/kernel.asm	/^f0105d5d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0105d60	obj/kern/kernel.asm	/^f0105d60:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0105d63	obj/kern/kernel.asm	/^f0105d63:	89 c1                	mov    %eax,%ecx$/;"	l
f0105d65	obj/kern/kernel.asm	/^f0105d65:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f0105d68	obj/kern/kernel.asm	/^f0105d68:	29 c1                	sub    %eax,%ecx$/;"	l
f0105d6a	obj/kern/kernel.asm	/^f0105d6a:	89 c8                	mov    %ecx,%eax$/;"	l
f0105d6c	obj/kern/kernel.asm	/^f0105d6c:	01 d0                	add    %edx,%eax$/;"	l
f0105d6e	obj/kern/kernel.asm	/^f0105d6e:	8b 40 54             	mov    0x54(%eax),%eax$/;"	l
f0105d71	obj/kern/kernel.asm	/^f0105d71:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0105d74	obj/kern/kernel.asm	/^f0105d74:	74 4b                	je     f0105dc1 <sched_halt+0x79>$/;"	l
f0105d76	obj/kern/kernel.asm	/^f0105d76:	8b 15 3c 02 23 f0    	mov    0xf023023c,%edx$/;"	l
f0105d7c	obj/kern/kernel.asm	/^f0105d7c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0105d7f	obj/kern/kernel.asm	/^f0105d7f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0105d82	obj/kern/kernel.asm	/^f0105d82:	89 c1                	mov    %eax,%ecx$/;"	l
f0105d84	obj/kern/kernel.asm	/^f0105d84:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f0105d87	obj/kern/kernel.asm	/^f0105d87:	29 c1                	sub    %eax,%ecx$/;"	l
f0105d89	obj/kern/kernel.asm	/^f0105d89:	89 c8                	mov    %ecx,%eax$/;"	l
f0105d8b	obj/kern/kernel.asm	/^f0105d8b:	01 d0                	add    %edx,%eax$/;"	l
f0105d8d	obj/kern/kernel.asm	/^f0105d8d:	8b 40 54             	mov    0x54(%eax),%eax$/;"	l
f0105d90	obj/kern/kernel.asm	/^f0105d90:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0105d93	obj/kern/kernel.asm	/^f0105d93:	74 2c                	je     f0105dc1 <sched_halt+0x79>$/;"	l
f0105d95	obj/kern/kernel.asm	/^f0105d95:	8b 15 3c 02 23 f0    	mov    0xf023023c,%edx$/;"	l
f0105d9b	obj/kern/kernel.asm	/^f0105d9b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0105d9e	obj/kern/kernel.asm	/^f0105d9e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0105da1	obj/kern/kernel.asm	/^f0105da1:	89 c1                	mov    %eax,%ecx$/;"	l
f0105da3	obj/kern/kernel.asm	/^f0105da3:	c1 e1 05             	shl    $0x5,%ecx$/;"	l
f0105da6	obj/kern/kernel.asm	/^f0105da6:	29 c1                	sub    %eax,%ecx$/;"	l
f0105da8	obj/kern/kernel.asm	/^f0105da8:	89 c8                	mov    %ecx,%eax$/;"	l
f0105daa	obj/kern/kernel.asm	/^f0105daa:	01 d0                	add    %edx,%eax$/;"	l
f0105dac	obj/kern/kernel.asm	/^f0105dac:	8b 40 54             	mov    0x54(%eax),%eax$/;"	l
f0105daf	obj/kern/kernel.asm	/^f0105daf:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0105db2	obj/kern/kernel.asm	/^f0105db2:	74 0d                	je     f0105dc1 <sched_halt+0x79>$/;"	l
f0105db4	obj/kern/kernel.asm	/^f0105db4:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f0105db8	obj/kern/kernel.asm	/^f0105db8:	81 7d f4 ff 03 00 00 	cmpl   $0x3ff,-0xc(%ebp)$/;"	l
f0105dbf	obj/kern/kernel.asm	/^f0105dbf:	7e 96                	jle    f0105d57 <sched_halt+0xf>$/;"	l
f0105dc1	obj/kern/kernel.asm	/^f0105dc1:	81 7d f4 00 04 00 00 	cmpl   $0x400,-0xc(%ebp)$/;"	l
f0105dc8	obj/kern/kernel.asm	/^f0105dc8:	75 1f                	jne    f0105de9 <sched_halt+0xa1>$/;"	l
f0105dca	obj/kern/kernel.asm	/^f0105dca:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105dcd	obj/kern/kernel.asm	/^f0105dcd:	68 94 9c 10 f0       	push   $0xf0109c94$/;"	l
f0105dd2	obj/kern/kernel.asm	/^f0105dd2:	e8 d7 eb ff ff       	call   f01049ae <cprintf>$/;"	l
f0105dd7	obj/kern/kernel.asm	/^f0105dd7:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105dda	obj/kern/kernel.asm	/^f0105dda:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105ddd	obj/kern/kernel.asm	/^f0105ddd:	6a 00                	push   $0x0$/;"	l
f0105ddf	obj/kern/kernel.asm	/^f0105ddf:	e8 38 b4 ff ff       	call   f010121c <monitor>$/;"	l
f0105de4	obj/kern/kernel.asm	/^f0105de4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105de7	obj/kern/kernel.asm	/^f0105de7:	eb f1                	jmp    f0105dda <sched_halt+0x92>$/;"	l
f0105de9	obj/kern/kernel.asm	/^f0105de9:	e8 71 1f 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105dee	obj/kern/kernel.asm	/^f0105dee:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105df1	obj/kern/kernel.asm	/^f0105df1:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0105df6	obj/kern/kernel.asm	/^f0105df6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0105dfc	obj/kern/kernel.asm	/^f0105dfc:	a1 ec 0e 23 f0       	mov    0xf0230eec,%eax$/;"	l
f0105e01	obj/kern/kernel.asm	/^f0105e01:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105e04	obj/kern/kernel.asm	/^f0105e04:	50                   	push   %eax$/;"	l
f0105e05	obj/kern/kernel.asm	/^f0105e05:	6a 49                	push   $0x49$/;"	l
f0105e07	obj/kern/kernel.asm	/^f0105e07:	68 bd 9c 10 f0       	push   $0xf0109cbd$/;"	l
f0105e0c	obj/kern/kernel.asm	/^f0105e0c:	e8 fc fd ff ff       	call   f0105c0d <_paddr>$/;"	l
f0105e11	obj/kern/kernel.asm	/^f0105e11:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105e14	obj/kern/kernel.asm	/^f0105e14:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105e17	obj/kern/kernel.asm	/^f0105e17:	50                   	push   %eax$/;"	l
f0105e18	obj/kern/kernel.asm	/^f0105e18:	e8 af fd ff ff       	call   f0105bcc <lcr3>$/;"	l
f0105e1d	obj/kern/kernel.asm	/^f0105e1d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105e20	obj/kern/kernel.asm	/^f0105e20:	e8 3a 1f 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105e25	obj/kern/kernel.asm	/^f0105e25:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105e28	obj/kern/kernel.asm	/^f0105e28:	05 20 10 23 f0       	add    $0xf0231020,%eax$/;"	l
f0105e2d	obj/kern/kernel.asm	/^f0105e2d:	83 c0 04             	add    $0x4,%eax$/;"	l
f0105e30	obj/kern/kernel.asm	/^f0105e30:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105e33	obj/kern/kernel.asm	/^f0105e33:	6a 02                	push   $0x2$/;"	l
f0105e35	obj/kern/kernel.asm	/^f0105e35:	50                   	push   %eax$/;"	l
f0105e36	obj/kern/kernel.asm	/^f0105e36:	e8 9d fd ff ff       	call   f0105bd8 <xchg>$/;"	l
f0105e3b	obj/kern/kernel.asm	/^f0105e3b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105e3e	obj/kern/kernel.asm	/^f0105e3e:	e8 af fd ff ff       	call   f0105bf2 <unlock_kernel>$/;"	l
f0105e43	obj/kern/kernel.asm	/^f0105e43:	e8 17 1f 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105e48	obj/kern/kernel.asm	/^f0105e48:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105e4b	obj/kern/kernel.asm	/^f0105e4b:	05 30 10 23 f0       	add    $0xf0231030,%eax$/;"	l
f0105e50	obj/kern/kernel.asm	/^f0105e50:	8b 00                	mov    (%eax),%eax$/;"	l
f0105e52	obj/kern/kernel.asm	/^f0105e52:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f0105e57	obj/kern/kernel.asm	/^f0105e57:	89 c4                	mov    %eax,%esp$/;"	l
f0105e59	obj/kern/kernel.asm	/^f0105e59:	6a 00                	push   $0x0$/;"	l
f0105e5b	obj/kern/kernel.asm	/^f0105e5b:	6a 00                	push   $0x0$/;"	l
f0105e5d	obj/kern/kernel.asm	/^f0105e5d:	fb                   	sti    $/;"	l
f0105e5e	obj/kern/kernel.asm	/^f0105e5e:	f4                   	hlt    $/;"	l
f0105e5f	obj/kern/kernel.asm	/^f0105e5f:	eb fd                	jmp    f0105e5e <sched_halt+0x116>$/;"	l
f0105e61	obj/kern/kernel.asm	/^f0105e61:	90                   	nop$/;"	l
f0105e62	obj/kern/kernel.asm	/^f0105e62:	c9                   	leave  $/;"	l
f0105e63	obj/kern/kernel.asm	/^f0105e63:	c3                   	ret    $/;"	l
f0105e64	obj/kern/kernel.asm	/^f0105e64 <sys_cputs>:$/;"	l
f0105e64	obj/kern/kernel.asm	/^f0105e64:	55                   	push   %ebp$/;"	l
f0105e65	obj/kern/kernel.asm	/^f0105e65:	89 e5                	mov    %esp,%ebp$/;"	l
f0105e67	obj/kern/kernel.asm	/^f0105e67:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105e6a	obj/kern/kernel.asm	/^f0105e6a:	e8 f0 1e 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105e6f	obj/kern/kernel.asm	/^f0105e6f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105e72	obj/kern/kernel.asm	/^f0105e72:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0105e77	obj/kern/kernel.asm	/^f0105e77:	8b 00                	mov    (%eax),%eax$/;"	l
f0105e79	obj/kern/kernel.asm	/^f0105e79:	6a 05                	push   $0x5$/;"	l
f0105e7b	obj/kern/kernel.asm	/^f0105e7b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105e7e	obj/kern/kernel.asm	/^f0105e7e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105e81	obj/kern/kernel.asm	/^f0105e81:	50                   	push   %eax$/;"	l
f0105e82	obj/kern/kernel.asm	/^f0105e82:	e8 12 bf ff ff       	call   f0101d99 <user_mem_assert>$/;"	l
f0105e87	obj/kern/kernel.asm	/^f0105e87:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105e8a	obj/kern/kernel.asm	/^f0105e8a:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105e8d	obj/kern/kernel.asm	/^f0105e8d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105e90	obj/kern/kernel.asm	/^f0105e90:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0105e93	obj/kern/kernel.asm	/^f0105e93:	68 cc 9c 10 f0       	push   $0xf0109ccc$/;"	l
f0105e98	obj/kern/kernel.asm	/^f0105e98:	e8 11 eb ff ff       	call   f01049ae <cprintf>$/;"	l
f0105e9d	obj/kern/kernel.asm	/^f0105e9d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105ea0	obj/kern/kernel.asm	/^f0105ea0:	90                   	nop$/;"	l
f0105ea1	obj/kern/kernel.asm	/^f0105ea1:	c9                   	leave  $/;"	l
f0105ea2	obj/kern/kernel.asm	/^f0105ea2:	c3                   	ret    $/;"	l
f0105ea3	obj/kern/kernel.asm	/^f0105ea3 <sys_cgetc>:$/;"	l
f0105ea3	obj/kern/kernel.asm	/^f0105ea3:	55                   	push   %ebp$/;"	l
f0105ea4	obj/kern/kernel.asm	/^f0105ea4:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ea6	obj/kern/kernel.asm	/^f0105ea6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105ea9	obj/kern/kernel.asm	/^f0105ea9:	e8 e3 ab ff ff       	call   f0100a91 <cons_getc>$/;"	l
f0105eae	obj/kern/kernel.asm	/^f0105eae:	c9                   	leave  $/;"	l
f0105eaf	obj/kern/kernel.asm	/^f0105eaf:	c3                   	ret    $/;"	l
f0105eb0	obj/kern/kernel.asm	/^f0105eb0 <sys_getenvid>:$/;"	l
f0105eb0	obj/kern/kernel.asm	/^f0105eb0:	55                   	push   %ebp$/;"	l
f0105eb1	obj/kern/kernel.asm	/^f0105eb1:	89 e5                	mov    %esp,%ebp$/;"	l
f0105eb3	obj/kern/kernel.asm	/^f0105eb3:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105eb6	obj/kern/kernel.asm	/^f0105eb6:	e8 a4 1e 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105ebb	obj/kern/kernel.asm	/^f0105ebb:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105ebe	obj/kern/kernel.asm	/^f0105ebe:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0105ec3	obj/kern/kernel.asm	/^f0105ec3:	8b 00                	mov    (%eax),%eax$/;"	l
f0105ec5	obj/kern/kernel.asm	/^f0105ec5:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105ec8	obj/kern/kernel.asm	/^f0105ec8:	c9                   	leave  $/;"	l
f0105ec9	obj/kern/kernel.asm	/^f0105ec9:	c3                   	ret    $/;"	l
f0105eca	obj/kern/kernel.asm	/^f0105eca <sys_env_destroy>:$/;"	l
f0105eca	obj/kern/kernel.asm	/^f0105eca:	55                   	push   %ebp$/;"	l
f0105ecb	obj/kern/kernel.asm	/^f0105ecb:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ecd	obj/kern/kernel.asm	/^f0105ecd:	53                   	push   %ebx$/;"	l
f0105ece	obj/kern/kernel.asm	/^f0105ece:	83 ec 14             	sub    $0x14,%esp$/;"	l
f0105ed1	obj/kern/kernel.asm	/^f0105ed1:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105ed4	obj/kern/kernel.asm	/^f0105ed4:	6a 01                	push   $0x1$/;"	l
f0105ed6	obj/kern/kernel.asm	/^f0105ed6:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
f0105ed9	obj/kern/kernel.asm	/^f0105ed9:	50                   	push   %eax$/;"	l
f0105eda	obj/kern/kernel.asm	/^f0105eda:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0105edd	obj/kern/kernel.asm	/^f0105edd:	e8 17 df ff ff       	call   f0103df9 <envid2env>$/;"	l
f0105ee2	obj/kern/kernel.asm	/^f0105ee2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105ee5	obj/kern/kernel.asm	/^f0105ee5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0105ee8	obj/kern/kernel.asm	/^f0105ee8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0105eec	obj/kern/kernel.asm	/^f0105eec:	79 05                	jns    f0105ef3 <sys_env_destroy+0x29>$/;"	l
f0105eee	obj/kern/kernel.asm	/^f0105eee:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0105ef1	obj/kern/kernel.asm	/^f0105ef1:	eb 79                	jmp    f0105f6c <sys_env_destroy+0xa2>$/;"	l
f0105ef3	obj/kern/kernel.asm	/^f0105ef3:	e8 67 1e 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105ef8	obj/kern/kernel.asm	/^f0105ef8:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105efb	obj/kern/kernel.asm	/^f0105efb:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0105f00	obj/kern/kernel.asm	/^f0105f00:	8b 10                	mov    (%eax),%edx$/;"	l
f0105f02	obj/kern/kernel.asm	/^f0105f02:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0105f05	obj/kern/kernel.asm	/^f0105f05:	39 c2                	cmp    %eax,%edx$/;"	l
f0105f07	obj/kern/kernel.asm	/^f0105f07:	75 25                	jne    f0105f2e <sys_env_destroy+0x64>$/;"	l
f0105f09	obj/kern/kernel.asm	/^f0105f09:	e8 51 1e 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105f0e	obj/kern/kernel.asm	/^f0105f0e:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105f11	obj/kern/kernel.asm	/^f0105f11:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0105f16	obj/kern/kernel.asm	/^f0105f16:	8b 00                	mov    (%eax),%eax$/;"	l
f0105f18	obj/kern/kernel.asm	/^f0105f18:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105f1b	obj/kern/kernel.asm	/^f0105f1b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105f1e	obj/kern/kernel.asm	/^f0105f1e:	50                   	push   %eax$/;"	l
f0105f1f	obj/kern/kernel.asm	/^f0105f1f:	68 d1 9c 10 f0       	push   $0xf0109cd1$/;"	l
f0105f24	obj/kern/kernel.asm	/^f0105f24:	e8 85 ea ff ff       	call   f01049ae <cprintf>$/;"	l
f0105f29	obj/kern/kernel.asm	/^f0105f29:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105f2c	obj/kern/kernel.asm	/^f0105f2c:	eb 2a                	jmp    f0105f58 <sys_env_destroy+0x8e>$/;"	l
f0105f2e	obj/kern/kernel.asm	/^f0105f2e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0105f31	obj/kern/kernel.asm	/^f0105f31:	8b 58 48             	mov    0x48(%eax),%ebx$/;"	l
f0105f34	obj/kern/kernel.asm	/^f0105f34:	e8 26 1e 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105f39	obj/kern/kernel.asm	/^f0105f39:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105f3c	obj/kern/kernel.asm	/^f0105f3c:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0105f41	obj/kern/kernel.asm	/^f0105f41:	8b 00                	mov    (%eax),%eax$/;"	l
f0105f43	obj/kern/kernel.asm	/^f0105f43:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105f46	obj/kern/kernel.asm	/^f0105f46:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0105f49	obj/kern/kernel.asm	/^f0105f49:	53                   	push   %ebx$/;"	l
f0105f4a	obj/kern/kernel.asm	/^f0105f4a:	50                   	push   %eax$/;"	l
f0105f4b	obj/kern/kernel.asm	/^f0105f4b:	68 ec 9c 10 f0       	push   $0xf0109cec$/;"	l
f0105f50	obj/kern/kernel.asm	/^f0105f50:	e8 59 ea ff ff       	call   f01049ae <cprintf>$/;"	l
f0105f55	obj/kern/kernel.asm	/^f0105f55:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105f58	obj/kern/kernel.asm	/^f0105f58:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0105f5b	obj/kern/kernel.asm	/^f0105f5b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0105f5e	obj/kern/kernel.asm	/^f0105f5e:	50                   	push   %eax$/;"	l
f0105f5f	obj/kern/kernel.asm	/^f0105f5f:	e8 42 e6 ff ff       	call   f01045a6 <env_destroy>$/;"	l
f0105f64	obj/kern/kernel.asm	/^f0105f64:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105f67	obj/kern/kernel.asm	/^f0105f67:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105f6c	obj/kern/kernel.asm	/^f0105f6c:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0105f6f	obj/kern/kernel.asm	/^f0105f6f:	c9                   	leave  $/;"	l
f0105f70	obj/kern/kernel.asm	/^f0105f70:	c3                   	ret    $/;"	l
f0105f71	obj/kern/kernel.asm	/^f0105f71 <sys_yield>:$/;"	l
f0105f71	obj/kern/kernel.asm	/^f0105f71:	55                   	push   %ebp$/;"	l
f0105f72	obj/kern/kernel.asm	/^f0105f72:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f74	obj/kern/kernel.asm	/^f0105f74:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105f77	obj/kern/kernel.asm	/^f0105f77:	e8 be fc ff ff       	call   f0105c3a <sched_yield>$/;"	l
f0105f7c	obj/kern/kernel.asm	/^f0105f7c <sys_exofork>:$/;"	l
f0105f7c	obj/kern/kernel.asm	/^f0105f7c:	55                   	push   %ebp$/;"	l
f0105f7d	obj/kern/kernel.asm	/^f0105f7d:	89 e5                	mov    %esp,%ebp$/;"	l
f0105f7f	obj/kern/kernel.asm	/^f0105f7f:	57                   	push   %edi$/;"	l
f0105f80	obj/kern/kernel.asm	/^f0105f80:	56                   	push   %esi$/;"	l
f0105f81	obj/kern/kernel.asm	/^f0105f81:	53                   	push   %ebx$/;"	l
f0105f82	obj/kern/kernel.asm	/^f0105f82:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0105f85	obj/kern/kernel.asm	/^f0105f85:	e8 d5 1d 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105f8a	obj/kern/kernel.asm	/^f0105f8a:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105f8d	obj/kern/kernel.asm	/^f0105f8d:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0105f92	obj/kern/kernel.asm	/^f0105f92:	8b 00                	mov    (%eax),%eax$/;"	l
f0105f94	obj/kern/kernel.asm	/^f0105f94:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105f97	obj/kern/kernel.asm	/^f0105f97:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0105f9a	obj/kern/kernel.asm	/^f0105f9a:	50                   	push   %eax$/;"	l
f0105f9b	obj/kern/kernel.asm	/^f0105f9b:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f0105f9e	obj/kern/kernel.asm	/^f0105f9e:	50                   	push   %eax$/;"	l
f0105f9f	obj/kern/kernel.asm	/^f0105f9f:	e8 8f e0 ff ff       	call   f0104033 <env_alloc>$/;"	l
f0105fa4	obj/kern/kernel.asm	/^f0105fa4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0105fa7	obj/kern/kernel.asm	/^f0105fa7:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0105faa	obj/kern/kernel.asm	/^f0105faa:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0105fae	obj/kern/kernel.asm	/^f0105fae:	79 05                	jns    f0105fb5 <sys_exofork+0x39>$/;"	l
f0105fb0	obj/kern/kernel.asm	/^f0105fb0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0105fb3	obj/kern/kernel.asm	/^f0105fb3:	eb 3d                	jmp    f0105ff2 <sys_exofork+0x76>$/;"	l
f0105fb5	obj/kern/kernel.asm	/^f0105fb5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105fb8	obj/kern/kernel.asm	/^f0105fb8:	c7 40 54 04 00 00 00 	movl   $0x4,0x54(%eax)$/;"	l
f0105fbf	obj/kern/kernel.asm	/^f0105fbf:	8b 5d e0             	mov    -0x20(%ebp),%ebx$/;"	l
f0105fc2	obj/kern/kernel.asm	/^f0105fc2:	e8 98 1d 00 00       	call   f0107d5f <cpunum>$/;"	l
f0105fc7	obj/kern/kernel.asm	/^f0105fc7:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0105fca	obj/kern/kernel.asm	/^f0105fca:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0105fcf	obj/kern/kernel.asm	/^f0105fcf:	8b 00                	mov    (%eax),%eax$/;"	l
f0105fd1	obj/kern/kernel.asm	/^f0105fd1:	89 da                	mov    %ebx,%edx$/;"	l
f0105fd3	obj/kern/kernel.asm	/^f0105fd3:	89 c3                	mov    %eax,%ebx$/;"	l
f0105fd5	obj/kern/kernel.asm	/^f0105fd5:	b8 11 00 00 00       	mov    $0x11,%eax$/;"	l
f0105fda	obj/kern/kernel.asm	/^f0105fda:	89 d7                	mov    %edx,%edi$/;"	l
f0105fdc	obj/kern/kernel.asm	/^f0105fdc:	89 de                	mov    %ebx,%esi$/;"	l
f0105fde	obj/kern/kernel.asm	/^f0105fde:	89 c1                	mov    %eax,%ecx$/;"	l
f0105fe0	obj/kern/kernel.asm	/^f0105fe0:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f0105fe2	obj/kern/kernel.asm	/^f0105fe2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105fe5	obj/kern/kernel.asm	/^f0105fe5:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
f0105fec	obj/kern/kernel.asm	/^f0105fec:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0105fef	obj/kern/kernel.asm	/^f0105fef:	8b 40 48             	mov    0x48(%eax),%eax$/;"	l
f0105ff2	obj/kern/kernel.asm	/^f0105ff2:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0105ff5	obj/kern/kernel.asm	/^f0105ff5:	5b                   	pop    %ebx$/;"	l
f0105ff6	obj/kern/kernel.asm	/^f0105ff6:	5e                   	pop    %esi$/;"	l
f0105ff7	obj/kern/kernel.asm	/^f0105ff7:	5f                   	pop    %edi$/;"	l
f0105ff8	obj/kern/kernel.asm	/^f0105ff8:	5d                   	pop    %ebp$/;"	l
f0105ff9	obj/kern/kernel.asm	/^f0105ff9:	c3                   	ret    $/;"	l
f0105ffa	obj/kern/kernel.asm	/^f0105ffa <sys_env_set_status>:$/;"	l
f0105ffa	obj/kern/kernel.asm	/^f0105ffa:	55                   	push   %ebp$/;"	l
f0105ffb	obj/kern/kernel.asm	/^f0105ffb:	89 e5                	mov    %esp,%ebp$/;"	l
f0105ffd	obj/kern/kernel.asm	/^f0105ffd:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106000	obj/kern/kernel.asm	/^f0106000:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0106004	obj/kern/kernel.asm	/^f0106004:	79 07                	jns    f010600d <sys_env_set_status+0x13>$/;"	l
f0106006	obj/kern/kernel.asm	/^f0106006:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010600b	obj/kern/kernel.asm	/^f010600b:	eb 43                	jmp    f0106050 <sys_env_set_status+0x56>$/;"	l
f010600d	obj/kern/kernel.asm	/^f010600d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106010	obj/kern/kernel.asm	/^f0106010:	6a 01                	push   $0x1$/;"	l
f0106012	obj/kern/kernel.asm	/^f0106012:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
f0106015	obj/kern/kernel.asm	/^f0106015:	50                   	push   %eax$/;"	l
f0106016	obj/kern/kernel.asm	/^f0106016:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0106019	obj/kern/kernel.asm	/^f0106019:	e8 db dd ff ff       	call   f0103df9 <envid2env>$/;"	l
f010601e	obj/kern/kernel.asm	/^f010601e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106021	obj/kern/kernel.asm	/^f0106021:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0106024	obj/kern/kernel.asm	/^f0106024:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0106028	obj/kern/kernel.asm	/^f0106028:	79 05                	jns    f010602f <sys_env_set_status+0x35>$/;"	l
f010602a	obj/kern/kernel.asm	/^f010602a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010602d	obj/kern/kernel.asm	/^f010602d:	eb 21                	jmp    f0106050 <sys_env_set_status+0x56>$/;"	l
f010602f	obj/kern/kernel.asm	/^f010602f:	83 7d 0c 02          	cmpl   $0x2,0xc(%ebp)$/;"	l
f0106033	obj/kern/kernel.asm	/^f0106033:	74 0d                	je     f0106042 <sys_env_set_status+0x48>$/;"	l
f0106035	obj/kern/kernel.asm	/^f0106035:	83 7d 0c 04          	cmpl   $0x4,0xc(%ebp)$/;"	l
f0106039	obj/kern/kernel.asm	/^f0106039:	74 07                	je     f0106042 <sys_env_set_status+0x48>$/;"	l
f010603b	obj/kern/kernel.asm	/^f010603b:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0106040	obj/kern/kernel.asm	/^f0106040:	eb 0e                	jmp    f0106050 <sys_env_set_status+0x56>$/;"	l
f0106042	obj/kern/kernel.asm	/^f0106042:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0106045	obj/kern/kernel.asm	/^f0106045:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106048	obj/kern/kernel.asm	/^f0106048:	89 50 54             	mov    %edx,0x54(%eax)$/;"	l
f010604b	obj/kern/kernel.asm	/^f010604b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106050	obj/kern/kernel.asm	/^f0106050:	c9                   	leave  $/;"	l
f0106051	obj/kern/kernel.asm	/^f0106051:	c3                   	ret    $/;"	l
f0106052	obj/kern/kernel.asm	/^f0106052 <sys_env_set_pgfault_upcall>:$/;"	l
f0106052	obj/kern/kernel.asm	/^f0106052:	55                   	push   %ebp$/;"	l
f0106053	obj/kern/kernel.asm	/^f0106053:	89 e5                	mov    %esp,%ebp$/;"	l
f0106055	obj/kern/kernel.asm	/^f0106055:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106058	obj/kern/kernel.asm	/^f0106058:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010605b	obj/kern/kernel.asm	/^f010605b:	6a 01                	push   $0x1$/;"	l
f010605d	obj/kern/kernel.asm	/^f010605d:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
f0106060	obj/kern/kernel.asm	/^f0106060:	50                   	push   %eax$/;"	l
f0106061	obj/kern/kernel.asm	/^f0106061:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0106064	obj/kern/kernel.asm	/^f0106064:	e8 90 dd ff ff       	call   f0103df9 <envid2env>$/;"	l
f0106069	obj/kern/kernel.asm	/^f0106069:	83 c4 10             	add    $0x10,%esp$/;"	l
f010606c	obj/kern/kernel.asm	/^f010606c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f010606f	obj/kern/kernel.asm	/^f010606f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0106073	obj/kern/kernel.asm	/^f0106073:	79 05                	jns    f010607a <sys_env_set_pgfault_upcall+0x28>$/;"	l
f0106075	obj/kern/kernel.asm	/^f0106075:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106078	obj/kern/kernel.asm	/^f0106078:	eb 0e                	jmp    f0106088 <sys_env_set_pgfault_upcall+0x36>$/;"	l
f010607a	obj/kern/kernel.asm	/^f010607a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010607d	obj/kern/kernel.asm	/^f010607d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106080	obj/kern/kernel.asm	/^f0106080:	89 50 64             	mov    %edx,0x64(%eax)$/;"	l
f0106083	obj/kern/kernel.asm	/^f0106083:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106088	obj/kern/kernel.asm	/^f0106088:	c9                   	leave  $/;"	l
f0106089	obj/kern/kernel.asm	/^f0106089:	c3                   	ret    $/;"	l
f010608a	obj/kern/kernel.asm	/^f010608a <sys_page_alloc>:$/;"	l
f010608a	obj/kern/kernel.asm	/^f010608a:	55                   	push   %ebp$/;"	l
f010608b	obj/kern/kernel.asm	/^f010608b:	89 e5                	mov    %esp,%ebp$/;"	l
f010608d	obj/kern/kernel.asm	/^f010608d:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106090	obj/kern/kernel.asm	/^f0106090:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0106094	obj/kern/kernel.asm	/^f0106094:	79 0a                	jns    f01060a0 <sys_page_alloc+0x16>$/;"	l
f0106096	obj/kern/kernel.asm	/^f0106096:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010609b	obj/kern/kernel.asm	/^f010609b:	e9 cb 00 00 00       	jmp    f010616b <sys_page_alloc+0xe1>$/;"	l
f01060a0	obj/kern/kernel.asm	/^f01060a0:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01060a3	obj/kern/kernel.asm	/^f01060a3:	6a 01                	push   $0x1$/;"	l
f01060a5	obj/kern/kernel.asm	/^f01060a5:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f01060a8	obj/kern/kernel.asm	/^f01060a8:	50                   	push   %eax$/;"	l
f01060a9	obj/kern/kernel.asm	/^f01060a9:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01060ac	obj/kern/kernel.asm	/^f01060ac:	e8 48 dd ff ff       	call   f0103df9 <envid2env>$/;"	l
f01060b1	obj/kern/kernel.asm	/^f01060b1:	83 c4 10             	add    $0x10,%esp$/;"	l
f01060b4	obj/kern/kernel.asm	/^f01060b4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01060b7	obj/kern/kernel.asm	/^f01060b7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f01060bb	obj/kern/kernel.asm	/^f01060bb:	79 08                	jns    f01060c5 <sys_page_alloc+0x3b>$/;"	l
f01060bd	obj/kern/kernel.asm	/^f01060bd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01060c0	obj/kern/kernel.asm	/^f01060c0:	e9 a6 00 00 00       	jmp    f010616b <sys_page_alloc+0xe1>$/;"	l
f01060c5	obj/kern/kernel.asm	/^f01060c5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01060c8	obj/kern/kernel.asm	/^f01060c8:	3d ff ff bf ee       	cmp    $0xeebfffff,%eax$/;"	l
f01060cd	obj/kern/kernel.asm	/^f01060cd:	77 0c                	ja     f01060db <sys_page_alloc+0x51>$/;"	l
f01060cf	obj/kern/kernel.asm	/^f01060cf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01060d2	obj/kern/kernel.asm	/^f01060d2:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
f01060d7	obj/kern/kernel.asm	/^f01060d7:	85 c0                	test   %eax,%eax$/;"	l
f01060d9	obj/kern/kernel.asm	/^f01060d9:	74 0a                	je     f01060e5 <sys_page_alloc+0x5b>$/;"	l
f01060db	obj/kern/kernel.asm	/^f01060db:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01060e0	obj/kern/kernel.asm	/^f01060e0:	e9 86 00 00 00       	jmp    f010616b <sys_page_alloc+0xe1>$/;"	l
f01060e5	obj/kern/kernel.asm	/^f01060e5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01060e8	obj/kern/kernel.asm	/^f01060e8:	83 e0 04             	and    $0x4,%eax$/;"	l
f01060eb	obj/kern/kernel.asm	/^f01060eb:	85 c0                	test   %eax,%eax$/;"	l
f01060ed	obj/kern/kernel.asm	/^f01060ed:	74 16                	je     f0106105 <sys_page_alloc+0x7b>$/;"	l
f01060ef	obj/kern/kernel.asm	/^f01060ef:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01060f2	obj/kern/kernel.asm	/^f01060f2:	83 e0 01             	and    $0x1,%eax$/;"	l
f01060f5	obj/kern/kernel.asm	/^f01060f5:	85 c0                	test   %eax,%eax$/;"	l
f01060f7	obj/kern/kernel.asm	/^f01060f7:	74 0c                	je     f0106105 <sys_page_alloc+0x7b>$/;"	l
f01060f9	obj/kern/kernel.asm	/^f01060f9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01060fc	obj/kern/kernel.asm	/^f01060fc:	25 f8 f1 ff ff       	and    $0xfffff1f8,%eax$/;"	l
f0106101	obj/kern/kernel.asm	/^f0106101:	85 c0                	test   %eax,%eax$/;"	l
f0106103	obj/kern/kernel.asm	/^f0106103:	74 07                	je     f010610c <sys_page_alloc+0x82>$/;"	l
f0106105	obj/kern/kernel.asm	/^f0106105:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010610a	obj/kern/kernel.asm	/^f010610a:	eb 5f                	jmp    f010616b <sys_page_alloc+0xe1>$/;"	l
f010610c	obj/kern/kernel.asm	/^f010610c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010610f	obj/kern/kernel.asm	/^f010610f:	6a 01                	push   $0x1$/;"	l
f0106111	obj/kern/kernel.asm	/^f0106111:	e8 9e b7 ff ff       	call   f01018b4 <page_alloc>$/;"	l
f0106116	obj/kern/kernel.asm	/^f0106116:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106119	obj/kern/kernel.asm	/^f0106119:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010611c	obj/kern/kernel.asm	/^f010611c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0106120	obj/kern/kernel.asm	/^f0106120:	75 07                	jne    f0106129 <sys_page_alloc+0x9f>$/;"	l
f0106122	obj/kern/kernel.asm	/^f0106122:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0106127	obj/kern/kernel.asm	/^f0106127:	eb 42                	jmp    f010616b <sys_page_alloc+0xe1>$/;"	l
f0106129	obj/kern/kernel.asm	/^f0106129:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010612c	obj/kern/kernel.asm	/^f010612c:	66 c7 40 04 01 00    	movw   $0x1,0x4(%eax)$/;"	l
f0106132	obj/kern/kernel.asm	/^f0106132:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0106135	obj/kern/kernel.asm	/^f0106135:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0106138	obj/kern/kernel.asm	/^f0106138:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010613b	obj/kern/kernel.asm	/^f010613b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010613e	obj/kern/kernel.asm	/^f010613e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f0106141	obj/kern/kernel.asm	/^f0106141:	50                   	push   %eax$/;"	l
f0106142	obj/kern/kernel.asm	/^f0106142:	e8 8e b9 ff ff       	call   f0101ad5 <page_insert>$/;"	l
f0106147	obj/kern/kernel.asm	/^f0106147:	83 c4 10             	add    $0x10,%esp$/;"	l
f010614a	obj/kern/kernel.asm	/^f010614a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f010614d	obj/kern/kernel.asm	/^f010614d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0106151	obj/kern/kernel.asm	/^f0106151:	79 13                	jns    f0106166 <sys_page_alloc+0xdc>$/;"	l
f0106153	obj/kern/kernel.asm	/^f0106153:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106156	obj/kern/kernel.asm	/^f0106156:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f0106159	obj/kern/kernel.asm	/^f0106159:	e8 b9 b7 ff ff       	call   f0101917 <page_free>$/;"	l
f010615e	obj/kern/kernel.asm	/^f010615e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106161	obj/kern/kernel.asm	/^f0106161:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106164	obj/kern/kernel.asm	/^f0106164:	eb 05                	jmp    f010616b <sys_page_alloc+0xe1>$/;"	l
f0106166	obj/kern/kernel.asm	/^f0106166:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010616b	obj/kern/kernel.asm	/^f010616b:	c9                   	leave  $/;"	l
f010616c	obj/kern/kernel.asm	/^f010616c:	c3                   	ret    $/;"	l
f010616d	obj/kern/kernel.asm	/^f010616d <sys_page_map>:$/;"	l
f010616d	obj/kern/kernel.asm	/^f010616d:	55                   	push   %ebp$/;"	l
f010616e	obj/kern/kernel.asm	/^f010616e:	89 e5                	mov    %esp,%ebp$/;"	l
f0106170	obj/kern/kernel.asm	/^f0106170:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0106173	obj/kern/kernel.asm	/^f0106173:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0106177	obj/kern/kernel.asm	/^f0106177:	78 06                	js     f010617f <sys_page_map+0x12>$/;"	l
f0106179	obj/kern/kernel.asm	/^f0106179:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f010617d	obj/kern/kernel.asm	/^f010617d:	79 0a                	jns    f0106189 <sys_page_map+0x1c>$/;"	l
f010617f	obj/kern/kernel.asm	/^f010617f:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f0106184	obj/kern/kernel.asm	/^f0106184:	e9 29 01 00 00       	jmp    f01062b2 <sys_page_map+0x145>$/;"	l
f0106189	obj/kern/kernel.asm	/^f0106189:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010618c	obj/kern/kernel.asm	/^f010618c:	6a 01                	push   $0x1$/;"	l
f010618e	obj/kern/kernel.asm	/^f010618e:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0106191	obj/kern/kernel.asm	/^f0106191:	50                   	push   %eax$/;"	l
f0106192	obj/kern/kernel.asm	/^f0106192:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0106195	obj/kern/kernel.asm	/^f0106195:	e8 5f dc ff ff       	call   f0103df9 <envid2env>$/;"	l
f010619a	obj/kern/kernel.asm	/^f010619a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010619d	obj/kern/kernel.asm	/^f010619d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01061a0	obj/kern/kernel.asm	/^f01061a0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f01061a4	obj/kern/kernel.asm	/^f01061a4:	79 08                	jns    f01061ae <sys_page_map+0x41>$/;"	l
f01061a6	obj/kern/kernel.asm	/^f01061a6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01061a9	obj/kern/kernel.asm	/^f01061a9:	e9 04 01 00 00       	jmp    f01062b2 <sys_page_map+0x145>$/;"	l
f01061ae	obj/kern/kernel.asm	/^f01061ae:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01061b1	obj/kern/kernel.asm	/^f01061b1:	6a 01                	push   $0x1$/;"	l
f01061b3	obj/kern/kernel.asm	/^f01061b3:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
f01061b6	obj/kern/kernel.asm	/^f01061b6:	50                   	push   %eax$/;"	l
f01061b7	obj/kern/kernel.asm	/^f01061b7:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01061ba	obj/kern/kernel.asm	/^f01061ba:	e8 3a dc ff ff       	call   f0103df9 <envid2env>$/;"	l
f01061bf	obj/kern/kernel.asm	/^f01061bf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01061c2	obj/kern/kernel.asm	/^f01061c2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01061c5	obj/kern/kernel.asm	/^f01061c5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f01061c9	obj/kern/kernel.asm	/^f01061c9:	79 08                	jns    f01061d3 <sys_page_map+0x66>$/;"	l
f01061cb	obj/kern/kernel.asm	/^f01061cb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01061ce	obj/kern/kernel.asm	/^f01061ce:	e9 df 00 00 00       	jmp    f01062b2 <sys_page_map+0x145>$/;"	l
f01061d3	obj/kern/kernel.asm	/^f01061d3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01061d6	obj/kern/kernel.asm	/^f01061d6:	3d ff ff bf ee       	cmp    $0xeebfffff,%eax$/;"	l
f01061db	obj/kern/kernel.asm	/^f01061db:	77 0c                	ja     f01061e9 <sys_page_map+0x7c>$/;"	l
f01061dd	obj/kern/kernel.asm	/^f01061dd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01061e0	obj/kern/kernel.asm	/^f01061e0:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
f01061e5	obj/kern/kernel.asm	/^f01061e5:	85 c0                	test   %eax,%eax$/;"	l
f01061e7	obj/kern/kernel.asm	/^f01061e7:	74 0a                	je     f01061f3 <sys_page_map+0x86>$/;"	l
f01061e9	obj/kern/kernel.asm	/^f01061e9:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f01061ee	obj/kern/kernel.asm	/^f01061ee:	e9 bf 00 00 00       	jmp    f01062b2 <sys_page_map+0x145>$/;"	l
f01061f3	obj/kern/kernel.asm	/^f01061f3:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f01061f6	obj/kern/kernel.asm	/^f01061f6:	3d ff ff bf ee       	cmp    $0xeebfffff,%eax$/;"	l
f01061fb	obj/kern/kernel.asm	/^f01061fb:	77 0c                	ja     f0106209 <sys_page_map+0x9c>$/;"	l
f01061fd	obj/kern/kernel.asm	/^f01061fd:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106200	obj/kern/kernel.asm	/^f0106200:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
f0106205	obj/kern/kernel.asm	/^f0106205:	85 c0                	test   %eax,%eax$/;"	l
f0106207	obj/kern/kernel.asm	/^f0106207:	74 0a                	je     f0106213 <sys_page_map+0xa6>$/;"	l
f0106209	obj/kern/kernel.asm	/^f0106209:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010620e	obj/kern/kernel.asm	/^f010620e:	e9 9f 00 00 00       	jmp    f01062b2 <sys_page_map+0x145>$/;"	l
f0106213	obj/kern/kernel.asm	/^f0106213:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f010621a	obj/kern/kernel.asm	/^f010621a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010621d	obj/kern/kernel.asm	/^f010621d:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f0106220	obj/kern/kernel.asm	/^f0106220:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106223	obj/kern/kernel.asm	/^f0106223:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
f0106226	obj/kern/kernel.asm	/^f0106226:	52                   	push   %edx$/;"	l
f0106227	obj/kern/kernel.asm	/^f0106227:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f010622a	obj/kern/kernel.asm	/^f010622a:	50                   	push   %eax$/;"	l
f010622b	obj/kern/kernel.asm	/^f010622b:	e8 33 b9 ff ff       	call   f0101b63 <page_lookup>$/;"	l
f0106230	obj/kern/kernel.asm	/^f0106230:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106233	obj/kern/kernel.asm	/^f0106233:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0106236	obj/kern/kernel.asm	/^f0106236:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f010623a	obj/kern/kernel.asm	/^f010623a:	75 07                	jne    f0106243 <sys_page_map+0xd6>$/;"	l
f010623c	obj/kern/kernel.asm	/^f010623c:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0106241	obj/kern/kernel.asm	/^f0106241:	eb 6f                	jmp    f01062b2 <sys_page_map+0x145>$/;"	l
f0106243	obj/kern/kernel.asm	/^f0106243:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0106246	obj/kern/kernel.asm	/^f0106246:	83 e0 04             	and    $0x4,%eax$/;"	l
f0106249	obj/kern/kernel.asm	/^f0106249:	85 c0                	test   %eax,%eax$/;"	l
f010624b	obj/kern/kernel.asm	/^f010624b:	74 16                	je     f0106263 <sys_page_map+0xf6>$/;"	l
f010624d	obj/kern/kernel.asm	/^f010624d:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f0106250	obj/kern/kernel.asm	/^f0106250:	83 e0 01             	and    $0x1,%eax$/;"	l
f0106253	obj/kern/kernel.asm	/^f0106253:	85 c0                	test   %eax,%eax$/;"	l
f0106255	obj/kern/kernel.asm	/^f0106255:	74 0c                	je     f0106263 <sys_page_map+0xf6>$/;"	l
f0106257	obj/kern/kernel.asm	/^f0106257:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f010625a	obj/kern/kernel.asm	/^f010625a:	25 f8 f1 ff ff       	and    $0xfffff1f8,%eax$/;"	l
f010625f	obj/kern/kernel.asm	/^f010625f:	85 c0                	test   %eax,%eax$/;"	l
f0106261	obj/kern/kernel.asm	/^f0106261:	74 07                	je     f010626a <sys_page_map+0xfd>$/;"	l
f0106263	obj/kern/kernel.asm	/^f0106263:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0106268	obj/kern/kernel.asm	/^f0106268:	eb 48                	jmp    f01062b2 <sys_page_map+0x145>$/;"	l
f010626a	obj/kern/kernel.asm	/^f010626a:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f010626d	obj/kern/kernel.asm	/^f010626d:	83 e0 02             	and    $0x2,%eax$/;"	l
f0106270	obj/kern/kernel.asm	/^f0106270:	85 c0                	test   %eax,%eax$/;"	l
f0106272	obj/kern/kernel.asm	/^f0106272:	74 13                	je     f0106287 <sys_page_map+0x11a>$/;"	l
f0106274	obj/kern/kernel.asm	/^f0106274:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106277	obj/kern/kernel.asm	/^f0106277:	8b 00                	mov    (%eax),%eax$/;"	l
f0106279	obj/kern/kernel.asm	/^f0106279:	83 e0 02             	and    $0x2,%eax$/;"	l
f010627c	obj/kern/kernel.asm	/^f010627c:	85 c0                	test   %eax,%eax$/;"	l
f010627e	obj/kern/kernel.asm	/^f010627e:	75 07                	jne    f0106287 <sys_page_map+0x11a>$/;"	l
f0106280	obj/kern/kernel.asm	/^f0106280:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0106285	obj/kern/kernel.asm	/^f0106285:	eb 2b                	jmp    f01062b2 <sys_page_map+0x145>$/;"	l
f0106287	obj/kern/kernel.asm	/^f0106287:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f010628a	obj/kern/kernel.asm	/^f010628a:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010628d	obj/kern/kernel.asm	/^f010628d:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f0106290	obj/kern/kernel.asm	/^f0106290:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0106293	obj/kern/kernel.asm	/^f0106293:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f0106296	obj/kern/kernel.asm	/^f0106296:	50                   	push   %eax$/;"	l
f0106297	obj/kern/kernel.asm	/^f0106297:	e8 39 b8 ff ff       	call   f0101ad5 <page_insert>$/;"	l
f010629c	obj/kern/kernel.asm	/^f010629c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010629f	obj/kern/kernel.asm	/^f010629f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01062a2	obj/kern/kernel.asm	/^f01062a2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f01062a6	obj/kern/kernel.asm	/^f01062a6:	79 05                	jns    f01062ad <sys_page_map+0x140>$/;"	l
f01062a8	obj/kern/kernel.asm	/^f01062a8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01062ab	obj/kern/kernel.asm	/^f01062ab:	eb 05                	jmp    f01062b2 <sys_page_map+0x145>$/;"	l
f01062ad	obj/kern/kernel.asm	/^f01062ad:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01062b2	obj/kern/kernel.asm	/^f01062b2:	c9                   	leave  $/;"	l
f01062b3	obj/kern/kernel.asm	/^f01062b3:	c3                   	ret    $/;"	l
f01062b4	obj/kern/kernel.asm	/^f01062b4 <sys_page_unmap>:$/;"	l
f01062b4	obj/kern/kernel.asm	/^f01062b4:	55                   	push   %ebp$/;"	l
f01062b5	obj/kern/kernel.asm	/^f01062b5:	89 e5                	mov    %esp,%ebp$/;"	l
f01062b7	obj/kern/kernel.asm	/^f01062b7:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01062ba	obj/kern/kernel.asm	/^f01062ba:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f01062be	obj/kern/kernel.asm	/^f01062be:	79 07                	jns    f01062c7 <sys_page_unmap+0x13>$/;"	l
f01062c0	obj/kern/kernel.asm	/^f01062c0:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01062c5	obj/kern/kernel.asm	/^f01062c5:	eb 59                	jmp    f0106320 <sys_page_unmap+0x6c>$/;"	l
f01062c7	obj/kern/kernel.asm	/^f01062c7:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01062ca	obj/kern/kernel.asm	/^f01062ca:	6a 01                	push   $0x1$/;"	l
f01062cc	obj/kern/kernel.asm	/^f01062cc:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
f01062cf	obj/kern/kernel.asm	/^f01062cf:	50                   	push   %eax$/;"	l
f01062d0	obj/kern/kernel.asm	/^f01062d0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01062d3	obj/kern/kernel.asm	/^f01062d3:	e8 21 db ff ff       	call   f0103df9 <envid2env>$/;"	l
f01062d8	obj/kern/kernel.asm	/^f01062d8:	83 c4 10             	add    $0x10,%esp$/;"	l
f01062db	obj/kern/kernel.asm	/^f01062db:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01062de	obj/kern/kernel.asm	/^f01062de:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f01062e2	obj/kern/kernel.asm	/^f01062e2:	79 05                	jns    f01062e9 <sys_page_unmap+0x35>$/;"	l
f01062e4	obj/kern/kernel.asm	/^f01062e4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01062e7	obj/kern/kernel.asm	/^f01062e7:	eb 37                	jmp    f0106320 <sys_page_unmap+0x6c>$/;"	l
f01062e9	obj/kern/kernel.asm	/^f01062e9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01062ec	obj/kern/kernel.asm	/^f01062ec:	3d ff ff bf ee       	cmp    $0xeebfffff,%eax$/;"	l
f01062f1	obj/kern/kernel.asm	/^f01062f1:	77 0c                	ja     f01062ff <sys_page_unmap+0x4b>$/;"	l
f01062f3	obj/kern/kernel.asm	/^f01062f3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01062f6	obj/kern/kernel.asm	/^f01062f6:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
f01062fb	obj/kern/kernel.asm	/^f01062fb:	85 c0                	test   %eax,%eax$/;"	l
f01062fd	obj/kern/kernel.asm	/^f01062fd:	74 07                	je     f0106306 <sys_page_unmap+0x52>$/;"	l
f01062ff	obj/kern/kernel.asm	/^f01062ff:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0106304	obj/kern/kernel.asm	/^f0106304:	eb 1a                	jmp    f0106320 <sys_page_unmap+0x6c>$/;"	l
f0106306	obj/kern/kernel.asm	/^f0106306:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0106309	obj/kern/kernel.asm	/^f0106309:	8b 40 60             	mov    0x60(%eax),%eax$/;"	l
f010630c	obj/kern/kernel.asm	/^f010630c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010630f	obj/kern/kernel.asm	/^f010630f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0106312	obj/kern/kernel.asm	/^f0106312:	50                   	push   %eax$/;"	l
f0106313	obj/kern/kernel.asm	/^f0106313:	e8 a0 b8 ff ff       	call   f0101bb8 <page_remove>$/;"	l
f0106318	obj/kern/kernel.asm	/^f0106318:	83 c4 10             	add    $0x10,%esp$/;"	l
f010631b	obj/kern/kernel.asm	/^f010631b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106320	obj/kern/kernel.asm	/^f0106320:	c9                   	leave  $/;"	l
f0106321	obj/kern/kernel.asm	/^f0106321:	c3                   	ret    $/;"	l
f0106322	obj/kern/kernel.asm	/^f0106322 <sys_ipc_try_send>:$/;"	l
f0106322	obj/kern/kernel.asm	/^f0106322:	55                   	push   %ebp$/;"	l
f0106323	obj/kern/kernel.asm	/^f0106323:	89 e5                	mov    %esp,%ebp$/;"	l
f0106325	obj/kern/kernel.asm	/^f0106325:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106328	obj/kern/kernel.asm	/^f0106328:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010632b	obj/kern/kernel.asm	/^f010632b:	68 04 9d 10 f0       	push   $0xf0109d04$/;"	l
f0106330	obj/kern/kernel.asm	/^f0106330:	68 4c 01 00 00       	push   $0x14c$/;"	l
f0106335	obj/kern/kernel.asm	/^f0106335:	68 25 9d 10 f0       	push   $0xf0109d25$/;"	l
f010633a	obj/kern/kernel.asm	/^f010633a:	e8 a1 9f ff ff       	call   f01002e0 <_panic>$/;"	l
f010633f	obj/kern/kernel.asm	/^f010633f <sys_ipc_recv>:$/;"	l
f010633f	obj/kern/kernel.asm	/^f010633f:	55                   	push   %ebp$/;"	l
f0106340	obj/kern/kernel.asm	/^f0106340:	89 e5                	mov    %esp,%ebp$/;"	l
f0106342	obj/kern/kernel.asm	/^f0106342:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106345	obj/kern/kernel.asm	/^f0106345:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106348	obj/kern/kernel.asm	/^f0106348:	68 34 9d 10 f0       	push   $0xf0109d34$/;"	l
f010634d	obj/kern/kernel.asm	/^f010634d:	68 5e 01 00 00       	push   $0x15e$/;"	l
f0106352	obj/kern/kernel.asm	/^f0106352:	68 25 9d 10 f0       	push   $0xf0109d25$/;"	l
f0106357	obj/kern/kernel.asm	/^f0106357:	e8 84 9f ff ff       	call   f01002e0 <_panic>$/;"	l
f010635c	obj/kern/kernel.asm	/^f010635c <syscall>:$/;"	l
f010635c	obj/kern/kernel.asm	/^f010635c:	55                   	push   %ebp$/;"	l
f010635d	obj/kern/kernel.asm	/^f010635d:	89 e5                	mov    %esp,%ebp$/;"	l
f010635f	obj/kern/kernel.asm	/^f010635f:	56                   	push   %esi$/;"	l
f0106360	obj/kern/kernel.asm	/^f0106360:	53                   	push   %ebx$/;"	l
f0106361	obj/kern/kernel.asm	/^f0106361:	83 7d 08 0a          	cmpl   $0xa,0x8(%ebp)$/;"	l
f0106365	obj/kern/kernel.asm	/^f0106365:	0f 87 ac 00 00 00    	ja     f0106417 <syscall+0xbb>$/;"	l
f010636b	obj/kern/kernel.asm	/^f010636b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010636e	obj/kern/kernel.asm	/^f010636e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0106371	obj/kern/kernel.asm	/^f0106371:	05 54 9d 10 f0       	add    $0xf0109d54,%eax$/;"	l
f0106376	obj/kern/kernel.asm	/^f0106376:	8b 00                	mov    (%eax),%eax$/;"	l
f0106378	obj/kern/kernel.asm	/^f0106378:	ff e0                	jmp    *%eax$/;"	l
f010637a	obj/kern/kernel.asm	/^f010637a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010637d	obj/kern/kernel.asm	/^f010637d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106380	obj/kern/kernel.asm	/^f0106380:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0106383	obj/kern/kernel.asm	/^f0106383:	50                   	push   %eax$/;"	l
f0106384	obj/kern/kernel.asm	/^f0106384:	e8 db fa ff ff       	call   f0105e64 <sys_cputs>$/;"	l
f0106389	obj/kern/kernel.asm	/^f0106389:	83 c4 10             	add    $0x10,%esp$/;"	l
f010638c	obj/kern/kernel.asm	/^f010638c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106391	obj/kern/kernel.asm	/^f0106391:	e9 86 00 00 00       	jmp    f010641c <syscall+0xc0>$/;"	l
f0106396	obj/kern/kernel.asm	/^f0106396:	e8 08 fb ff ff       	call   f0105ea3 <sys_cgetc>$/;"	l
f010639b	obj/kern/kernel.asm	/^f010639b:	eb 7f                	jmp    f010641c <syscall+0xc0>$/;"	l
f010639d	obj/kern/kernel.asm	/^f010639d:	e8 0e fb ff ff       	call   f0105eb0 <sys_getenvid>$/;"	l
f01063a2	obj/kern/kernel.asm	/^f01063a2:	eb 78                	jmp    f010641c <syscall+0xc0>$/;"	l
f01063a4	obj/kern/kernel.asm	/^f01063a4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01063a7	obj/kern/kernel.asm	/^f01063a7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01063aa	obj/kern/kernel.asm	/^f01063aa:	50                   	push   %eax$/;"	l
f01063ab	obj/kern/kernel.asm	/^f01063ab:	e8 1a fb ff ff       	call   f0105eca <sys_env_destroy>$/;"	l
f01063b0	obj/kern/kernel.asm	/^f01063b0:	83 c4 10             	add    $0x10,%esp$/;"	l
f01063b3	obj/kern/kernel.asm	/^f01063b3:	eb 67                	jmp    f010641c <syscall+0xc0>$/;"	l
f01063b5	obj/kern/kernel.asm	/^f01063b5:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f01063b8	obj/kern/kernel.asm	/^f01063b8:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01063bb	obj/kern/kernel.asm	/^f01063bb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01063be	obj/kern/kernel.asm	/^f01063be:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01063c1	obj/kern/kernel.asm	/^f01063c1:	51                   	push   %ecx$/;"	l
f01063c2	obj/kern/kernel.asm	/^f01063c2:	52                   	push   %edx$/;"	l
f01063c3	obj/kern/kernel.asm	/^f01063c3:	50                   	push   %eax$/;"	l
f01063c4	obj/kern/kernel.asm	/^f01063c4:	e8 c1 fc ff ff       	call   f010608a <sys_page_alloc>$/;"	l
f01063c9	obj/kern/kernel.asm	/^f01063c9:	83 c4 10             	add    $0x10,%esp$/;"	l
f01063cc	obj/kern/kernel.asm	/^f01063cc:	eb 4e                	jmp    f010641c <syscall+0xc0>$/;"	l
f01063ce	obj/kern/kernel.asm	/^f01063ce:	8b 75 1c             	mov    0x1c(%ebp),%esi$/;"	l
f01063d1	obj/kern/kernel.asm	/^f01063d1:	8b 5d 18             	mov    0x18(%ebp),%ebx$/;"	l
f01063d4	obj/kern/kernel.asm	/^f01063d4:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
f01063d7	obj/kern/kernel.asm	/^f01063d7:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01063da	obj/kern/kernel.asm	/^f01063da:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01063dd	obj/kern/kernel.asm	/^f01063dd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01063e0	obj/kern/kernel.asm	/^f01063e0:	56                   	push   %esi$/;"	l
f01063e1	obj/kern/kernel.asm	/^f01063e1:	53                   	push   %ebx$/;"	l
f01063e2	obj/kern/kernel.asm	/^f01063e2:	51                   	push   %ecx$/;"	l
f01063e3	obj/kern/kernel.asm	/^f01063e3:	52                   	push   %edx$/;"	l
f01063e4	obj/kern/kernel.asm	/^f01063e4:	50                   	push   %eax$/;"	l
f01063e5	obj/kern/kernel.asm	/^f01063e5:	e8 83 fd ff ff       	call   f010616d <sys_page_map>$/;"	l
f01063ea	obj/kern/kernel.asm	/^f01063ea:	83 c4 20             	add    $0x20,%esp$/;"	l
f01063ed	obj/kern/kernel.asm	/^f01063ed:	eb 2d                	jmp    f010641c <syscall+0xc0>$/;"	l
f01063ef	obj/kern/kernel.asm	/^f01063ef:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
f01063f2	obj/kern/kernel.asm	/^f01063f2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01063f5	obj/kern/kernel.asm	/^f01063f5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01063f8	obj/kern/kernel.asm	/^f01063f8:	52                   	push   %edx$/;"	l
f01063f9	obj/kern/kernel.asm	/^f01063f9:	50                   	push   %eax$/;"	l
f01063fa	obj/kern/kernel.asm	/^f01063fa:	e8 b5 fe ff ff       	call   f01062b4 <sys_page_unmap>$/;"	l
f01063ff	obj/kern/kernel.asm	/^f01063ff:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106402	obj/kern/kernel.asm	/^f0106402:	eb 18                	jmp    f010641c <syscall+0xc0>$/;"	l
f0106404	obj/kern/kernel.asm	/^f0106404:	e8 73 fb ff ff       	call   f0105f7c <sys_exofork>$/;"	l
f0106409	obj/kern/kernel.asm	/^f0106409:	eb 11                	jmp    f010641c <syscall+0xc0>$/;"	l
f010640b	obj/kern/kernel.asm	/^f010640b:	e8 61 fb ff ff       	call   f0105f71 <sys_yield>$/;"	l
f0106410	obj/kern/kernel.asm	/^f0106410:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106415	obj/kern/kernel.asm	/^f0106415:	eb 05                	jmp    f010641c <syscall+0xc0>$/;"	l
f0106417	obj/kern/kernel.asm	/^f0106417:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010641c	obj/kern/kernel.asm	/^f010641c:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f010641f	obj/kern/kernel.asm	/^f010641f:	5b                   	pop    %ebx$/;"	l
f0106420	obj/kern/kernel.asm	/^f0106420:	5e                   	pop    %esi$/;"	l
f0106421	obj/kern/kernel.asm	/^f0106421:	5d                   	pop    %ebp$/;"	l
f0106422	obj/kern/kernel.asm	/^f0106422:	c3                   	ret    $/;"	l
f0106423	obj/kern/kernel.asm	/^f0106423 <stab_binsearch>:$/;"	l
f0106423	obj/kern/kernel.asm	/^f0106423:	55                   	push   %ebp$/;"	l
f0106424	obj/kern/kernel.asm	/^f0106424:	89 e5                	mov    %esp,%ebp$/;"	l
f0106426	obj/kern/kernel.asm	/^f0106426:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0106429	obj/kern/kernel.asm	/^f0106429:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010642c	obj/kern/kernel.asm	/^f010642c:	8b 00                	mov    (%eax),%eax$/;"	l
f010642e	obj/kern/kernel.asm	/^f010642e:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f0106431	obj/kern/kernel.asm	/^f0106431:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106434	obj/kern/kernel.asm	/^f0106434:	8b 00                	mov    (%eax),%eax$/;"	l
f0106436	obj/kern/kernel.asm	/^f0106436:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
f0106439	obj/kern/kernel.asm	/^f0106439:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0106440	obj/kern/kernel.asm	/^f0106440:	e9 d2 00 00 00       	jmp    f0106517 <stab_binsearch+0xf4>$/;"	l
f0106445	obj/kern/kernel.asm	/^f0106445:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
f0106448	obj/kern/kernel.asm	/^f0106448:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f010644b	obj/kern/kernel.asm	/^f010644b:	01 d0                	add    %edx,%eax$/;"	l
f010644d	obj/kern/kernel.asm	/^f010644d:	89 c2                	mov    %eax,%edx$/;"	l
f010644f	obj/kern/kernel.asm	/^f010644f:	c1 ea 1f             	shr    $0x1f,%edx$/;"	l
f0106452	obj/kern/kernel.asm	/^f0106452:	01 d0                	add    %edx,%eax$/;"	l
f0106454	obj/kern/kernel.asm	/^f0106454:	d1 f8                	sar    %eax$/;"	d
f0106456	obj/kern/kernel.asm	/^f0106456:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0106459	obj/kern/kernel.asm	/^f0106459:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010645c	obj/kern/kernel.asm	/^f010645c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010645f	obj/kern/kernel.asm	/^f010645f:	eb 04                	jmp    f0106465 <stab_binsearch+0x42>$/;"	l
f0106461	obj/kern/kernel.asm	/^f0106461:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)$/;"	l
f0106465	obj/kern/kernel.asm	/^f0106465:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0106468	obj/kern/kernel.asm	/^f0106468:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
f010646b	obj/kern/kernel.asm	/^f010646b:	7c 1f                	jl     f010648c <stab_binsearch+0x69>$/;"	l
f010646d	obj/kern/kernel.asm	/^f010646d:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0106470	obj/kern/kernel.asm	/^f0106470:	89 d0                	mov    %edx,%eax$/;"	l
f0106472	obj/kern/kernel.asm	/^f0106472:	01 c0                	add    %eax,%eax$/;"	l
f0106474	obj/kern/kernel.asm	/^f0106474:	01 d0                	add    %edx,%eax$/;"	l
f0106476	obj/kern/kernel.asm	/^f0106476:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0106479	obj/kern/kernel.asm	/^f0106479:	89 c2                	mov    %eax,%edx$/;"	l
f010647b	obj/kern/kernel.asm	/^f010647b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010647e	obj/kern/kernel.asm	/^f010647e:	01 d0                	add    %edx,%eax$/;"	l
f0106480	obj/kern/kernel.asm	/^f0106480:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
f0106484	obj/kern/kernel.asm	/^f0106484:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0106487	obj/kern/kernel.asm	/^f0106487:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
f010648a	obj/kern/kernel.asm	/^f010648a:	75 d5                	jne    f0106461 <stab_binsearch+0x3e>$/;"	l
f010648c	obj/kern/kernel.asm	/^f010648c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010648f	obj/kern/kernel.asm	/^f010648f:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
f0106492	obj/kern/kernel.asm	/^f0106492:	7d 0b                	jge    f010649f <stab_binsearch+0x7c>$/;"	l
f0106494	obj/kern/kernel.asm	/^f0106494:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0106497	obj/kern/kernel.asm	/^f0106497:	83 c0 01             	add    $0x1,%eax$/;"	l
f010649a	obj/kern/kernel.asm	/^f010649a:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f010649d	obj/kern/kernel.asm	/^f010649d:	eb 78                	jmp    f0106517 <stab_binsearch+0xf4>$/;"	l
f010649f	obj/kern/kernel.asm	/^f010649f:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
f01064a6	obj/kern/kernel.asm	/^f01064a6:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01064a9	obj/kern/kernel.asm	/^f01064a9:	89 d0                	mov    %edx,%eax$/;"	l
f01064ab	obj/kern/kernel.asm	/^f01064ab:	01 c0                	add    %eax,%eax$/;"	l
f01064ad	obj/kern/kernel.asm	/^f01064ad:	01 d0                	add    %edx,%eax$/;"	l
f01064af	obj/kern/kernel.asm	/^f01064af:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01064b2	obj/kern/kernel.asm	/^f01064b2:	89 c2                	mov    %eax,%edx$/;"	l
f01064b4	obj/kern/kernel.asm	/^f01064b4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01064b7	obj/kern/kernel.asm	/^f01064b7:	01 d0                	add    %edx,%eax$/;"	l
f01064b9	obj/kern/kernel.asm	/^f01064b9:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f01064bc	obj/kern/kernel.asm	/^f01064bc:	3b 45 18             	cmp    0x18(%ebp),%eax$/;"	l
f01064bf	obj/kern/kernel.asm	/^f01064bf:	73 13                	jae    f01064d4 <stab_binsearch+0xb1>$/;"	l
f01064c1	obj/kern/kernel.asm	/^f01064c1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01064c4	obj/kern/kernel.asm	/^f01064c4:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01064c7	obj/kern/kernel.asm	/^f01064c7:	89 10                	mov    %edx,(%eax)$/;"	l
f01064c9	obj/kern/kernel.asm	/^f01064c9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01064cc	obj/kern/kernel.asm	/^f01064cc:	83 c0 01             	add    $0x1,%eax$/;"	l
f01064cf	obj/kern/kernel.asm	/^f01064cf:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f01064d2	obj/kern/kernel.asm	/^f01064d2:	eb 43                	jmp    f0106517 <stab_binsearch+0xf4>$/;"	l
f01064d4	obj/kern/kernel.asm	/^f01064d4:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01064d7	obj/kern/kernel.asm	/^f01064d7:	89 d0                	mov    %edx,%eax$/;"	l
f01064d9	obj/kern/kernel.asm	/^f01064d9:	01 c0                	add    %eax,%eax$/;"	l
f01064db	obj/kern/kernel.asm	/^f01064db:	01 d0                	add    %edx,%eax$/;"	l
f01064dd	obj/kern/kernel.asm	/^f01064dd:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01064e0	obj/kern/kernel.asm	/^f01064e0:	89 c2                	mov    %eax,%edx$/;"	l
f01064e2	obj/kern/kernel.asm	/^f01064e2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01064e5	obj/kern/kernel.asm	/^f01064e5:	01 d0                	add    %edx,%eax$/;"	l
f01064e7	obj/kern/kernel.asm	/^f01064e7:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f01064ea	obj/kern/kernel.asm	/^f01064ea:	3b 45 18             	cmp    0x18(%ebp),%eax$/;"	l
f01064ed	obj/kern/kernel.asm	/^f01064ed:	76 16                	jbe    f0106505 <stab_binsearch+0xe2>$/;"	l
f01064ef	obj/kern/kernel.asm	/^f01064ef:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01064f2	obj/kern/kernel.asm	/^f01064f2:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f01064f5	obj/kern/kernel.asm	/^f01064f5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01064f8	obj/kern/kernel.asm	/^f01064f8:	89 10                	mov    %edx,(%eax)$/;"	l
f01064fa	obj/kern/kernel.asm	/^f01064fa:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01064fd	obj/kern/kernel.asm	/^f01064fd:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0106500	obj/kern/kernel.asm	/^f0106500:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
f0106503	obj/kern/kernel.asm	/^f0106503:	eb 12                	jmp    f0106517 <stab_binsearch+0xf4>$/;"	l
f0106505	obj/kern/kernel.asm	/^f0106505:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106508	obj/kern/kernel.asm	/^f0106508:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f010650b	obj/kern/kernel.asm	/^f010650b:	89 10                	mov    %edx,(%eax)$/;"	l
f010650d	obj/kern/kernel.asm	/^f010650d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0106510	obj/kern/kernel.asm	/^f0106510:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f0106513	obj/kern/kernel.asm	/^f0106513:	83 45 18 01          	addl   $0x1,0x18(%ebp)$/;"	l
f0106517	obj/kern/kernel.asm	/^f0106517:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f010651a	obj/kern/kernel.asm	/^f010651a:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
f010651d	obj/kern/kernel.asm	/^f010651d:	0f 8e 22 ff ff ff    	jle    f0106445 <stab_binsearch+0x22>$/;"	l
f0106523	obj/kern/kernel.asm	/^f0106523:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0106527	obj/kern/kernel.asm	/^f0106527:	75 0f                	jne    f0106538 <stab_binsearch+0x115>$/;"	l
f0106529	obj/kern/kernel.asm	/^f0106529:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010652c	obj/kern/kernel.asm	/^f010652c:	8b 00                	mov    (%eax),%eax$/;"	l
f010652e	obj/kern/kernel.asm	/^f010652e:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f0106531	obj/kern/kernel.asm	/^f0106531:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106534	obj/kern/kernel.asm	/^f0106534:	89 10                	mov    %edx,(%eax)$/;"	l
f0106536	obj/kern/kernel.asm	/^f0106536:	eb 3f                	jmp    f0106577 <stab_binsearch+0x154>$/;"	l
f0106538	obj/kern/kernel.asm	/^f0106538:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010653b	obj/kern/kernel.asm	/^f010653b:	8b 00                	mov    (%eax),%eax$/;"	l
f010653d	obj/kern/kernel.asm	/^f010653d:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f0106540	obj/kern/kernel.asm	/^f0106540:	eb 04                	jmp    f0106546 <stab_binsearch+0x123>$/;"	l
f0106542	obj/kern/kernel.asm	/^f0106542:	83 6d fc 01          	subl   $0x1,-0x4(%ebp)$/;"	l
f0106546	obj/kern/kernel.asm	/^f0106546:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106549	obj/kern/kernel.asm	/^f0106549:	8b 00                	mov    (%eax),%eax$/;"	l
f010654b	obj/kern/kernel.asm	/^f010654b:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
f010654e	obj/kern/kernel.asm	/^f010654e:	7d 1f                	jge    f010656f <stab_binsearch+0x14c>$/;"	l
f0106550	obj/kern/kernel.asm	/^f0106550:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
f0106553	obj/kern/kernel.asm	/^f0106553:	89 d0                	mov    %edx,%eax$/;"	l
f0106555	obj/kern/kernel.asm	/^f0106555:	01 c0                	add    %eax,%eax$/;"	l
f0106557	obj/kern/kernel.asm	/^f0106557:	01 d0                	add    %edx,%eax$/;"	l
f0106559	obj/kern/kernel.asm	/^f0106559:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010655c	obj/kern/kernel.asm	/^f010655c:	89 c2                	mov    %eax,%edx$/;"	l
f010655e	obj/kern/kernel.asm	/^f010655e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106561	obj/kern/kernel.asm	/^f0106561:	01 d0                	add    %edx,%eax$/;"	l
f0106563	obj/kern/kernel.asm	/^f0106563:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
f0106567	obj/kern/kernel.asm	/^f0106567:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010656a	obj/kern/kernel.asm	/^f010656a:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
f010656d	obj/kern/kernel.asm	/^f010656d:	75 d3                	jne    f0106542 <stab_binsearch+0x11f>$/;"	l
f010656f	obj/kern/kernel.asm	/^f010656f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106572	obj/kern/kernel.asm	/^f0106572:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
f0106575	obj/kern/kernel.asm	/^f0106575:	89 10                	mov    %edx,(%eax)$/;"	l
f0106577	obj/kern/kernel.asm	/^f0106577:	90                   	nop$/;"	l
f0106578	obj/kern/kernel.asm	/^f0106578:	c9                   	leave  $/;"	l
f0106579	obj/kern/kernel.asm	/^f0106579:	c3                   	ret    $/;"	l
f010657a	obj/kern/kernel.asm	/^f010657a <debuginfo_eip>:$/;"	l
f010657a	obj/kern/kernel.asm	/^f010657a:	55                   	push   %ebp$/;"	l
f010657b	obj/kern/kernel.asm	/^f010657b:	89 e5                	mov    %esp,%ebp$/;"	l
f010657d	obj/kern/kernel.asm	/^f010657d:	53                   	push   %ebx$/;"	l
f010657e	obj/kern/kernel.asm	/^f010657e:	83 ec 34             	sub    $0x34,%esp$/;"	l
f0106581	obj/kern/kernel.asm	/^f0106581:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106584	obj/kern/kernel.asm	/^f0106584:	c7 00 80 9d 10 f0    	movl   $0xf0109d80,(%eax)$/;"	l
f010658a	obj/kern/kernel.asm	/^f010658a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010658d	obj/kern/kernel.asm	/^f010658d:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
f0106594	obj/kern/kernel.asm	/^f0106594:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106597	obj/kern/kernel.asm	/^f0106597:	c7 40 08 80 9d 10 f0 	movl   $0xf0109d80,0x8(%eax)$/;"	l
f010659e	obj/kern/kernel.asm	/^f010659e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01065a1	obj/kern/kernel.asm	/^f01065a1:	c7 40 0c 09 00 00 00 	movl   $0x9,0xc(%eax)$/;"	l
f01065a8	obj/kern/kernel.asm	/^f01065a8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01065ab	obj/kern/kernel.asm	/^f01065ab:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01065ae	obj/kern/kernel.asm	/^f01065ae:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
f01065b1	obj/kern/kernel.asm	/^f01065b1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01065b4	obj/kern/kernel.asm	/^f01065b4:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
f01065bb	obj/kern/kernel.asm	/^f01065bb:	81 7d 08 ff ff 7f ef 	cmpl   $0xef7fffff,0x8(%ebp)$/;"	l
f01065c2	obj/kern/kernel.asm	/^f01065c2:	76 21                	jbe    f01065e5 <debuginfo_eip+0x6b>$/;"	l
f01065c4	obj/kern/kernel.asm	/^f01065c4:	c7 45 f4 bc a2 10 f0 	movl   $0xf010a2bc,-0xc(%ebp)$/;"	l
f01065cb	obj/kern/kernel.asm	/^f01065cb:	c7 45 f0 c8 65 11 f0 	movl   $0xf01165c8,-0x10(%ebp)$/;"	l
f01065d2	obj/kern/kernel.asm	/^f01065d2:	c7 45 ec c9 65 11 f0 	movl   $0xf01165c9,-0x14(%ebp)$/;"	l
f01065d9	obj/kern/kernel.asm	/^f01065d9:	c7 45 e8 a9 a5 11 f0 	movl   $0xf011a5a9,-0x18(%ebp)$/;"	l
f01065e0	obj/kern/kernel.asm	/^f01065e0:	e9 c7 00 00 00       	jmp    f01066ac <debuginfo_eip+0x132>$/;"	l
f01065e5	obj/kern/kernel.asm	/^f01065e5:	c7 45 e4 00 00 20 00 	movl   $0x200000,-0x1c(%ebp)$/;"	l
f01065ec	obj/kern/kernel.asm	/^f01065ec:	e8 6e 17 00 00       	call   f0107d5f <cpunum>$/;"	l
f01065f1	obj/kern/kernel.asm	/^f01065f1:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f01065f4	obj/kern/kernel.asm	/^f01065f4:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f01065f9	obj/kern/kernel.asm	/^f01065f9:	8b 00                	mov    (%eax),%eax$/;"	l
f01065fb	obj/kern/kernel.asm	/^f01065fb:	6a 05                	push   $0x5$/;"	l
f01065fd	obj/kern/kernel.asm	/^f01065fd:	6a 10                	push   $0x10$/;"	l
f01065ff	obj/kern/kernel.asm	/^f01065ff:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0106602	obj/kern/kernel.asm	/^f0106602:	50                   	push   %eax$/;"	l
f0106603	obj/kern/kernel.asm	/^f0106603:	e8 fa b6 ff ff       	call   f0101d02 <user_mem_check>$/;"	l
f0106608	obj/kern/kernel.asm	/^f0106608:	83 c4 10             	add    $0x10,%esp$/;"	l
f010660b	obj/kern/kernel.asm	/^f010660b:	85 c0                	test   %eax,%eax$/;"	l
f010660d	obj/kern/kernel.asm	/^f010660d:	79 0a                	jns    f0106619 <debuginfo_eip+0x9f>$/;"	l
f010660f	obj/kern/kernel.asm	/^f010660f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0106614	obj/kern/kernel.asm	/^f0106614:	e9 67 03 00 00       	jmp    f0106980 <debuginfo_eip+0x406>$/;"	l
f0106619	obj/kern/kernel.asm	/^f0106619:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010661c	obj/kern/kernel.asm	/^f010661c:	8b 00                	mov    (%eax),%eax$/;"	l
f010661e	obj/kern/kernel.asm	/^f010661e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0106621	obj/kern/kernel.asm	/^f0106621:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106624	obj/kern/kernel.asm	/^f0106624:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0106627	obj/kern/kernel.asm	/^f0106627:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010662a	obj/kern/kernel.asm	/^f010662a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f010662d	obj/kern/kernel.asm	/^f010662d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0106630	obj/kern/kernel.asm	/^f0106630:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0106633	obj/kern/kernel.asm	/^f0106633:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0106636	obj/kern/kernel.asm	/^f0106636:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
f0106639	obj/kern/kernel.asm	/^f0106639:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f010663c	obj/kern/kernel.asm	/^f010663c:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f010663f	obj/kern/kernel.asm	/^f010663f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106642	obj/kern/kernel.asm	/^f0106642:	29 c2                	sub    %eax,%edx$/;"	l
f0106644	obj/kern/kernel.asm	/^f0106644:	89 d0                	mov    %edx,%eax$/;"	l
f0106646	obj/kern/kernel.asm	/^f0106646:	89 c3                	mov    %eax,%ebx$/;"	l
f0106648	obj/kern/kernel.asm	/^f0106648:	e8 12 17 00 00       	call   f0107d5f <cpunum>$/;"	l
f010664d	obj/kern/kernel.asm	/^f010664d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106650	obj/kern/kernel.asm	/^f0106650:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f0106655	obj/kern/kernel.asm	/^f0106655:	8b 00                	mov    (%eax),%eax$/;"	l
f0106657	obj/kern/kernel.asm	/^f0106657:	6a 05                	push   $0x5$/;"	l
f0106659	obj/kern/kernel.asm	/^f0106659:	53                   	push   %ebx$/;"	l
f010665a	obj/kern/kernel.asm	/^f010665a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f010665d	obj/kern/kernel.asm	/^f010665d:	50                   	push   %eax$/;"	l
f010665e	obj/kern/kernel.asm	/^f010665e:	e8 9f b6 ff ff       	call   f0101d02 <user_mem_check>$/;"	l
f0106663	obj/kern/kernel.asm	/^f0106663:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106666	obj/kern/kernel.asm	/^f0106666:	85 c0                	test   %eax,%eax$/;"	l
f0106668	obj/kern/kernel.asm	/^f0106668:	79 0a                	jns    f0106674 <debuginfo_eip+0xfa>$/;"	l
f010666a	obj/kern/kernel.asm	/^f010666a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010666f	obj/kern/kernel.asm	/^f010666f:	e9 0c 03 00 00       	jmp    f0106980 <debuginfo_eip+0x406>$/;"	l
f0106674	obj/kern/kernel.asm	/^f0106674:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
f0106677	obj/kern/kernel.asm	/^f0106677:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010667a	obj/kern/kernel.asm	/^f010667a:	29 c2                	sub    %eax,%edx$/;"	l
f010667c	obj/kern/kernel.asm	/^f010667c:	89 d0                	mov    %edx,%eax$/;"	l
f010667e	obj/kern/kernel.asm	/^f010667e:	89 c3                	mov    %eax,%ebx$/;"	l
f0106680	obj/kern/kernel.asm	/^f0106680:	e8 da 16 00 00       	call   f0107d5f <cpunum>$/;"	l
f0106685	obj/kern/kernel.asm	/^f0106685:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0106688	obj/kern/kernel.asm	/^f0106688:	05 28 10 23 f0       	add    $0xf0231028,%eax$/;"	l
f010668d	obj/kern/kernel.asm	/^f010668d:	8b 00                	mov    (%eax),%eax$/;"	l
f010668f	obj/kern/kernel.asm	/^f010668f:	6a 05                	push   $0x5$/;"	l
f0106691	obj/kern/kernel.asm	/^f0106691:	53                   	push   %ebx$/;"	l
f0106692	obj/kern/kernel.asm	/^f0106692:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f0106695	obj/kern/kernel.asm	/^f0106695:	50                   	push   %eax$/;"	l
f0106696	obj/kern/kernel.asm	/^f0106696:	e8 67 b6 ff ff       	call   f0101d02 <user_mem_check>$/;"	l
f010669b	obj/kern/kernel.asm	/^f010669b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010669e	obj/kern/kernel.asm	/^f010669e:	85 c0                	test   %eax,%eax$/;"	l
f01066a0	obj/kern/kernel.asm	/^f01066a0:	79 0a                	jns    f01066ac <debuginfo_eip+0x132>$/;"	l
f01066a2	obj/kern/kernel.asm	/^f01066a2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01066a7	obj/kern/kernel.asm	/^f01066a7:	e9 d4 02 00 00       	jmp    f0106980 <debuginfo_eip+0x406>$/;"	l
f01066ac	obj/kern/kernel.asm	/^f01066ac:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f01066af	obj/kern/kernel.asm	/^f01066af:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
f01066b2	obj/kern/kernel.asm	/^f01066b2:	76 0d                	jbe    f01066c1 <debuginfo_eip+0x147>$/;"	l
f01066b4	obj/kern/kernel.asm	/^f01066b4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f01066b7	obj/kern/kernel.asm	/^f01066b7:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01066ba	obj/kern/kernel.asm	/^f01066ba:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01066bd	obj/kern/kernel.asm	/^f01066bd:	84 c0                	test   %al,%al$/;"	l
f01066bf	obj/kern/kernel.asm	/^f01066bf:	74 0a                	je     f01066cb <debuginfo_eip+0x151>$/;"	l
f01066c1	obj/kern/kernel.asm	/^f01066c1:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f01066c6	obj/kern/kernel.asm	/^f01066c6:	e9 b5 02 00 00       	jmp    f0106980 <debuginfo_eip+0x406>$/;"	l
f01066cb	obj/kern/kernel.asm	/^f01066cb:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f01066d2	obj/kern/kernel.asm	/^f01066d2:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01066d5	obj/kern/kernel.asm	/^f01066d5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01066d8	obj/kern/kernel.asm	/^f01066d8:	29 c2                	sub    %eax,%edx$/;"	l
f01066da	obj/kern/kernel.asm	/^f01066da:	89 d0                	mov    %edx,%eax$/;"	l
f01066dc	obj/kern/kernel.asm	/^f01066dc:	c1 f8 02             	sar    $0x2,%eax$/;"	l
f01066df	obj/kern/kernel.asm	/^f01066df:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
f01066e5	obj/kern/kernel.asm	/^f01066e5:	83 e8 01             	sub    $0x1,%eax$/;"	l
f01066e8	obj/kern/kernel.asm	/^f01066e8:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
f01066eb	obj/kern/kernel.asm	/^f01066eb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01066ee	obj/kern/kernel.asm	/^f01066ee:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01066f1	obj/kern/kernel.asm	/^f01066f1:	6a 64                	push   $0x64$/;"	l
f01066f3	obj/kern/kernel.asm	/^f01066f3:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
f01066f6	obj/kern/kernel.asm	/^f01066f6:	50                   	push   %eax$/;"	l
f01066f7	obj/kern/kernel.asm	/^f01066f7:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
f01066fa	obj/kern/kernel.asm	/^f01066fa:	50                   	push   %eax$/;"	l
f01066fb	obj/kern/kernel.asm	/^f01066fb:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f01066fe	obj/kern/kernel.asm	/^f01066fe:	e8 20 fd ff ff       	call   f0106423 <stab_binsearch>$/;"	l
f0106703	obj/kern/kernel.asm	/^f0106703:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106706	obj/kern/kernel.asm	/^f0106706:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0106709	obj/kern/kernel.asm	/^f0106709:	85 c0                	test   %eax,%eax$/;"	l
f010670b	obj/kern/kernel.asm	/^f010670b:	75 0a                	jne    f0106717 <debuginfo_eip+0x19d>$/;"	l
f010670d	obj/kern/kernel.asm	/^f010670d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0106712	obj/kern/kernel.asm	/^f0106712:	e9 69 02 00 00       	jmp    f0106980 <debuginfo_eip+0x406>$/;"	l
f0106717	obj/kern/kernel.asm	/^f0106717:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010671a	obj/kern/kernel.asm	/^f010671a:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
f010671d	obj/kern/kernel.asm	/^f010671d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f0106720	obj/kern/kernel.asm	/^f0106720:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
f0106723	obj/kern/kernel.asm	/^f0106723:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106726	obj/kern/kernel.asm	/^f0106726:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0106729	obj/kern/kernel.asm	/^f0106729:	6a 24                	push   $0x24$/;"	l
f010672b	obj/kern/kernel.asm	/^f010672b:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
f010672e	obj/kern/kernel.asm	/^f010672e:	50                   	push   %eax$/;"	l
f010672f	obj/kern/kernel.asm	/^f010672f:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
f0106732	obj/kern/kernel.asm	/^f0106732:	50                   	push   %eax$/;"	l
f0106733	obj/kern/kernel.asm	/^f0106733:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0106736	obj/kern/kernel.asm	/^f0106736:	e8 e8 fc ff ff       	call   f0106423 <stab_binsearch>$/;"	l
f010673b	obj/kern/kernel.asm	/^f010673b:	83 c4 20             	add    $0x20,%esp$/;"	l
f010673e	obj/kern/kernel.asm	/^f010673e:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f0106741	obj/kern/kernel.asm	/^f0106741:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f0106744	obj/kern/kernel.asm	/^f0106744:	39 c2                	cmp    %eax,%edx$/;"	l
f0106746	obj/kern/kernel.asm	/^f0106746:	7f 7c                	jg     f01067c4 <debuginfo_eip+0x24a>$/;"	l
f0106748	obj/kern/kernel.asm	/^f0106748:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f010674b	obj/kern/kernel.asm	/^f010674b:	89 c2                	mov    %eax,%edx$/;"	l
f010674d	obj/kern/kernel.asm	/^f010674d:	89 d0                	mov    %edx,%eax$/;"	l
f010674f	obj/kern/kernel.asm	/^f010674f:	01 c0                	add    %eax,%eax$/;"	l
f0106751	obj/kern/kernel.asm	/^f0106751:	01 d0                	add    %edx,%eax$/;"	l
f0106753	obj/kern/kernel.asm	/^f0106753:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0106756	obj/kern/kernel.asm	/^f0106756:	89 c2                	mov    %eax,%edx$/;"	l
f0106758	obj/kern/kernel.asm	/^f0106758:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010675b	obj/kern/kernel.asm	/^f010675b:	01 d0                	add    %edx,%eax$/;"	l
f010675d	obj/kern/kernel.asm	/^f010675d:	8b 00                	mov    (%eax),%eax$/;"	l
f010675f	obj/kern/kernel.asm	/^f010675f:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
f0106762	obj/kern/kernel.asm	/^f0106762:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f0106765	obj/kern/kernel.asm	/^f0106765:	29 d1                	sub    %edx,%ecx$/;"	l
f0106767	obj/kern/kernel.asm	/^f0106767:	89 ca                	mov    %ecx,%edx$/;"	l
f0106769	obj/kern/kernel.asm	/^f0106769:	39 d0                	cmp    %edx,%eax$/;"	l
f010676b	obj/kern/kernel.asm	/^f010676b:	73 22                	jae    f010678f <debuginfo_eip+0x215>$/;"	l
f010676d	obj/kern/kernel.asm	/^f010676d:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0106770	obj/kern/kernel.asm	/^f0106770:	89 c2                	mov    %eax,%edx$/;"	l
f0106772	obj/kern/kernel.asm	/^f0106772:	89 d0                	mov    %edx,%eax$/;"	l
f0106774	obj/kern/kernel.asm	/^f0106774:	01 c0                	add    %eax,%eax$/;"	l
f0106776	obj/kern/kernel.asm	/^f0106776:	01 d0                	add    %edx,%eax$/;"	l
f0106778	obj/kern/kernel.asm	/^f0106778:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010677b	obj/kern/kernel.asm	/^f010677b:	89 c2                	mov    %eax,%edx$/;"	l
f010677d	obj/kern/kernel.asm	/^f010677d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106780	obj/kern/kernel.asm	/^f0106780:	01 d0                	add    %edx,%eax$/;"	l
f0106782	obj/kern/kernel.asm	/^f0106782:	8b 10                	mov    (%eax),%edx$/;"	l
f0106784	obj/kern/kernel.asm	/^f0106784:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0106787	obj/kern/kernel.asm	/^f0106787:	01 c2                	add    %eax,%edx$/;"	l
f0106789	obj/kern/kernel.asm	/^f0106789:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010678c	obj/kern/kernel.asm	/^f010678c:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
f010678f	obj/kern/kernel.asm	/^f010678f:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0106792	obj/kern/kernel.asm	/^f0106792:	89 c2                	mov    %eax,%edx$/;"	l
f0106794	obj/kern/kernel.asm	/^f0106794:	89 d0                	mov    %edx,%eax$/;"	l
f0106796	obj/kern/kernel.asm	/^f0106796:	01 c0                	add    %eax,%eax$/;"	l
f0106798	obj/kern/kernel.asm	/^f0106798:	01 d0                	add    %edx,%eax$/;"	l
f010679a	obj/kern/kernel.asm	/^f010679a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010679d	obj/kern/kernel.asm	/^f010679d:	89 c2                	mov    %eax,%edx$/;"	l
f010679f	obj/kern/kernel.asm	/^f010679f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01067a2	obj/kern/kernel.asm	/^f01067a2:	01 d0                	add    %edx,%eax$/;"	l
f01067a4	obj/kern/kernel.asm	/^f01067a4:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
f01067a7	obj/kern/kernel.asm	/^f01067a7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01067aa	obj/kern/kernel.asm	/^f01067aa:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
f01067ad	obj/kern/kernel.asm	/^f01067ad:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01067b0	obj/kern/kernel.asm	/^f01067b0:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
f01067b3	obj/kern/kernel.asm	/^f01067b3:	29 45 08             	sub    %eax,0x8(%ebp)$/;"	l
f01067b6	obj/kern/kernel.asm	/^f01067b6:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f01067b9	obj/kern/kernel.asm	/^f01067b9:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01067bc	obj/kern/kernel.asm	/^f01067bc:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f01067bf	obj/kern/kernel.asm	/^f01067bf:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01067c2	obj/kern/kernel.asm	/^f01067c2:	eb 15                	jmp    f01067d9 <debuginfo_eip+0x25f>$/;"	l
f01067c4	obj/kern/kernel.asm	/^f01067c4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01067c7	obj/kern/kernel.asm	/^f01067c7:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01067ca	obj/kern/kernel.asm	/^f01067ca:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
f01067cd	obj/kern/kernel.asm	/^f01067cd:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01067d0	obj/kern/kernel.asm	/^f01067d0:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f01067d3	obj/kern/kernel.asm	/^f01067d3:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01067d6	obj/kern/kernel.asm	/^f01067d6:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
f01067d9	obj/kern/kernel.asm	/^f01067d9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01067dc	obj/kern/kernel.asm	/^f01067dc:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f01067df	obj/kern/kernel.asm	/^f01067df:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01067e2	obj/kern/kernel.asm	/^f01067e2:	6a 3a                	push   $0x3a$/;"	l
f01067e4	obj/kern/kernel.asm	/^f01067e4:	50                   	push   %eax$/;"	l
f01067e5	obj/kern/kernel.asm	/^f01067e5:	e8 76 0a 00 00       	call   f0107260 <strfind>$/;"	l
f01067ea	obj/kern/kernel.asm	/^f01067ea:	83 c4 10             	add    $0x10,%esp$/;"	l
f01067ed	obj/kern/kernel.asm	/^f01067ed:	89 c2                	mov    %eax,%edx$/;"	l
f01067ef	obj/kern/kernel.asm	/^f01067ef:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01067f2	obj/kern/kernel.asm	/^f01067f2:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f01067f5	obj/kern/kernel.asm	/^f01067f5:	29 c2                	sub    %eax,%edx$/;"	l
f01067f7	obj/kern/kernel.asm	/^f01067f7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01067fa	obj/kern/kernel.asm	/^f01067fa:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
f01067fd	obj/kern/kernel.asm	/^f01067fd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106800	obj/kern/kernel.asm	/^f0106800:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0106803	obj/kern/kernel.asm	/^f0106803:	6a 44                	push   $0x44$/;"	l
f0106805	obj/kern/kernel.asm	/^f0106805:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
f0106808	obj/kern/kernel.asm	/^f0106808:	50                   	push   %eax$/;"	l
f0106809	obj/kern/kernel.asm	/^f0106809:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
f010680c	obj/kern/kernel.asm	/^f010680c:	50                   	push   %eax$/;"	l
f010680d	obj/kern/kernel.asm	/^f010680d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0106810	obj/kern/kernel.asm	/^f0106810:	e8 0e fc ff ff       	call   f0106423 <stab_binsearch>$/;"	l
f0106815	obj/kern/kernel.asm	/^f0106815:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106818	obj/kern/kernel.asm	/^f0106818:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f010681b	obj/kern/kernel.asm	/^f010681b:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
f010681e	obj/kern/kernel.asm	/^f010681e:	39 c2                	cmp    %eax,%edx$/;"	l
f0106820	obj/kern/kernel.asm	/^f0106820:	7f 42                	jg     f0106864 <debuginfo_eip+0x2ea>$/;"	l
f0106822	obj/kern/kernel.asm	/^f0106822:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0106825	obj/kern/kernel.asm	/^f0106825:	89 c2                	mov    %eax,%edx$/;"	l
f0106827	obj/kern/kernel.asm	/^f0106827:	89 d0                	mov    %edx,%eax$/;"	l
f0106829	obj/kern/kernel.asm	/^f0106829:	01 c0                	add    %eax,%eax$/;"	l
f010682b	obj/kern/kernel.asm	/^f010682b:	01 d0                	add    %edx,%eax$/;"	l
f010682d	obj/kern/kernel.asm	/^f010682d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0106830	obj/kern/kernel.asm	/^f0106830:	89 c2                	mov    %eax,%edx$/;"	l
f0106832	obj/kern/kernel.asm	/^f0106832:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106835	obj/kern/kernel.asm	/^f0106835:	01 d0                	add    %edx,%eax$/;"	l
f0106837	obj/kern/kernel.asm	/^f0106837:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
f010683b	obj/kern/kernel.asm	/^f010683b:	0f b7 d0             	movzwl %ax,%edx$/;"	l
f010683e	obj/kern/kernel.asm	/^f010683e:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0106841	obj/kern/kernel.asm	/^f0106841:	89 c1                	mov    %eax,%ecx$/;"	l
f0106843	obj/kern/kernel.asm	/^f0106843:	89 c8                	mov    %ecx,%eax$/;"	l
f0106845	obj/kern/kernel.asm	/^f0106845:	01 c0                	add    %eax,%eax$/;"	l
f0106847	obj/kern/kernel.asm	/^f0106847:	01 c8                	add    %ecx,%eax$/;"	l
f0106849	obj/kern/kernel.asm	/^f0106849:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010684c	obj/kern/kernel.asm	/^f010684c:	89 c1                	mov    %eax,%ecx$/;"	l
f010684e	obj/kern/kernel.asm	/^f010684e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106851	obj/kern/kernel.asm	/^f0106851:	01 c8                	add    %ecx,%eax$/;"	l
f0106853	obj/kern/kernel.asm	/^f0106853:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
f0106857	obj/kern/kernel.asm	/^f0106857:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010685a	obj/kern/kernel.asm	/^f010685a:	29 c2                	sub    %eax,%edx$/;"	l
f010685c	obj/kern/kernel.asm	/^f010685c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010685f	obj/kern/kernel.asm	/^f010685f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0106862	obj/kern/kernel.asm	/^f0106862:	eb 13                	jmp    f0106877 <debuginfo_eip+0x2fd>$/;"	l
f0106864	obj/kern/kernel.asm	/^f0106864:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0106869	obj/kern/kernel.asm	/^f0106869:	e9 12 01 00 00       	jmp    f0106980 <debuginfo_eip+0x406>$/;"	l
f010686e	obj/kern/kernel.asm	/^f010686e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0106871	obj/kern/kernel.asm	/^f0106871:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0106874	obj/kern/kernel.asm	/^f0106874:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0106877	obj/kern/kernel.asm	/^f0106877:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f010687a	obj/kern/kernel.asm	/^f010687a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f010687d	obj/kern/kernel.asm	/^f010687d:	39 c2                	cmp    %eax,%edx$/;"	l
f010687f	obj/kern/kernel.asm	/^f010687f:	7c 56                	jl     f01068d7 <debuginfo_eip+0x35d>$/;"	l
f0106881	obj/kern/kernel.asm	/^f0106881:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0106884	obj/kern/kernel.asm	/^f0106884:	89 c2                	mov    %eax,%edx$/;"	l
f0106886	obj/kern/kernel.asm	/^f0106886:	89 d0                	mov    %edx,%eax$/;"	l
f0106888	obj/kern/kernel.asm	/^f0106888:	01 c0                	add    %eax,%eax$/;"	l
f010688a	obj/kern/kernel.asm	/^f010688a:	01 d0                	add    %edx,%eax$/;"	l
f010688c	obj/kern/kernel.asm	/^f010688c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010688f	obj/kern/kernel.asm	/^f010688f:	89 c2                	mov    %eax,%edx$/;"	l
f0106891	obj/kern/kernel.asm	/^f0106891:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106894	obj/kern/kernel.asm	/^f0106894:	01 d0                	add    %edx,%eax$/;"	l
f0106896	obj/kern/kernel.asm	/^f0106896:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
f010689a	obj/kern/kernel.asm	/^f010689a:	3c 84                	cmp    $0x84,%al$/;"	l
f010689c	obj/kern/kernel.asm	/^f010689c:	74 39                	je     f01068d7 <debuginfo_eip+0x35d>$/;"	l
f010689e	obj/kern/kernel.asm	/^f010689e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01068a1	obj/kern/kernel.asm	/^f01068a1:	89 c2                	mov    %eax,%edx$/;"	l
f01068a3	obj/kern/kernel.asm	/^f01068a3:	89 d0                	mov    %edx,%eax$/;"	l
f01068a5	obj/kern/kernel.asm	/^f01068a5:	01 c0                	add    %eax,%eax$/;"	l
f01068a7	obj/kern/kernel.asm	/^f01068a7:	01 d0                	add    %edx,%eax$/;"	l
f01068a9	obj/kern/kernel.asm	/^f01068a9:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01068ac	obj/kern/kernel.asm	/^f01068ac:	89 c2                	mov    %eax,%edx$/;"	l
f01068ae	obj/kern/kernel.asm	/^f01068ae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01068b1	obj/kern/kernel.asm	/^f01068b1:	01 d0                	add    %edx,%eax$/;"	l
f01068b3	obj/kern/kernel.asm	/^f01068b3:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
f01068b7	obj/kern/kernel.asm	/^f01068b7:	3c 64                	cmp    $0x64,%al$/;"	l
f01068b9	obj/kern/kernel.asm	/^f01068b9:	75 b3                	jne    f010686e <debuginfo_eip+0x2f4>$/;"	l
f01068bb	obj/kern/kernel.asm	/^f01068bb:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01068be	obj/kern/kernel.asm	/^f01068be:	89 c2                	mov    %eax,%edx$/;"	l
f01068c0	obj/kern/kernel.asm	/^f01068c0:	89 d0                	mov    %edx,%eax$/;"	l
f01068c2	obj/kern/kernel.asm	/^f01068c2:	01 c0                	add    %eax,%eax$/;"	l
f01068c4	obj/kern/kernel.asm	/^f01068c4:	01 d0                	add    %edx,%eax$/;"	l
f01068c6	obj/kern/kernel.asm	/^f01068c6:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01068c9	obj/kern/kernel.asm	/^f01068c9:	89 c2                	mov    %eax,%edx$/;"	l
f01068cb	obj/kern/kernel.asm	/^f01068cb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01068ce	obj/kern/kernel.asm	/^f01068ce:	01 d0                	add    %edx,%eax$/;"	l
f01068d0	obj/kern/kernel.asm	/^f01068d0:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f01068d3	obj/kern/kernel.asm	/^f01068d3:	85 c0                	test   %eax,%eax$/;"	l
f01068d5	obj/kern/kernel.asm	/^f01068d5:	74 97                	je     f010686e <debuginfo_eip+0x2f4>$/;"	l
f01068d7	obj/kern/kernel.asm	/^f01068d7:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f01068da	obj/kern/kernel.asm	/^f01068da:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f01068dd	obj/kern/kernel.asm	/^f01068dd:	39 c2                	cmp    %eax,%edx$/;"	l
f01068df	obj/kern/kernel.asm	/^f01068df:	7c 46                	jl     f0106927 <debuginfo_eip+0x3ad>$/;"	l
f01068e1	obj/kern/kernel.asm	/^f01068e1:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f01068e4	obj/kern/kernel.asm	/^f01068e4:	89 c2                	mov    %eax,%edx$/;"	l
f01068e6	obj/kern/kernel.asm	/^f01068e6:	89 d0                	mov    %edx,%eax$/;"	l
f01068e8	obj/kern/kernel.asm	/^f01068e8:	01 c0                	add    %eax,%eax$/;"	l
f01068ea	obj/kern/kernel.asm	/^f01068ea:	01 d0                	add    %edx,%eax$/;"	l
f01068ec	obj/kern/kernel.asm	/^f01068ec:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01068ef	obj/kern/kernel.asm	/^f01068ef:	89 c2                	mov    %eax,%edx$/;"	l
f01068f1	obj/kern/kernel.asm	/^f01068f1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01068f4	obj/kern/kernel.asm	/^f01068f4:	01 d0                	add    %edx,%eax$/;"	l
f01068f6	obj/kern/kernel.asm	/^f01068f6:	8b 00                	mov    (%eax),%eax$/;"	l
f01068f8	obj/kern/kernel.asm	/^f01068f8:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
f01068fb	obj/kern/kernel.asm	/^f01068fb:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f01068fe	obj/kern/kernel.asm	/^f01068fe:	29 d1                	sub    %edx,%ecx$/;"	l
f0106900	obj/kern/kernel.asm	/^f0106900:	89 ca                	mov    %ecx,%edx$/;"	l
f0106902	obj/kern/kernel.asm	/^f0106902:	39 d0                	cmp    %edx,%eax$/;"	l
f0106904	obj/kern/kernel.asm	/^f0106904:	73 21                	jae    f0106927 <debuginfo_eip+0x3ad>$/;"	l
f0106906	obj/kern/kernel.asm	/^f0106906:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0106909	obj/kern/kernel.asm	/^f0106909:	89 c2                	mov    %eax,%edx$/;"	l
f010690b	obj/kern/kernel.asm	/^f010690b:	89 d0                	mov    %edx,%eax$/;"	l
f010690d	obj/kern/kernel.asm	/^f010690d:	01 c0                	add    %eax,%eax$/;"	l
f010690f	obj/kern/kernel.asm	/^f010690f:	01 d0                	add    %edx,%eax$/;"	l
f0106911	obj/kern/kernel.asm	/^f0106911:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0106914	obj/kern/kernel.asm	/^f0106914:	89 c2                	mov    %eax,%edx$/;"	l
f0106916	obj/kern/kernel.asm	/^f0106916:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106919	obj/kern/kernel.asm	/^f0106919:	01 d0                	add    %edx,%eax$/;"	l
f010691b	obj/kern/kernel.asm	/^f010691b:	8b 10                	mov    (%eax),%edx$/;"	l
f010691d	obj/kern/kernel.asm	/^f010691d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0106920	obj/kern/kernel.asm	/^f0106920:	01 c2                	add    %eax,%edx$/;"	l
f0106922	obj/kern/kernel.asm	/^f0106922:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106925	obj/kern/kernel.asm	/^f0106925:	89 10                	mov    %edx,(%eax)$/;"	l
f0106927	obj/kern/kernel.asm	/^f0106927:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
f010692a	obj/kern/kernel.asm	/^f010692a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010692d	obj/kern/kernel.asm	/^f010692d:	39 c2                	cmp    %eax,%edx$/;"	l
f010692f	obj/kern/kernel.asm	/^f010692f:	7d 4a                	jge    f010697b <debuginfo_eip+0x401>$/;"	l
f0106931	obj/kern/kernel.asm	/^f0106931:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
f0106934	obj/kern/kernel.asm	/^f0106934:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106937	obj/kern/kernel.asm	/^f0106937:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f010693a	obj/kern/kernel.asm	/^f010693a:	eb 18                	jmp    f0106954 <debuginfo_eip+0x3da>$/;"	l
f010693c	obj/kern/kernel.asm	/^f010693c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010693f	obj/kern/kernel.asm	/^f010693f:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
f0106942	obj/kern/kernel.asm	/^f0106942:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0106945	obj/kern/kernel.asm	/^f0106945:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106948	obj/kern/kernel.asm	/^f0106948:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
f010694b	obj/kern/kernel.asm	/^f010694b:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f010694e	obj/kern/kernel.asm	/^f010694e:	83 c0 01             	add    $0x1,%eax$/;"	l
f0106951	obj/kern/kernel.asm	/^f0106951:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
f0106954	obj/kern/kernel.asm	/^f0106954:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
f0106957	obj/kern/kernel.asm	/^f0106957:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
f010695a	obj/kern/kernel.asm	/^f010695a:	39 c2                	cmp    %eax,%edx$/;"	l
f010695c	obj/kern/kernel.asm	/^f010695c:	7d 1d                	jge    f010697b <debuginfo_eip+0x401>$/;"	l
f010695e	obj/kern/kernel.asm	/^f010695e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
f0106961	obj/kern/kernel.asm	/^f0106961:	89 c2                	mov    %eax,%edx$/;"	l
f0106963	obj/kern/kernel.asm	/^f0106963:	89 d0                	mov    %edx,%eax$/;"	l
f0106965	obj/kern/kernel.asm	/^f0106965:	01 c0                	add    %eax,%eax$/;"	l
f0106967	obj/kern/kernel.asm	/^f0106967:	01 d0                	add    %edx,%eax$/;"	l
f0106969	obj/kern/kernel.asm	/^f0106969:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010696c	obj/kern/kernel.asm	/^f010696c:	89 c2                	mov    %eax,%edx$/;"	l
f010696e	obj/kern/kernel.asm	/^f010696e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106971	obj/kern/kernel.asm	/^f0106971:	01 d0                	add    %edx,%eax$/;"	l
f0106973	obj/kern/kernel.asm	/^f0106973:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
f0106977	obj/kern/kernel.asm	/^f0106977:	3c a0                	cmp    $0xa0,%al$/;"	l
f0106979	obj/kern/kernel.asm	/^f0106979:	74 c1                	je     f010693c <debuginfo_eip+0x3c2>$/;"	l
f010697b	obj/kern/kernel.asm	/^f010697b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106980	obj/kern/kernel.asm	/^f0106980:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0106983	obj/kern/kernel.asm	/^f0106983:	c9                   	leave  $/;"	l
f0106984	obj/kern/kernel.asm	/^f0106984:	c3                   	ret    $/;"	l
f0106985	obj/kern/kernel.asm	/^f0106985 <printnum>:$/;"	l
f0106985	obj/kern/kernel.asm	/^f0106985:	55                   	push   %ebp$/;"	l
f0106986	obj/kern/kernel.asm	/^f0106986:	89 e5                	mov    %esp,%ebp$/;"	l
f0106988	obj/kern/kernel.asm	/^f0106988:	53                   	push   %ebx$/;"	l
f0106989	obj/kern/kernel.asm	/^f0106989:	83 ec 14             	sub    $0x14,%esp$/;"	l
f010698c	obj/kern/kernel.asm	/^f010698c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010698f	obj/kern/kernel.asm	/^f010698f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0106992	obj/kern/kernel.asm	/^f0106992:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106995	obj/kern/kernel.asm	/^f0106995:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0106998	obj/kern/kernel.asm	/^f0106998:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f010699b	obj/kern/kernel.asm	/^f010699b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01069a0	obj/kern/kernel.asm	/^f01069a0:	3b 55 f4             	cmp    -0xc(%ebp),%edx$/;"	l
f01069a3	obj/kern/kernel.asm	/^f01069a3:	77 55                	ja     f01069fa <printnum+0x75>$/;"	l
f01069a5	obj/kern/kernel.asm	/^f01069a5:	3b 55 f4             	cmp    -0xc(%ebp),%edx$/;"	l
f01069a8	obj/kern/kernel.asm	/^f01069a8:	72 05                	jb     f01069af <printnum+0x2a>$/;"	l
f01069aa	obj/kern/kernel.asm	/^f01069aa:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
f01069ad	obj/kern/kernel.asm	/^f01069ad:	77 4b                	ja     f01069fa <printnum+0x75>$/;"	l
f01069af	obj/kern/kernel.asm	/^f01069af:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
f01069b2	obj/kern/kernel.asm	/^f01069b2:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f01069b5	obj/kern/kernel.asm	/^f01069b5:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
f01069b8	obj/kern/kernel.asm	/^f01069b8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01069bd	obj/kern/kernel.asm	/^f01069bd:	52                   	push   %edx$/;"	l
f01069be	obj/kern/kernel.asm	/^f01069be:	50                   	push   %eax$/;"	l
f01069bf	obj/kern/kernel.asm	/^f01069bf:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f01069c2	obj/kern/kernel.asm	/^f01069c2:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f01069c5	obj/kern/kernel.asm	/^f01069c5:	e8 c6 17 00 00       	call   f0108190 <__udivdi3>$/;"	l
f01069ca	obj/kern/kernel.asm	/^f01069ca:	83 c4 10             	add    $0x10,%esp$/;"	l
f01069cd	obj/kern/kernel.asm	/^f01069cd:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01069d0	obj/kern/kernel.asm	/^f01069d0:	ff 75 20             	pushl  0x20(%ebp)$/;"	l
f01069d3	obj/kern/kernel.asm	/^f01069d3:	53                   	push   %ebx$/;"	l
f01069d4	obj/kern/kernel.asm	/^f01069d4:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
f01069d7	obj/kern/kernel.asm	/^f01069d7:	52                   	push   %edx$/;"	l
f01069d8	obj/kern/kernel.asm	/^f01069d8:	50                   	push   %eax$/;"	l
f01069d9	obj/kern/kernel.asm	/^f01069d9:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01069dc	obj/kern/kernel.asm	/^f01069dc:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01069df	obj/kern/kernel.asm	/^f01069df:	e8 a1 ff ff ff       	call   f0106985 <printnum>$/;"	l
f01069e4	obj/kern/kernel.asm	/^f01069e4:	83 c4 20             	add    $0x20,%esp$/;"	l
f01069e7	obj/kern/kernel.asm	/^f01069e7:	eb 1b                	jmp    f0106a04 <printnum+0x7f>$/;"	l
f01069e9	obj/kern/kernel.asm	/^f01069e9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01069ec	obj/kern/kernel.asm	/^f01069ec:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01069ef	obj/kern/kernel.asm	/^f01069ef:	ff 75 20             	pushl  0x20(%ebp)$/;"	l
f01069f2	obj/kern/kernel.asm	/^f01069f2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01069f5	obj/kern/kernel.asm	/^f01069f5:	ff d0                	call   *%eax$/;"	l
f01069f7	obj/kern/kernel.asm	/^f01069f7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01069fa	obj/kern/kernel.asm	/^f01069fa:	83 6d 1c 01          	subl   $0x1,0x1c(%ebp)$/;"	l
f01069fe	obj/kern/kernel.asm	/^f01069fe:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
f0106a02	obj/kern/kernel.asm	/^f0106a02:	7f e5                	jg     f01069e9 <printnum+0x64>$/;"	l
f0106a04	obj/kern/kernel.asm	/^f0106a04:	8b 4d 18             	mov    0x18(%ebp),%ecx$/;"	l
f0106a07	obj/kern/kernel.asm	/^f0106a07:	bb 00 00 00 00       	mov    $0x0,%ebx$/;"	l
f0106a0c	obj/kern/kernel.asm	/^f0106a0c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0106a0f	obj/kern/kernel.asm	/^f0106a0f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0106a12	obj/kern/kernel.asm	/^f0106a12:	53                   	push   %ebx$/;"	l
f0106a13	obj/kern/kernel.asm	/^f0106a13:	51                   	push   %ecx$/;"	l
f0106a14	obj/kern/kernel.asm	/^f0106a14:	52                   	push   %edx$/;"	l
f0106a15	obj/kern/kernel.asm	/^f0106a15:	50                   	push   %eax$/;"	l
f0106a16	obj/kern/kernel.asm	/^f0106a16:	e8 a5 18 00 00       	call   f01082c0 <__umoddi3>$/;"	l
f0106a1b	obj/kern/kernel.asm	/^f0106a1b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106a1e	obj/kern/kernel.asm	/^f0106a1e:	05 64 9e 10 f0       	add    $0xf0109e64,%eax$/;"	l
f0106a23	obj/kern/kernel.asm	/^f0106a23:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0106a26	obj/kern/kernel.asm	/^f0106a26:	0f be c0             	movsbl %al,%eax$/;"	l
f0106a29	obj/kern/kernel.asm	/^f0106a29:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106a2c	obj/kern/kernel.asm	/^f0106a2c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0106a2f	obj/kern/kernel.asm	/^f0106a2f:	50                   	push   %eax$/;"	l
f0106a30	obj/kern/kernel.asm	/^f0106a30:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106a33	obj/kern/kernel.asm	/^f0106a33:	ff d0                	call   *%eax$/;"	l
f0106a35	obj/kern/kernel.asm	/^f0106a35:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106a38	obj/kern/kernel.asm	/^f0106a38:	90                   	nop$/;"	l
f0106a39	obj/kern/kernel.asm	/^f0106a39:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0106a3c	obj/kern/kernel.asm	/^f0106a3c:	c9                   	leave  $/;"	l
f0106a3d	obj/kern/kernel.asm	/^f0106a3d:	c3                   	ret    $/;"	l
f0106a3e	obj/kern/kernel.asm	/^f0106a3e <getuint>:$/;"	l
f0106a3e	obj/kern/kernel.asm	/^f0106a3e:	55                   	push   %ebp$/;"	l
f0106a3f	obj/kern/kernel.asm	/^f0106a3f:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a41	obj/kern/kernel.asm	/^f0106a41:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
f0106a45	obj/kern/kernel.asm	/^f0106a45:	7e 14                	jle    f0106a5b <getuint+0x1d>$/;"	l
f0106a47	obj/kern/kernel.asm	/^f0106a47:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106a4a	obj/kern/kernel.asm	/^f0106a4a:	8b 00                	mov    (%eax),%eax$/;"	l
f0106a4c	obj/kern/kernel.asm	/^f0106a4c:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
f0106a4f	obj/kern/kernel.asm	/^f0106a4f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106a52	obj/kern/kernel.asm	/^f0106a52:	89 0a                	mov    %ecx,(%edx)$/;"	l
f0106a54	obj/kern/kernel.asm	/^f0106a54:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0106a57	obj/kern/kernel.asm	/^f0106a57:	8b 00                	mov    (%eax),%eax$/;"	l
f0106a59	obj/kern/kernel.asm	/^f0106a59:	eb 30                	jmp    f0106a8b <getuint+0x4d>$/;"	l
f0106a5b	obj/kern/kernel.asm	/^f0106a5b:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0106a5f	obj/kern/kernel.asm	/^f0106a5f:	74 16                	je     f0106a77 <getuint+0x39>$/;"	l
f0106a61	obj/kern/kernel.asm	/^f0106a61:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106a64	obj/kern/kernel.asm	/^f0106a64:	8b 00                	mov    (%eax),%eax$/;"	l
f0106a66	obj/kern/kernel.asm	/^f0106a66:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f0106a69	obj/kern/kernel.asm	/^f0106a69:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106a6c	obj/kern/kernel.asm	/^f0106a6c:	89 0a                	mov    %ecx,(%edx)$/;"	l
f0106a6e	obj/kern/kernel.asm	/^f0106a6e:	8b 00                	mov    (%eax),%eax$/;"	l
f0106a70	obj/kern/kernel.asm	/^f0106a70:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106a75	obj/kern/kernel.asm	/^f0106a75:	eb 14                	jmp    f0106a8b <getuint+0x4d>$/;"	l
f0106a77	obj/kern/kernel.asm	/^f0106a77:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106a7a	obj/kern/kernel.asm	/^f0106a7a:	8b 00                	mov    (%eax),%eax$/;"	l
f0106a7c	obj/kern/kernel.asm	/^f0106a7c:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f0106a7f	obj/kern/kernel.asm	/^f0106a7f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106a82	obj/kern/kernel.asm	/^f0106a82:	89 0a                	mov    %ecx,(%edx)$/;"	l
f0106a84	obj/kern/kernel.asm	/^f0106a84:	8b 00                	mov    (%eax),%eax$/;"	l
f0106a86	obj/kern/kernel.asm	/^f0106a86:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106a8b	obj/kern/kernel.asm	/^f0106a8b:	5d                   	pop    %ebp$/;"	l
f0106a8c	obj/kern/kernel.asm	/^f0106a8c:	c3                   	ret    $/;"	l
f0106a8d	obj/kern/kernel.asm	/^f0106a8d <getint>:$/;"	l
f0106a8d	obj/kern/kernel.asm	/^f0106a8d:	55                   	push   %ebp$/;"	l
f0106a8e	obj/kern/kernel.asm	/^f0106a8e:	89 e5                	mov    %esp,%ebp$/;"	l
f0106a90	obj/kern/kernel.asm	/^f0106a90:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
f0106a94	obj/kern/kernel.asm	/^f0106a94:	7e 14                	jle    f0106aaa <getint+0x1d>$/;"	l
f0106a96	obj/kern/kernel.asm	/^f0106a96:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106a99	obj/kern/kernel.asm	/^f0106a99:	8b 00                	mov    (%eax),%eax$/;"	l
f0106a9b	obj/kern/kernel.asm	/^f0106a9b:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
f0106a9e	obj/kern/kernel.asm	/^f0106a9e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106aa1	obj/kern/kernel.asm	/^f0106aa1:	89 0a                	mov    %ecx,(%edx)$/;"	l
f0106aa3	obj/kern/kernel.asm	/^f0106aa3:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
f0106aa6	obj/kern/kernel.asm	/^f0106aa6:	8b 00                	mov    (%eax),%eax$/;"	l
f0106aa8	obj/kern/kernel.asm	/^f0106aa8:	eb 28                	jmp    f0106ad2 <getint+0x45>$/;"	l
f0106aaa	obj/kern/kernel.asm	/^f0106aaa:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0106aae	obj/kern/kernel.asm	/^f0106aae:	74 12                	je     f0106ac2 <getint+0x35>$/;"	l
f0106ab0	obj/kern/kernel.asm	/^f0106ab0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106ab3	obj/kern/kernel.asm	/^f0106ab3:	8b 00                	mov    (%eax),%eax$/;"	l
f0106ab5	obj/kern/kernel.asm	/^f0106ab5:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f0106ab8	obj/kern/kernel.asm	/^f0106ab8:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106abb	obj/kern/kernel.asm	/^f0106abb:	89 0a                	mov    %ecx,(%edx)$/;"	l
f0106abd	obj/kern/kernel.asm	/^f0106abd:	8b 00                	mov    (%eax),%eax$/;"	l
f0106abf	obj/kern/kernel.asm	/^f0106abf:	99                   	cltd   $/;"	l
f0106ac0	obj/kern/kernel.asm	/^f0106ac0:	eb 10                	jmp    f0106ad2 <getint+0x45>$/;"	l
f0106ac2	obj/kern/kernel.asm	/^f0106ac2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106ac5	obj/kern/kernel.asm	/^f0106ac5:	8b 00                	mov    (%eax),%eax$/;"	l
f0106ac7	obj/kern/kernel.asm	/^f0106ac7:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
f0106aca	obj/kern/kernel.asm	/^f0106aca:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106acd	obj/kern/kernel.asm	/^f0106acd:	89 0a                	mov    %ecx,(%edx)$/;"	l
f0106acf	obj/kern/kernel.asm	/^f0106acf:	8b 00                	mov    (%eax),%eax$/;"	l
f0106ad1	obj/kern/kernel.asm	/^f0106ad1:	99                   	cltd   $/;"	l
f0106ad2	obj/kern/kernel.asm	/^f0106ad2:	5d                   	pop    %ebp$/;"	l
f0106ad3	obj/kern/kernel.asm	/^f0106ad3:	c3                   	ret    $/;"	l
f0106ad4	obj/kern/kernel.asm	/^f0106ad4 <vprintfmt>:$/;"	l
f0106ad4	obj/kern/kernel.asm	/^f0106ad4:	55                   	push   %ebp$/;"	l
f0106ad5	obj/kern/kernel.asm	/^f0106ad5:	89 e5                	mov    %esp,%ebp$/;"	l
f0106ad7	obj/kern/kernel.asm	/^f0106ad7:	56                   	push   %esi$/;"	l
f0106ad8	obj/kern/kernel.asm	/^f0106ad8:	53                   	push   %ebx$/;"	l
f0106ad9	obj/kern/kernel.asm	/^f0106ad9:	83 ec 20             	sub    $0x20,%esp$/;"	l
f0106adc	obj/kern/kernel.asm	/^f0106adc:	eb 17                	jmp    f0106af5 <vprintfmt+0x21>$/;"	l
f0106ade	obj/kern/kernel.asm	/^f0106ade:	85 db                	test   %ebx,%ebx$/;"	l
f0106ae0	obj/kern/kernel.asm	/^f0106ae0:	0f 84 89 03 00 00    	je     f0106e6f <vprintfmt+0x39b>$/;"	l
f0106ae6	obj/kern/kernel.asm	/^f0106ae6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106ae9	obj/kern/kernel.asm	/^f0106ae9:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0106aec	obj/kern/kernel.asm	/^f0106aec:	53                   	push   %ebx$/;"	l
f0106aed	obj/kern/kernel.asm	/^f0106aed:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106af0	obj/kern/kernel.asm	/^f0106af0:	ff d0                	call   *%eax$/;"	l
f0106af2	obj/kern/kernel.asm	/^f0106af2:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106af5	obj/kern/kernel.asm	/^f0106af5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106af8	obj/kern/kernel.asm	/^f0106af8:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0106afb	obj/kern/kernel.asm	/^f0106afb:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
f0106afe	obj/kern/kernel.asm	/^f0106afe:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0106b01	obj/kern/kernel.asm	/^f0106b01:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f0106b04	obj/kern/kernel.asm	/^f0106b04:	83 fb 25             	cmp    $0x25,%ebx$/;"	l
f0106b07	obj/kern/kernel.asm	/^f0106b07:	75 d5                	jne    f0106ade <vprintfmt+0xa>$/;"	l
f0106b09	obj/kern/kernel.asm	/^f0106b09:	c6 45 db 20          	movb   $0x20,-0x25(%ebp)$/;"	l
f0106b0d	obj/kern/kernel.asm	/^f0106b0d:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
f0106b14	obj/kern/kernel.asm	/^f0106b14:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)$/;"	l
f0106b1b	obj/kern/kernel.asm	/^f0106b1b:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
f0106b22	obj/kern/kernel.asm	/^f0106b22:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
f0106b29	obj/kern/kernel.asm	/^f0106b29:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106b2c	obj/kern/kernel.asm	/^f0106b2c:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0106b2f	obj/kern/kernel.asm	/^f0106b2f:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
f0106b32	obj/kern/kernel.asm	/^f0106b32:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0106b35	obj/kern/kernel.asm	/^f0106b35:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f0106b38	obj/kern/kernel.asm	/^f0106b38:	8d 43 dd             	lea    -0x23(%ebx),%eax$/;"	l
f0106b3b	obj/kern/kernel.asm	/^f0106b3b:	83 f8 55             	cmp    $0x55,%eax$/;"	l
f0106b3e	obj/kern/kernel.asm	/^f0106b3e:	0f 87 fe 02 00 00    	ja     f0106e42 <vprintfmt+0x36e>$/;"	l
f0106b44	obj/kern/kernel.asm	/^f0106b44:	8b 04 85 88 9e 10 f0 	mov    -0xfef6178(,%eax,4),%eax$/;"	l
f0106b4b	obj/kern/kernel.asm	/^f0106b4b:	ff e0                	jmp    *%eax$/;"	l
f0106b4d	obj/kern/kernel.asm	/^f0106b4d:	c6 45 db 2d          	movb   $0x2d,-0x25(%ebp)$/;"	l
f0106b51	obj/kern/kernel.asm	/^f0106b51:	eb d6                	jmp    f0106b29 <vprintfmt+0x55>$/;"	l
f0106b53	obj/kern/kernel.asm	/^f0106b53:	c6 45 db 30          	movb   $0x30,-0x25(%ebp)$/;"	l
f0106b57	obj/kern/kernel.asm	/^f0106b57:	eb d0                	jmp    f0106b29 <vprintfmt+0x55>$/;"	l
f0106b59	obj/kern/kernel.asm	/^f0106b59:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
f0106b60	obj/kern/kernel.asm	/^f0106b60:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
f0106b63	obj/kern/kernel.asm	/^f0106b63:	89 d0                	mov    %edx,%eax$/;"	l
f0106b65	obj/kern/kernel.asm	/^f0106b65:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0106b68	obj/kern/kernel.asm	/^f0106b68:	01 d0                	add    %edx,%eax$/;"	l
f0106b6a	obj/kern/kernel.asm	/^f0106b6a:	01 c0                	add    %eax,%eax$/;"	l
f0106b6c	obj/kern/kernel.asm	/^f0106b6c:	01 d8                	add    %ebx,%eax$/;"	l
f0106b6e	obj/kern/kernel.asm	/^f0106b6e:	83 e8 30             	sub    $0x30,%eax$/;"	l
f0106b71	obj/kern/kernel.asm	/^f0106b71:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0106b74	obj/kern/kernel.asm	/^f0106b74:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106b77	obj/kern/kernel.asm	/^f0106b77:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0106b7a	obj/kern/kernel.asm	/^f0106b7a:	0f be d8             	movsbl %al,%ebx$/;"	l
f0106b7d	obj/kern/kernel.asm	/^f0106b7d:	83 fb 2f             	cmp    $0x2f,%ebx$/;"	l
f0106b80	obj/kern/kernel.asm	/^f0106b80:	7e 39                	jle    f0106bbb <vprintfmt+0xe7>$/;"	l
f0106b82	obj/kern/kernel.asm	/^f0106b82:	83 fb 39             	cmp    $0x39,%ebx$/;"	l
f0106b85	obj/kern/kernel.asm	/^f0106b85:	7f 34                	jg     f0106bbb <vprintfmt+0xe7>$/;"	l
f0106b87	obj/kern/kernel.asm	/^f0106b87:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
f0106b8b	obj/kern/kernel.asm	/^f0106b8b:	eb d3                	jmp    f0106b60 <vprintfmt+0x8c>$/;"	l
f0106b8d	obj/kern/kernel.asm	/^f0106b8d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106b90	obj/kern/kernel.asm	/^f0106b90:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106b93	obj/kern/kernel.asm	/^f0106b93:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106b96	obj/kern/kernel.asm	/^f0106b96:	8b 00                	mov    (%eax),%eax$/;"	l
f0106b98	obj/kern/kernel.asm	/^f0106b98:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
f0106b9b	obj/kern/kernel.asm	/^f0106b9b:	eb 1f                	jmp    f0106bbc <vprintfmt+0xe8>$/;"	l
f0106b9d	obj/kern/kernel.asm	/^f0106b9d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0106ba1	obj/kern/kernel.asm	/^f0106ba1:	79 86                	jns    f0106b29 <vprintfmt+0x55>$/;"	l
f0106ba3	obj/kern/kernel.asm	/^f0106ba3:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f0106baa	obj/kern/kernel.asm	/^f0106baa:	e9 7a ff ff ff       	jmp    f0106b29 <vprintfmt+0x55>$/;"	l
f0106baf	obj/kern/kernel.asm	/^f0106baf:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)$/;"	l
f0106bb6	obj/kern/kernel.asm	/^f0106bb6:	e9 6e ff ff ff       	jmp    f0106b29 <vprintfmt+0x55>$/;"	l
f0106bbb	obj/kern/kernel.asm	/^f0106bbb:	90                   	nop$/;"	l
f0106bbc	obj/kern/kernel.asm	/^f0106bbc:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0106bc0	obj/kern/kernel.asm	/^f0106bc0:	0f 89 63 ff ff ff    	jns    f0106b29 <vprintfmt+0x55>$/;"	l
f0106bc6	obj/kern/kernel.asm	/^f0106bc6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0106bc9	obj/kern/kernel.asm	/^f0106bc9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
f0106bcc	obj/kern/kernel.asm	/^f0106bcc:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%ebp)$/;"	l
f0106bd3	obj/kern/kernel.asm	/^f0106bd3:	e9 51 ff ff ff       	jmp    f0106b29 <vprintfmt+0x55>$/;"	l
f0106bd8	obj/kern/kernel.asm	/^f0106bd8:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)$/;"	l
f0106bdc	obj/kern/kernel.asm	/^f0106bdc:	e9 48 ff ff ff       	jmp    f0106b29 <vprintfmt+0x55>$/;"	l
f0106be1	obj/kern/kernel.asm	/^f0106be1:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106be4	obj/kern/kernel.asm	/^f0106be4:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106be7	obj/kern/kernel.asm	/^f0106be7:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106bea	obj/kern/kernel.asm	/^f0106bea:	8b 00                	mov    (%eax),%eax$/;"	l
f0106bec	obj/kern/kernel.asm	/^f0106bec:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106bef	obj/kern/kernel.asm	/^f0106bef:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0106bf2	obj/kern/kernel.asm	/^f0106bf2:	50                   	push   %eax$/;"	l
f0106bf3	obj/kern/kernel.asm	/^f0106bf3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106bf6	obj/kern/kernel.asm	/^f0106bf6:	ff d0                	call   *%eax$/;"	l
f0106bf8	obj/kern/kernel.asm	/^f0106bf8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106bfb	obj/kern/kernel.asm	/^f0106bfb:	e9 6a 02 00 00       	jmp    f0106e6a <vprintfmt+0x396>$/;"	l
f0106c00	obj/kern/kernel.asm	/^f0106c00:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106c03	obj/kern/kernel.asm	/^f0106c03:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106c06	obj/kern/kernel.asm	/^f0106c06:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106c09	obj/kern/kernel.asm	/^f0106c09:	8b 18                	mov    (%eax),%ebx$/;"	l
f0106c0b	obj/kern/kernel.asm	/^f0106c0b:	85 db                	test   %ebx,%ebx$/;"	l
f0106c0d	obj/kern/kernel.asm	/^f0106c0d:	79 02                	jns    f0106c11 <vprintfmt+0x13d>$/;"	l
f0106c0f	obj/kern/kernel.asm	/^f0106c0f:	f7 db                	neg    %ebx$/;"	l
f0106c11	obj/kern/kernel.asm	/^f0106c11:	83 fb 08             	cmp    $0x8,%ebx$/;"	l
f0106c14	obj/kern/kernel.asm	/^f0106c14:	7f 0b                	jg     f0106c21 <vprintfmt+0x14d>$/;"	l
f0106c16	obj/kern/kernel.asm	/^f0106c16:	8b 34 9d 40 9e 10 f0 	mov    -0xfef61c0(,%ebx,4),%esi$/;"	l
f0106c1d	obj/kern/kernel.asm	/^f0106c1d:	85 f6                	test   %esi,%esi$/;"	l
f0106c1f	obj/kern/kernel.asm	/^f0106c1f:	75 19                	jne    f0106c3a <vprintfmt+0x166>$/;"	l
f0106c21	obj/kern/kernel.asm	/^f0106c21:	53                   	push   %ebx$/;"	l
f0106c22	obj/kern/kernel.asm	/^f0106c22:	68 75 9e 10 f0       	push   $0xf0109e75$/;"	l
f0106c27	obj/kern/kernel.asm	/^f0106c27:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0106c2a	obj/kern/kernel.asm	/^f0106c2a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0106c2d	obj/kern/kernel.asm	/^f0106c2d:	e8 45 02 00 00       	call   f0106e77 <printfmt>$/;"	l
f0106c32	obj/kern/kernel.asm	/^f0106c32:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106c35	obj/kern/kernel.asm	/^f0106c35:	e9 30 02 00 00       	jmp    f0106e6a <vprintfmt+0x396>$/;"	l
f0106c3a	obj/kern/kernel.asm	/^f0106c3a:	56                   	push   %esi$/;"	l
f0106c3b	obj/kern/kernel.asm	/^f0106c3b:	68 7e 9e 10 f0       	push   $0xf0109e7e$/;"	l
f0106c40	obj/kern/kernel.asm	/^f0106c40:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0106c43	obj/kern/kernel.asm	/^f0106c43:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0106c46	obj/kern/kernel.asm	/^f0106c46:	e8 2c 02 00 00       	call   f0106e77 <printfmt>$/;"	l
f0106c4b	obj/kern/kernel.asm	/^f0106c4b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106c4e	obj/kern/kernel.asm	/^f0106c4e:	e9 17 02 00 00       	jmp    f0106e6a <vprintfmt+0x396>$/;"	l
f0106c53	obj/kern/kernel.asm	/^f0106c53:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106c56	obj/kern/kernel.asm	/^f0106c56:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106c59	obj/kern/kernel.asm	/^f0106c59:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106c5c	obj/kern/kernel.asm	/^f0106c5c:	8b 30                	mov    (%eax),%esi$/;"	l
f0106c5e	obj/kern/kernel.asm	/^f0106c5e:	85 f6                	test   %esi,%esi$/;"	l
f0106c60	obj/kern/kernel.asm	/^f0106c60:	75 05                	jne    f0106c67 <vprintfmt+0x193>$/;"	l
f0106c62	obj/kern/kernel.asm	/^f0106c62:	be 81 9e 10 f0       	mov    $0xf0109e81,%esi$/;"	l
f0106c67	obj/kern/kernel.asm	/^f0106c67:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0106c6b	obj/kern/kernel.asm	/^f0106c6b:	7e 6f                	jle    f0106cdc <vprintfmt+0x208>$/;"	l
f0106c6d	obj/kern/kernel.asm	/^f0106c6d:	80 7d db 2d          	cmpb   $0x2d,-0x25(%ebp)$/;"	l
f0106c71	obj/kern/kernel.asm	/^f0106c71:	74 69                	je     f0106cdc <vprintfmt+0x208>$/;"	l
f0106c73	obj/kern/kernel.asm	/^f0106c73:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
f0106c76	obj/kern/kernel.asm	/^f0106c76:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106c79	obj/kern/kernel.asm	/^f0106c79:	50                   	push   %eax$/;"	l
f0106c7a	obj/kern/kernel.asm	/^f0106c7a:	56                   	push   %esi$/;"	l
f0106c7b	obj/kern/kernel.asm	/^f0106c7b:	e8 f5 03 00 00       	call   f0107075 <strnlen>$/;"	l
f0106c80	obj/kern/kernel.asm	/^f0106c80:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106c83	obj/kern/kernel.asm	/^f0106c83:	29 45 e4             	sub    %eax,-0x1c(%ebp)$/;"	l
f0106c86	obj/kern/kernel.asm	/^f0106c86:	eb 17                	jmp    f0106c9f <vprintfmt+0x1cb>$/;"	l
f0106c88	obj/kern/kernel.asm	/^f0106c88:	0f be 45 db          	movsbl -0x25(%ebp),%eax$/;"	l
f0106c8c	obj/kern/kernel.asm	/^f0106c8c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106c8f	obj/kern/kernel.asm	/^f0106c8f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0106c92	obj/kern/kernel.asm	/^f0106c92:	50                   	push   %eax$/;"	l
f0106c93	obj/kern/kernel.asm	/^f0106c93:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106c96	obj/kern/kernel.asm	/^f0106c96:	ff d0                	call   *%eax$/;"	l
f0106c98	obj/kern/kernel.asm	/^f0106c98:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106c9b	obj/kern/kernel.asm	/^f0106c9b:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)$/;"	l
f0106c9f	obj/kern/kernel.asm	/^f0106c9f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0106ca3	obj/kern/kernel.asm	/^f0106ca3:	7f e3                	jg     f0106c88 <vprintfmt+0x1b4>$/;"	l
f0106ca5	obj/kern/kernel.asm	/^f0106ca5:	eb 35                	jmp    f0106cdc <vprintfmt+0x208>$/;"	l
f0106ca7	obj/kern/kernel.asm	/^f0106ca7:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
f0106cab	obj/kern/kernel.asm	/^f0106cab:	74 1c                	je     f0106cc9 <vprintfmt+0x1f5>$/;"	l
f0106cad	obj/kern/kernel.asm	/^f0106cad:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f0106cb0	obj/kern/kernel.asm	/^f0106cb0:	7e 05                	jle    f0106cb7 <vprintfmt+0x1e3>$/;"	l
f0106cb2	obj/kern/kernel.asm	/^f0106cb2:	83 fb 7e             	cmp    $0x7e,%ebx$/;"	l
f0106cb5	obj/kern/kernel.asm	/^f0106cb5:	7e 12                	jle    f0106cc9 <vprintfmt+0x1f5>$/;"	l
f0106cb7	obj/kern/kernel.asm	/^f0106cb7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106cba	obj/kern/kernel.asm	/^f0106cba:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0106cbd	obj/kern/kernel.asm	/^f0106cbd:	6a 3f                	push   $0x3f$/;"	l
f0106cbf	obj/kern/kernel.asm	/^f0106cbf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106cc2	obj/kern/kernel.asm	/^f0106cc2:	ff d0                	call   *%eax$/;"	l
f0106cc4	obj/kern/kernel.asm	/^f0106cc4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106cc7	obj/kern/kernel.asm	/^f0106cc7:	eb 0f                	jmp    f0106cd8 <vprintfmt+0x204>$/;"	l
f0106cc9	obj/kern/kernel.asm	/^f0106cc9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106ccc	obj/kern/kernel.asm	/^f0106ccc:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0106ccf	obj/kern/kernel.asm	/^f0106ccf:	53                   	push   %ebx$/;"	l
f0106cd0	obj/kern/kernel.asm	/^f0106cd0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106cd3	obj/kern/kernel.asm	/^f0106cd3:	ff d0                	call   *%eax$/;"	l
f0106cd5	obj/kern/kernel.asm	/^f0106cd5:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106cd8	obj/kern/kernel.asm	/^f0106cd8:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)$/;"	l
f0106cdc	obj/kern/kernel.asm	/^f0106cdc:	89 f0                	mov    %esi,%eax$/;"	l
f0106cde	obj/kern/kernel.asm	/^f0106cde:	8d 70 01             	lea    0x1(%eax),%esi$/;"	l
f0106ce1	obj/kern/kernel.asm	/^f0106ce1:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0106ce4	obj/kern/kernel.asm	/^f0106ce4:	0f be d8             	movsbl %al,%ebx$/;"	l
f0106ce7	obj/kern/kernel.asm	/^f0106ce7:	85 db                	test   %ebx,%ebx$/;"	l
f0106ce9	obj/kern/kernel.asm	/^f0106ce9:	74 26                	je     f0106d11 <vprintfmt+0x23d>$/;"	l
f0106ceb	obj/kern/kernel.asm	/^f0106ceb:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0106cef	obj/kern/kernel.asm	/^f0106cef:	78 b6                	js     f0106ca7 <vprintfmt+0x1d3>$/;"	l
f0106cf1	obj/kern/kernel.asm	/^f0106cf1:	83 6d e0 01          	subl   $0x1,-0x20(%ebp)$/;"	l
f0106cf5	obj/kern/kernel.asm	/^f0106cf5:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
f0106cf9	obj/kern/kernel.asm	/^f0106cf9:	79 ac                	jns    f0106ca7 <vprintfmt+0x1d3>$/;"	l
f0106cfb	obj/kern/kernel.asm	/^f0106cfb:	eb 14                	jmp    f0106d11 <vprintfmt+0x23d>$/;"	l
f0106cfd	obj/kern/kernel.asm	/^f0106cfd:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106d00	obj/kern/kernel.asm	/^f0106d00:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0106d03	obj/kern/kernel.asm	/^f0106d03:	6a 20                	push   $0x20$/;"	l
f0106d05	obj/kern/kernel.asm	/^f0106d05:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106d08	obj/kern/kernel.asm	/^f0106d08:	ff d0                	call   *%eax$/;"	l
f0106d0a	obj/kern/kernel.asm	/^f0106d0a:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106d0d	obj/kern/kernel.asm	/^f0106d0d:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)$/;"	l
f0106d11	obj/kern/kernel.asm	/^f0106d11:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
f0106d15	obj/kern/kernel.asm	/^f0106d15:	7f e6                	jg     f0106cfd <vprintfmt+0x229>$/;"	l
f0106d17	obj/kern/kernel.asm	/^f0106d17:	e9 4e 01 00 00       	jmp    f0106e6a <vprintfmt+0x396>$/;"	l
f0106d1c	obj/kern/kernel.asm	/^f0106d1c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106d1f	obj/kern/kernel.asm	/^f0106d1f:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
f0106d22	obj/kern/kernel.asm	/^f0106d22:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0106d25	obj/kern/kernel.asm	/^f0106d25:	50                   	push   %eax$/;"	l
f0106d26	obj/kern/kernel.asm	/^f0106d26:	e8 62 fd ff ff       	call   f0106a8d <getint>$/;"	l
f0106d2b	obj/kern/kernel.asm	/^f0106d2b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106d2e	obj/kern/kernel.asm	/^f0106d2e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0106d31	obj/kern/kernel.asm	/^f0106d31:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0106d34	obj/kern/kernel.asm	/^f0106d34:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0106d37	obj/kern/kernel.asm	/^f0106d37:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0106d3a	obj/kern/kernel.asm	/^f0106d3a:	85 d2                	test   %edx,%edx$/;"	l
f0106d3c	obj/kern/kernel.asm	/^f0106d3c:	79 23                	jns    f0106d61 <vprintfmt+0x28d>$/;"	l
f0106d3e	obj/kern/kernel.asm	/^f0106d3e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106d41	obj/kern/kernel.asm	/^f0106d41:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0106d44	obj/kern/kernel.asm	/^f0106d44:	6a 2d                	push   $0x2d$/;"	l
f0106d46	obj/kern/kernel.asm	/^f0106d46:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106d49	obj/kern/kernel.asm	/^f0106d49:	ff d0                	call   *%eax$/;"	l
f0106d4b	obj/kern/kernel.asm	/^f0106d4b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106d4e	obj/kern/kernel.asm	/^f0106d4e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0106d51	obj/kern/kernel.asm	/^f0106d51:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0106d54	obj/kern/kernel.asm	/^f0106d54:	f7 d8                	neg    %eax$/;"	l
f0106d56	obj/kern/kernel.asm	/^f0106d56:	83 d2 00             	adc    $0x0,%edx$/;"	l
f0106d59	obj/kern/kernel.asm	/^f0106d59:	f7 da                	neg    %edx$/;"	l
f0106d5b	obj/kern/kernel.asm	/^f0106d5b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0106d5e	obj/kern/kernel.asm	/^f0106d5e:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0106d61	obj/kern/kernel.asm	/^f0106d61:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
f0106d68	obj/kern/kernel.asm	/^f0106d68:	e9 9f 00 00 00       	jmp    f0106e0c <vprintfmt+0x338>$/;"	l
f0106d6d	obj/kern/kernel.asm	/^f0106d6d:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106d70	obj/kern/kernel.asm	/^f0106d70:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
f0106d73	obj/kern/kernel.asm	/^f0106d73:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0106d76	obj/kern/kernel.asm	/^f0106d76:	50                   	push   %eax$/;"	l
f0106d77	obj/kern/kernel.asm	/^f0106d77:	e8 c2 fc ff ff       	call   f0106a3e <getuint>$/;"	l
f0106d7c	obj/kern/kernel.asm	/^f0106d7c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106d7f	obj/kern/kernel.asm	/^f0106d7f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0106d82	obj/kern/kernel.asm	/^f0106d82:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0106d85	obj/kern/kernel.asm	/^f0106d85:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
f0106d8c	obj/kern/kernel.asm	/^f0106d8c:	eb 7e                	jmp    f0106e0c <vprintfmt+0x338>$/;"	l
f0106d8e	obj/kern/kernel.asm	/^f0106d8e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106d91	obj/kern/kernel.asm	/^f0106d91:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
f0106d94	obj/kern/kernel.asm	/^f0106d94:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0106d97	obj/kern/kernel.asm	/^f0106d97:	50                   	push   %eax$/;"	l
f0106d98	obj/kern/kernel.asm	/^f0106d98:	e8 a1 fc ff ff       	call   f0106a3e <getuint>$/;"	l
f0106d9d	obj/kern/kernel.asm	/^f0106d9d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106da0	obj/kern/kernel.asm	/^f0106da0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0106da3	obj/kern/kernel.asm	/^f0106da3:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0106da6	obj/kern/kernel.asm	/^f0106da6:	c7 45 ec 08 00 00 00 	movl   $0x8,-0x14(%ebp)$/;"	l
f0106dad	obj/kern/kernel.asm	/^f0106dad:	eb 5d                	jmp    f0106e0c <vprintfmt+0x338>$/;"	l
f0106daf	obj/kern/kernel.asm	/^f0106daf:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106db2	obj/kern/kernel.asm	/^f0106db2:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0106db5	obj/kern/kernel.asm	/^f0106db5:	6a 30                	push   $0x30$/;"	l
f0106db7	obj/kern/kernel.asm	/^f0106db7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106dba	obj/kern/kernel.asm	/^f0106dba:	ff d0                	call   *%eax$/;"	l
f0106dbc	obj/kern/kernel.asm	/^f0106dbc:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106dbf	obj/kern/kernel.asm	/^f0106dbf:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106dc2	obj/kern/kernel.asm	/^f0106dc2:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0106dc5	obj/kern/kernel.asm	/^f0106dc5:	6a 78                	push   $0x78$/;"	l
f0106dc7	obj/kern/kernel.asm	/^f0106dc7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106dca	obj/kern/kernel.asm	/^f0106dca:	ff d0                	call   *%eax$/;"	l
f0106dcc	obj/kern/kernel.asm	/^f0106dcc:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106dcf	obj/kern/kernel.asm	/^f0106dcf:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
f0106dd2	obj/kern/kernel.asm	/^f0106dd2:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
f0106dd5	obj/kern/kernel.asm	/^f0106dd5:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
f0106dd8	obj/kern/kernel.asm	/^f0106dd8:	8b 00                	mov    (%eax),%eax$/;"	l
f0106dda	obj/kern/kernel.asm	/^f0106dda:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0106ddd	obj/kern/kernel.asm	/^f0106ddd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0106de4	obj/kern/kernel.asm	/^f0106de4:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
f0106deb	obj/kern/kernel.asm	/^f0106deb:	eb 1f                	jmp    f0106e0c <vprintfmt+0x338>$/;"	l
f0106ded	obj/kern/kernel.asm	/^f0106ded:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106df0	obj/kern/kernel.asm	/^f0106df0:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
f0106df3	obj/kern/kernel.asm	/^f0106df3:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0106df6	obj/kern/kernel.asm	/^f0106df6:	50                   	push   %eax$/;"	l
f0106df7	obj/kern/kernel.asm	/^f0106df7:	e8 42 fc ff ff       	call   f0106a3e <getuint>$/;"	l
f0106dfc	obj/kern/kernel.asm	/^f0106dfc:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106dff	obj/kern/kernel.asm	/^f0106dff:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0106e02	obj/kern/kernel.asm	/^f0106e02:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0106e05	obj/kern/kernel.asm	/^f0106e05:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
f0106e0c	obj/kern/kernel.asm	/^f0106e0c:	0f be 55 db          	movsbl -0x25(%ebp),%edx$/;"	l
f0106e10	obj/kern/kernel.asm	/^f0106e10:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0106e13	obj/kern/kernel.asm	/^f0106e13:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0106e16	obj/kern/kernel.asm	/^f0106e16:	52                   	push   %edx$/;"	l
f0106e17	obj/kern/kernel.asm	/^f0106e17:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
f0106e1a	obj/kern/kernel.asm	/^f0106e1a:	50                   	push   %eax$/;"	l
f0106e1b	obj/kern/kernel.asm	/^f0106e1b:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f0106e1e	obj/kern/kernel.asm	/^f0106e1e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f0106e21	obj/kern/kernel.asm	/^f0106e21:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0106e24	obj/kern/kernel.asm	/^f0106e24:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0106e27	obj/kern/kernel.asm	/^f0106e27:	e8 59 fb ff ff       	call   f0106985 <printnum>$/;"	l
f0106e2c	obj/kern/kernel.asm	/^f0106e2c:	83 c4 20             	add    $0x20,%esp$/;"	l
f0106e2f	obj/kern/kernel.asm	/^f0106e2f:	eb 39                	jmp    f0106e6a <vprintfmt+0x396>$/;"	l
f0106e31	obj/kern/kernel.asm	/^f0106e31:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106e34	obj/kern/kernel.asm	/^f0106e34:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0106e37	obj/kern/kernel.asm	/^f0106e37:	53                   	push   %ebx$/;"	l
f0106e38	obj/kern/kernel.asm	/^f0106e38:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106e3b	obj/kern/kernel.asm	/^f0106e3b:	ff d0                	call   *%eax$/;"	l
f0106e3d	obj/kern/kernel.asm	/^f0106e3d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106e40	obj/kern/kernel.asm	/^f0106e40:	eb 28                	jmp    f0106e6a <vprintfmt+0x396>$/;"	l
f0106e42	obj/kern/kernel.asm	/^f0106e42:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106e45	obj/kern/kernel.asm	/^f0106e45:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0106e48	obj/kern/kernel.asm	/^f0106e48:	6a 25                	push   $0x25$/;"	l
f0106e4a	obj/kern/kernel.asm	/^f0106e4a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106e4d	obj/kern/kernel.asm	/^f0106e4d:	ff d0                	call   *%eax$/;"	l
f0106e4f	obj/kern/kernel.asm	/^f0106e4f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106e52	obj/kern/kernel.asm	/^f0106e52:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
f0106e56	obj/kern/kernel.asm	/^f0106e56:	eb 04                	jmp    f0106e5c <vprintfmt+0x388>$/;"	l
f0106e58	obj/kern/kernel.asm	/^f0106e58:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
f0106e5c	obj/kern/kernel.asm	/^f0106e5c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0106e5f	obj/kern/kernel.asm	/^f0106e5f:	83 e8 01             	sub    $0x1,%eax$/;"	l
f0106e62	obj/kern/kernel.asm	/^f0106e62:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0106e65	obj/kern/kernel.asm	/^f0106e65:	3c 25                	cmp    $0x25,%al$/;"	l
f0106e67	obj/kern/kernel.asm	/^f0106e67:	75 ef                	jne    f0106e58 <vprintfmt+0x384>$/;"	l
f0106e69	obj/kern/kernel.asm	/^f0106e69:	90                   	nop$/;"	l
f0106e6a	obj/kern/kernel.asm	/^f0106e6a:	e9 6d fc ff ff       	jmp    f0106adc <vprintfmt+0x8>$/;"	l
f0106e6f	obj/kern/kernel.asm	/^f0106e6f:	90                   	nop$/;"	l
f0106e70	obj/kern/kernel.asm	/^f0106e70:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
f0106e73	obj/kern/kernel.asm	/^f0106e73:	5b                   	pop    %ebx$/;"	l
f0106e74	obj/kern/kernel.asm	/^f0106e74:	5e                   	pop    %esi$/;"	l
f0106e75	obj/kern/kernel.asm	/^f0106e75:	5d                   	pop    %ebp$/;"	l
f0106e76	obj/kern/kernel.asm	/^f0106e76:	c3                   	ret    $/;"	l
f0106e77	obj/kern/kernel.asm	/^f0106e77 <printfmt>:$/;"	l
f0106e77	obj/kern/kernel.asm	/^f0106e77:	55                   	push   %ebp$/;"	l
f0106e78	obj/kern/kernel.asm	/^f0106e78:	89 e5                	mov    %esp,%ebp$/;"	l
f0106e7a	obj/kern/kernel.asm	/^f0106e7a:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106e7d	obj/kern/kernel.asm	/^f0106e7d:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0106e80	obj/kern/kernel.asm	/^f0106e80:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0106e83	obj/kern/kernel.asm	/^f0106e83:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106e86	obj/kern/kernel.asm	/^f0106e86:	50                   	push   %eax$/;"	l
f0106e87	obj/kern/kernel.asm	/^f0106e87:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0106e8a	obj/kern/kernel.asm	/^f0106e8a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0106e8d	obj/kern/kernel.asm	/^f0106e8d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0106e90	obj/kern/kernel.asm	/^f0106e90:	e8 3f fc ff ff       	call   f0106ad4 <vprintfmt>$/;"	l
f0106e95	obj/kern/kernel.asm	/^f0106e95:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106e98	obj/kern/kernel.asm	/^f0106e98:	90                   	nop$/;"	l
f0106e99	obj/kern/kernel.asm	/^f0106e99:	c9                   	leave  $/;"	l
f0106e9a	obj/kern/kernel.asm	/^f0106e9a:	c3                   	ret    $/;"	l
f0106e9b	obj/kern/kernel.asm	/^f0106e9b <sprintputch>:$/;"	l
f0106e9b	obj/kern/kernel.asm	/^f0106e9b:	55                   	push   %ebp$/;"	l
f0106e9c	obj/kern/kernel.asm	/^f0106e9c:	89 e5                	mov    %esp,%ebp$/;"	l
f0106e9e	obj/kern/kernel.asm	/^f0106e9e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106ea1	obj/kern/kernel.asm	/^f0106ea1:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0106ea4	obj/kern/kernel.asm	/^f0106ea4:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0106ea7	obj/kern/kernel.asm	/^f0106ea7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106eaa	obj/kern/kernel.asm	/^f0106eaa:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
f0106ead	obj/kern/kernel.asm	/^f0106ead:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106eb0	obj/kern/kernel.asm	/^f0106eb0:	8b 10                	mov    (%eax),%edx$/;"	l
f0106eb2	obj/kern/kernel.asm	/^f0106eb2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106eb5	obj/kern/kernel.asm	/^f0106eb5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0106eb8	obj/kern/kernel.asm	/^f0106eb8:	39 c2                	cmp    %eax,%edx$/;"	l
f0106eba	obj/kern/kernel.asm	/^f0106eba:	73 12                	jae    f0106ece <sprintputch+0x33>$/;"	l
f0106ebc	obj/kern/kernel.asm	/^f0106ebc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106ebf	obj/kern/kernel.asm	/^f0106ebf:	8b 00                	mov    (%eax),%eax$/;"	l
f0106ec1	obj/kern/kernel.asm	/^f0106ec1:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
f0106ec4	obj/kern/kernel.asm	/^f0106ec4:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0106ec7	obj/kern/kernel.asm	/^f0106ec7:	89 0a                	mov    %ecx,(%edx)$/;"	l
f0106ec9	obj/kern/kernel.asm	/^f0106ec9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0106ecc	obj/kern/kernel.asm	/^f0106ecc:	88 10                	mov    %dl,(%eax)$/;"	l
f0106ece	obj/kern/kernel.asm	/^f0106ece:	90                   	nop$/;"	l
f0106ecf	obj/kern/kernel.asm	/^f0106ecf:	5d                   	pop    %ebp$/;"	l
f0106ed0	obj/kern/kernel.asm	/^f0106ed0:	c3                   	ret    $/;"	l
f0106ed1	obj/kern/kernel.asm	/^f0106ed1 <vsnprintf>:$/;"	l
f0106ed1	obj/kern/kernel.asm	/^f0106ed1:	55                   	push   %ebp$/;"	l
f0106ed2	obj/kern/kernel.asm	/^f0106ed2:	89 e5                	mov    %esp,%ebp$/;"	l
f0106ed4	obj/kern/kernel.asm	/^f0106ed4:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106ed7	obj/kern/kernel.asm	/^f0106ed7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106eda	obj/kern/kernel.asm	/^f0106eda:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0106edd	obj/kern/kernel.asm	/^f0106edd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0106ee0	obj/kern/kernel.asm	/^f0106ee0:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f0106ee3	obj/kern/kernel.asm	/^f0106ee3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0106ee6	obj/kern/kernel.asm	/^f0106ee6:	01 d0                	add    %edx,%eax$/;"	l
f0106ee8	obj/kern/kernel.asm	/^f0106ee8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0106eeb	obj/kern/kernel.asm	/^f0106eeb:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0106ef2	obj/kern/kernel.asm	/^f0106ef2:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0106ef6	obj/kern/kernel.asm	/^f0106ef6:	74 06                	je     f0106efe <vsnprintf+0x2d>$/;"	l
f0106ef8	obj/kern/kernel.asm	/^f0106ef8:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0106efc	obj/kern/kernel.asm	/^f0106efc:	7f 07                	jg     f0106f05 <vsnprintf+0x34>$/;"	l
f0106efe	obj/kern/kernel.asm	/^f0106efe:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f0106f03	obj/kern/kernel.asm	/^f0106f03:	eb 20                	jmp    f0106f25 <vsnprintf+0x54>$/;"	l
f0106f05	obj/kern/kernel.asm	/^f0106f05:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
f0106f08	obj/kern/kernel.asm	/^f0106f08:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0106f0b	obj/kern/kernel.asm	/^f0106f0b:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
f0106f0e	obj/kern/kernel.asm	/^f0106f0e:	50                   	push   %eax$/;"	l
f0106f0f	obj/kern/kernel.asm	/^f0106f0f:	68 9b 6e 10 f0       	push   $0xf0106e9b$/;"	l
f0106f14	obj/kern/kernel.asm	/^f0106f14:	e8 bb fb ff ff       	call   f0106ad4 <vprintfmt>$/;"	l
f0106f19	obj/kern/kernel.asm	/^f0106f19:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106f1c	obj/kern/kernel.asm	/^f0106f1c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0106f1f	obj/kern/kernel.asm	/^f0106f1f:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0106f22	obj/kern/kernel.asm	/^f0106f22:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106f25	obj/kern/kernel.asm	/^f0106f25:	c9                   	leave  $/;"	l
f0106f26	obj/kern/kernel.asm	/^f0106f26:	c3                   	ret    $/;"	l
f0106f27	obj/kern/kernel.asm	/^f0106f27 <snprintf>:$/;"	l
f0106f27	obj/kern/kernel.asm	/^f0106f27:	55                   	push   %ebp$/;"	l
f0106f28	obj/kern/kernel.asm	/^f0106f28:	89 e5                	mov    %esp,%ebp$/;"	l
f0106f2a	obj/kern/kernel.asm	/^f0106f2a:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106f2d	obj/kern/kernel.asm	/^f0106f2d:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
f0106f30	obj/kern/kernel.asm	/^f0106f30:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0106f33	obj/kern/kernel.asm	/^f0106f33:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0106f36	obj/kern/kernel.asm	/^f0106f36:	50                   	push   %eax$/;"	l
f0106f37	obj/kern/kernel.asm	/^f0106f37:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0106f3a	obj/kern/kernel.asm	/^f0106f3a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0106f3d	obj/kern/kernel.asm	/^f0106f3d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0106f40	obj/kern/kernel.asm	/^f0106f40:	e8 8c ff ff ff       	call   f0106ed1 <vsnprintf>$/;"	l
f0106f45	obj/kern/kernel.asm	/^f0106f45:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106f48	obj/kern/kernel.asm	/^f0106f48:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0106f4b	obj/kern/kernel.asm	/^f0106f4b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0106f4e	obj/kern/kernel.asm	/^f0106f4e:	c9                   	leave  $/;"	l
f0106f4f	obj/kern/kernel.asm	/^f0106f4f:	c3                   	ret    $/;"	l
f0106f50	obj/kern/kernel.asm	/^f0106f50 <readline>:$/;"	l
f0106f50	obj/kern/kernel.asm	/^f0106f50:	55                   	push   %ebp$/;"	l
f0106f51	obj/kern/kernel.asm	/^f0106f51:	89 e5                	mov    %esp,%ebp$/;"	l
f0106f53	obj/kern/kernel.asm	/^f0106f53:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0106f56	obj/kern/kernel.asm	/^f0106f56:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
f0106f5a	obj/kern/kernel.asm	/^f0106f5a:	74 13                	je     f0106f6f <readline+0x1f>$/;"	l
f0106f5c	obj/kern/kernel.asm	/^f0106f5c:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106f5f	obj/kern/kernel.asm	/^f0106f5f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0106f62	obj/kern/kernel.asm	/^f0106f62:	68 e0 9f 10 f0       	push   $0xf0109fe0$/;"	l
f0106f67	obj/kern/kernel.asm	/^f0106f67:	e8 42 da ff ff       	call   f01049ae <cprintf>$/;"	l
f0106f6c	obj/kern/kernel.asm	/^f0106f6c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106f6f	obj/kern/kernel.asm	/^f0106f6f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0106f76	obj/kern/kernel.asm	/^f0106f76:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106f79	obj/kern/kernel.asm	/^f0106f79:	6a 00                	push   $0x0$/;"	l
f0106f7b	obj/kern/kernel.asm	/^f0106f7b:	e8 00 9c ff ff       	call   f0100b80 <iscons>$/;"	l
f0106f80	obj/kern/kernel.asm	/^f0106f80:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106f83	obj/kern/kernel.asm	/^f0106f83:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0106f86	obj/kern/kernel.asm	/^f0106f86:	e8 dc 9b ff ff       	call   f0100b67 <getchar>$/;"	l
f0106f8b	obj/kern/kernel.asm	/^f0106f8b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0106f8e	obj/kern/kernel.asm	/^f0106f8e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f0106f92	obj/kern/kernel.asm	/^f0106f92:	79 1d                	jns    f0106fb1 <readline+0x61>$/;"	l
f0106f94	obj/kern/kernel.asm	/^f0106f94:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0106f97	obj/kern/kernel.asm	/^f0106f97:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f0106f9a	obj/kern/kernel.asm	/^f0106f9a:	68 e3 9f 10 f0       	push   $0xf0109fe3$/;"	l
f0106f9f	obj/kern/kernel.asm	/^f0106f9f:	e8 0a da ff ff       	call   f01049ae <cprintf>$/;"	l
f0106fa4	obj/kern/kernel.asm	/^f0106fa4:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106fa7	obj/kern/kernel.asm	/^f0106fa7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106fac	obj/kern/kernel.asm	/^f0106fac:	e9 9c 00 00 00       	jmp    f010704d <readline+0xfd>$/;"	l
f0106fb1	obj/kern/kernel.asm	/^f0106fb1:	83 7d ec 08          	cmpl   $0x8,-0x14(%ebp)$/;"	l
f0106fb5	obj/kern/kernel.asm	/^f0106fb5:	74 06                	je     f0106fbd <readline+0x6d>$/;"	l
f0106fb7	obj/kern/kernel.asm	/^f0106fb7:	83 7d ec 7f          	cmpl   $0x7f,-0x14(%ebp)$/;"	l
f0106fbb	obj/kern/kernel.asm	/^f0106fbb:	75 1f                	jne    f0106fdc <readline+0x8c>$/;"	l
f0106fbd	obj/kern/kernel.asm	/^f0106fbd:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f0106fc1	obj/kern/kernel.asm	/^f0106fc1:	7e 19                	jle    f0106fdc <readline+0x8c>$/;"	l
f0106fc3	obj/kern/kernel.asm	/^f0106fc3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0106fc7	obj/kern/kernel.asm	/^f0106fc7:	74 0d                	je     f0106fd6 <readline+0x86>$/;"	l
f0106fc9	obj/kern/kernel.asm	/^f0106fc9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106fcc	obj/kern/kernel.asm	/^f0106fcc:	6a 08                	push   $0x8$/;"	l
f0106fce	obj/kern/kernel.asm	/^f0106fce:	e8 7d 9b ff ff       	call   f0100b50 <cputchar>$/;"	l
f0106fd3	obj/kern/kernel.asm	/^f0106fd3:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106fd6	obj/kern/kernel.asm	/^f0106fd6:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
f0106fda	obj/kern/kernel.asm	/^f0106fda:	eb 6c                	jmp    f0107048 <readline+0xf8>$/;"	l
f0106fdc	obj/kern/kernel.asm	/^f0106fdc:	83 7d ec 1f          	cmpl   $0x1f,-0x14(%ebp)$/;"	l
f0106fe0	obj/kern/kernel.asm	/^f0106fe0:	7e 31                	jle    f0107013 <readline+0xc3>$/;"	l
f0106fe2	obj/kern/kernel.asm	/^f0106fe2:	81 7d f4 fe 03 00 00 	cmpl   $0x3fe,-0xc(%ebp)$/;"	l
f0106fe9	obj/kern/kernel.asm	/^f0106fe9:	7f 28                	jg     f0107013 <readline+0xc3>$/;"	l
f0106feb	obj/kern/kernel.asm	/^f0106feb:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0106fef	obj/kern/kernel.asm	/^f0106fef:	74 0e                	je     f0106fff <readline+0xaf>$/;"	l
f0106ff1	obj/kern/kernel.asm	/^f0106ff1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0106ff4	obj/kern/kernel.asm	/^f0106ff4:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
f0106ff7	obj/kern/kernel.asm	/^f0106ff7:	e8 54 9b ff ff       	call   f0100b50 <cputchar>$/;"	l
f0106ffc	obj/kern/kernel.asm	/^f0106ffc:	83 c4 10             	add    $0x10,%esp$/;"	l
f0106fff	obj/kern/kernel.asm	/^f0106fff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0107002	obj/kern/kernel.asm	/^f0107002:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0107005	obj/kern/kernel.asm	/^f0107005:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
f0107008	obj/kern/kernel.asm	/^f0107008:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
f010700b	obj/kern/kernel.asm	/^f010700b:	88 90 e0 0a 23 f0    	mov    %dl,-0xfdcf520(%eax)$/;"	l
f0107011	obj/kern/kernel.asm	/^f0107011:	eb 35                	jmp    f0107048 <readline+0xf8>$/;"	l
f0107013	obj/kern/kernel.asm	/^f0107013:	83 7d ec 0a          	cmpl   $0xa,-0x14(%ebp)$/;"	l
f0107017	obj/kern/kernel.asm	/^f0107017:	74 0a                	je     f0107023 <readline+0xd3>$/;"	l
f0107019	obj/kern/kernel.asm	/^f0107019:	83 7d ec 0d          	cmpl   $0xd,-0x14(%ebp)$/;"	l
f010701d	obj/kern/kernel.asm	/^f010701d:	0f 85 63 ff ff ff    	jne    f0106f86 <readline+0x36>$/;"	l
f0107023	obj/kern/kernel.asm	/^f0107023:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f0107027	obj/kern/kernel.asm	/^f0107027:	74 0d                	je     f0107036 <readline+0xe6>$/;"	l
f0107029	obj/kern/kernel.asm	/^f0107029:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010702c	obj/kern/kernel.asm	/^f010702c:	6a 0a                	push   $0xa$/;"	l
f010702e	obj/kern/kernel.asm	/^f010702e:	e8 1d 9b ff ff       	call   f0100b50 <cputchar>$/;"	l
f0107033	obj/kern/kernel.asm	/^f0107033:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107036	obj/kern/kernel.asm	/^f0107036:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0107039	obj/kern/kernel.asm	/^f0107039:	05 e0 0a 23 f0       	add    $0xf0230ae0,%eax$/;"	l
f010703e	obj/kern/kernel.asm	/^f010703e:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f0107041	obj/kern/kernel.asm	/^f0107041:	b8 e0 0a 23 f0       	mov    $0xf0230ae0,%eax$/;"	l
f0107046	obj/kern/kernel.asm	/^f0107046:	eb 05                	jmp    f010704d <readline+0xfd>$/;"	l
f0107048	obj/kern/kernel.asm	/^f0107048:	e9 39 ff ff ff       	jmp    f0106f86 <readline+0x36>$/;"	l
f010704d	obj/kern/kernel.asm	/^f010704d:	c9                   	leave  $/;"	l
f010704e	obj/kern/kernel.asm	/^f010704e:	c3                   	ret    $/;"	l
f010704f	obj/kern/kernel.asm	/^f010704f <strlen>:$/;"	l
f010704f	obj/kern/kernel.asm	/^f010704f:	55                   	push   %ebp$/;"	l
f0107050	obj/kern/kernel.asm	/^f0107050:	89 e5                	mov    %esp,%ebp$/;"	l
f0107052	obj/kern/kernel.asm	/^f0107052:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0107055	obj/kern/kernel.asm	/^f0107055:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
f010705c	obj/kern/kernel.asm	/^f010705c:	eb 08                	jmp    f0107066 <strlen+0x17>$/;"	l
f010705e	obj/kern/kernel.asm	/^f010705e:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
f0107062	obj/kern/kernel.asm	/^f0107062:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f0107066	obj/kern/kernel.asm	/^f0107066:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107069	obj/kern/kernel.asm	/^f0107069:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010706c	obj/kern/kernel.asm	/^f010706c:	84 c0                	test   %al,%al$/;"	l
f010706e	obj/kern/kernel.asm	/^f010706e:	75 ee                	jne    f010705e <strlen+0xf>$/;"	l
f0107070	obj/kern/kernel.asm	/^f0107070:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0107073	obj/kern/kernel.asm	/^f0107073:	c9                   	leave  $/;"	l
f0107074	obj/kern/kernel.asm	/^f0107074:	c3                   	ret    $/;"	l
f0107075	obj/kern/kernel.asm	/^f0107075 <strnlen>:$/;"	l
f0107075	obj/kern/kernel.asm	/^f0107075:	55                   	push   %ebp$/;"	l
f0107076	obj/kern/kernel.asm	/^f0107076:	89 e5                	mov    %esp,%ebp$/;"	l
f0107078	obj/kern/kernel.asm	/^f0107078:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010707b	obj/kern/kernel.asm	/^f010707b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
f0107082	obj/kern/kernel.asm	/^f0107082:	eb 0c                	jmp    f0107090 <strnlen+0x1b>$/;"	l
f0107084	obj/kern/kernel.asm	/^f0107084:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
f0107088	obj/kern/kernel.asm	/^f0107088:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f010708c	obj/kern/kernel.asm	/^f010708c:	83 6d 0c 01          	subl   $0x1,0xc(%ebp)$/;"	l
f0107090	obj/kern/kernel.asm	/^f0107090:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f0107094	obj/kern/kernel.asm	/^f0107094:	74 0a                	je     f01070a0 <strnlen+0x2b>$/;"	l
f0107096	obj/kern/kernel.asm	/^f0107096:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107099	obj/kern/kernel.asm	/^f0107099:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010709c	obj/kern/kernel.asm	/^f010709c:	84 c0                	test   %al,%al$/;"	l
f010709e	obj/kern/kernel.asm	/^f010709e:	75 e4                	jne    f0107084 <strnlen+0xf>$/;"	l
f01070a0	obj/kern/kernel.asm	/^f01070a0:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f01070a3	obj/kern/kernel.asm	/^f01070a3:	c9                   	leave  $/;"	l
f01070a4	obj/kern/kernel.asm	/^f01070a4:	c3                   	ret    $/;"	l
f01070a5	obj/kern/kernel.asm	/^f01070a5 <strcpy>:$/;"	l
f01070a5	obj/kern/kernel.asm	/^f01070a5:	55                   	push   %ebp$/;"	l
f01070a6	obj/kern/kernel.asm	/^f01070a6:	89 e5                	mov    %esp,%ebp$/;"	l
f01070a8	obj/kern/kernel.asm	/^f01070a8:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01070ab	obj/kern/kernel.asm	/^f01070ab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01070ae	obj/kern/kernel.asm	/^f01070ae:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f01070b1	obj/kern/kernel.asm	/^f01070b1:	90                   	nop$/;"	l
f01070b2	obj/kern/kernel.asm	/^f01070b2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01070b5	obj/kern/kernel.asm	/^f01070b5:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f01070b8	obj/kern/kernel.asm	/^f01070b8:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
f01070bb	obj/kern/kernel.asm	/^f01070bb:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f01070be	obj/kern/kernel.asm	/^f01070be:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f01070c1	obj/kern/kernel.asm	/^f01070c1:	89 4d 0c             	mov    %ecx,0xc(%ebp)$/;"	l
f01070c4	obj/kern/kernel.asm	/^f01070c4:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f01070c7	obj/kern/kernel.asm	/^f01070c7:	88 10                	mov    %dl,(%eax)$/;"	l
f01070c9	obj/kern/kernel.asm	/^f01070c9:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01070cc	obj/kern/kernel.asm	/^f01070cc:	84 c0                	test   %al,%al$/;"	l
f01070ce	obj/kern/kernel.asm	/^f01070ce:	75 e2                	jne    f01070b2 <strcpy+0xd>$/;"	l
f01070d0	obj/kern/kernel.asm	/^f01070d0:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f01070d3	obj/kern/kernel.asm	/^f01070d3:	c9                   	leave  $/;"	l
f01070d4	obj/kern/kernel.asm	/^f01070d4:	c3                   	ret    $/;"	l
f01070d5	obj/kern/kernel.asm	/^f01070d5 <strcat>:$/;"	l
f01070d5	obj/kern/kernel.asm	/^f01070d5:	55                   	push   %ebp$/;"	l
f01070d6	obj/kern/kernel.asm	/^f01070d6:	89 e5                	mov    %esp,%ebp$/;"	l
f01070d8	obj/kern/kernel.asm	/^f01070d8:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01070db	obj/kern/kernel.asm	/^f01070db:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01070de	obj/kern/kernel.asm	/^f01070de:	e8 6c ff ff ff       	call   f010704f <strlen>$/;"	l
f01070e3	obj/kern/kernel.asm	/^f01070e3:	83 c4 04             	add    $0x4,%esp$/;"	l
f01070e6	obj/kern/kernel.asm	/^f01070e6:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f01070e9	obj/kern/kernel.asm	/^f01070e9:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
f01070ec	obj/kern/kernel.asm	/^f01070ec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01070ef	obj/kern/kernel.asm	/^f01070ef:	01 d0                	add    %edx,%eax$/;"	l
f01070f1	obj/kern/kernel.asm	/^f01070f1:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01070f4	obj/kern/kernel.asm	/^f01070f4:	50                   	push   %eax$/;"	l
f01070f5	obj/kern/kernel.asm	/^f01070f5:	e8 ab ff ff ff       	call   f01070a5 <strcpy>$/;"	l
f01070fa	obj/kern/kernel.asm	/^f01070fa:	83 c4 08             	add    $0x8,%esp$/;"	l
f01070fd	obj/kern/kernel.asm	/^f01070fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107100	obj/kern/kernel.asm	/^f0107100:	c9                   	leave  $/;"	l
f0107101	obj/kern/kernel.asm	/^f0107101:	c3                   	ret    $/;"	l
f0107102	obj/kern/kernel.asm	/^f0107102 <strncpy>:$/;"	l
f0107102	obj/kern/kernel.asm	/^f0107102:	55                   	push   %ebp$/;"	l
f0107103	obj/kern/kernel.asm	/^f0107103:	89 e5                	mov    %esp,%ebp$/;"	l
f0107105	obj/kern/kernel.asm	/^f0107105:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0107108	obj/kern/kernel.asm	/^f0107108:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010710b	obj/kern/kernel.asm	/^f010710b:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
f010710e	obj/kern/kernel.asm	/^f010710e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
f0107115	obj/kern/kernel.asm	/^f0107115:	eb 23                	jmp    f010713a <strncpy+0x38>$/;"	l
f0107117	obj/kern/kernel.asm	/^f0107117:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010711a	obj/kern/kernel.asm	/^f010711a:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f010711d	obj/kern/kernel.asm	/^f010711d:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
f0107120	obj/kern/kernel.asm	/^f0107120:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0107123	obj/kern/kernel.asm	/^f0107123:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0107126	obj/kern/kernel.asm	/^f0107126:	88 10                	mov    %dl,(%eax)$/;"	l
f0107128	obj/kern/kernel.asm	/^f0107128:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010712b	obj/kern/kernel.asm	/^f010712b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010712e	obj/kern/kernel.asm	/^f010712e:	84 c0                	test   %al,%al$/;"	l
f0107130	obj/kern/kernel.asm	/^f0107130:	74 04                	je     f0107136 <strncpy+0x34>$/;"	l
f0107132	obj/kern/kernel.asm	/^f0107132:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f0107136	obj/kern/kernel.asm	/^f0107136:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
f010713a	obj/kern/kernel.asm	/^f010713a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f010713d	obj/kern/kernel.asm	/^f010713d:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
f0107140	obj/kern/kernel.asm	/^f0107140:	72 d5                	jb     f0107117 <strncpy+0x15>$/;"	l
f0107142	obj/kern/kernel.asm	/^f0107142:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f0107145	obj/kern/kernel.asm	/^f0107145:	c9                   	leave  $/;"	l
f0107146	obj/kern/kernel.asm	/^f0107146:	c3                   	ret    $/;"	l
f0107147	obj/kern/kernel.asm	/^f0107147 <strlcpy>:$/;"	l
f0107147	obj/kern/kernel.asm	/^f0107147:	55                   	push   %ebp$/;"	l
f0107148	obj/kern/kernel.asm	/^f0107148:	89 e5                	mov    %esp,%ebp$/;"	l
f010714a	obj/kern/kernel.asm	/^f010714a:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010714d	obj/kern/kernel.asm	/^f010714d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107150	obj/kern/kernel.asm	/^f0107150:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f0107153	obj/kern/kernel.asm	/^f0107153:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0107157	obj/kern/kernel.asm	/^f0107157:	74 33                	je     f010718c <strlcpy+0x45>$/;"	l
f0107159	obj/kern/kernel.asm	/^f0107159:	eb 17                	jmp    f0107172 <strlcpy+0x2b>$/;"	l
f010715b	obj/kern/kernel.asm	/^f010715b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010715e	obj/kern/kernel.asm	/^f010715e:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
f0107161	obj/kern/kernel.asm	/^f0107161:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
f0107164	obj/kern/kernel.asm	/^f0107164:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0107167	obj/kern/kernel.asm	/^f0107167:	8d 4a 01             	lea    0x1(%edx),%ecx$/;"	l
f010716a	obj/kern/kernel.asm	/^f010716a:	89 4d 0c             	mov    %ecx,0xc(%ebp)$/;"	l
f010716d	obj/kern/kernel.asm	/^f010716d:	0f b6 12             	movzbl (%edx),%edx$/;"	l
f0107170	obj/kern/kernel.asm	/^f0107170:	88 10                	mov    %dl,(%eax)$/;"	l
f0107172	obj/kern/kernel.asm	/^f0107172:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
f0107176	obj/kern/kernel.asm	/^f0107176:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f010717a	obj/kern/kernel.asm	/^f010717a:	74 0a                	je     f0107186 <strlcpy+0x3f>$/;"	l
f010717c	obj/kern/kernel.asm	/^f010717c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f010717f	obj/kern/kernel.asm	/^f010717f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0107182	obj/kern/kernel.asm	/^f0107182:	84 c0                	test   %al,%al$/;"	l
f0107184	obj/kern/kernel.asm	/^f0107184:	75 d5                	jne    f010715b <strlcpy+0x14>$/;"	l
f0107186	obj/kern/kernel.asm	/^f0107186:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107189	obj/kern/kernel.asm	/^f0107189:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
f010718c	obj/kern/kernel.asm	/^f010718c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010718f	obj/kern/kernel.asm	/^f010718f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0107192	obj/kern/kernel.asm	/^f0107192:	29 c2                	sub    %eax,%edx$/;"	l
f0107194	obj/kern/kernel.asm	/^f0107194:	89 d0                	mov    %edx,%eax$/;"	l
f0107196	obj/kern/kernel.asm	/^f0107196:	c9                   	leave  $/;"	l
f0107197	obj/kern/kernel.asm	/^f0107197:	c3                   	ret    $/;"	l
f0107198	obj/kern/kernel.asm	/^f0107198 <strcmp>:$/;"	l
f0107198	obj/kern/kernel.asm	/^f0107198:	55                   	push   %ebp$/;"	l
f0107199	obj/kern/kernel.asm	/^f0107199:	89 e5                	mov    %esp,%ebp$/;"	l
f010719b	obj/kern/kernel.asm	/^f010719b:	eb 08                	jmp    f01071a5 <strcmp+0xd>$/;"	l
f010719d	obj/kern/kernel.asm	/^f010719d:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f01071a1	obj/kern/kernel.asm	/^f01071a1:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f01071a5	obj/kern/kernel.asm	/^f01071a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01071a8	obj/kern/kernel.asm	/^f01071a8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01071ab	obj/kern/kernel.asm	/^f01071ab:	84 c0                	test   %al,%al$/;"	l
f01071ad	obj/kern/kernel.asm	/^f01071ad:	74 10                	je     f01071bf <strcmp+0x27>$/;"	l
f01071af	obj/kern/kernel.asm	/^f01071af:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01071b2	obj/kern/kernel.asm	/^f01071b2:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01071b5	obj/kern/kernel.asm	/^f01071b5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01071b8	obj/kern/kernel.asm	/^f01071b8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01071bb	obj/kern/kernel.asm	/^f01071bb:	38 c2                	cmp    %al,%dl$/;"	l
f01071bd	obj/kern/kernel.asm	/^f01071bd:	74 de                	je     f010719d <strcmp+0x5>$/;"	l
f01071bf	obj/kern/kernel.asm	/^f01071bf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01071c2	obj/kern/kernel.asm	/^f01071c2:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01071c5	obj/kern/kernel.asm	/^f01071c5:	0f b6 d0             	movzbl %al,%edx$/;"	l
f01071c8	obj/kern/kernel.asm	/^f01071c8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01071cb	obj/kern/kernel.asm	/^f01071cb:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01071ce	obj/kern/kernel.asm	/^f01071ce:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01071d1	obj/kern/kernel.asm	/^f01071d1:	29 c2                	sub    %eax,%edx$/;"	l
f01071d3	obj/kern/kernel.asm	/^f01071d3:	89 d0                	mov    %edx,%eax$/;"	l
f01071d5	obj/kern/kernel.asm	/^f01071d5:	5d                   	pop    %ebp$/;"	l
f01071d6	obj/kern/kernel.asm	/^f01071d6:	c3                   	ret    $/;"	l
f01071d7	obj/kern/kernel.asm	/^f01071d7 <strncmp>:$/;"	l
f01071d7	obj/kern/kernel.asm	/^f01071d7:	55                   	push   %ebp$/;"	l
f01071d8	obj/kern/kernel.asm	/^f01071d8:	89 e5                	mov    %esp,%ebp$/;"	l
f01071da	obj/kern/kernel.asm	/^f01071da:	eb 0c                	jmp    f01071e8 <strncmp+0x11>$/;"	l
f01071dc	obj/kern/kernel.asm	/^f01071dc:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
f01071e0	obj/kern/kernel.asm	/^f01071e0:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f01071e4	obj/kern/kernel.asm	/^f01071e4:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
f01071e8	obj/kern/kernel.asm	/^f01071e8:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f01071ec	obj/kern/kernel.asm	/^f01071ec:	74 1a                	je     f0107208 <strncmp+0x31>$/;"	l
f01071ee	obj/kern/kernel.asm	/^f01071ee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01071f1	obj/kern/kernel.asm	/^f01071f1:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01071f4	obj/kern/kernel.asm	/^f01071f4:	84 c0                	test   %al,%al$/;"	l
f01071f6	obj/kern/kernel.asm	/^f01071f6:	74 10                	je     f0107208 <strncmp+0x31>$/;"	l
f01071f8	obj/kern/kernel.asm	/^f01071f8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01071fb	obj/kern/kernel.asm	/^f01071fb:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f01071fe	obj/kern/kernel.asm	/^f01071fe:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107201	obj/kern/kernel.asm	/^f0107201:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0107204	obj/kern/kernel.asm	/^f0107204:	38 c2                	cmp    %al,%dl$/;"	l
f0107206	obj/kern/kernel.asm	/^f0107206:	74 d4                	je     f01071dc <strncmp+0x5>$/;"	l
f0107208	obj/kern/kernel.asm	/^f0107208:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f010720c	obj/kern/kernel.asm	/^f010720c:	75 07                	jne    f0107215 <strncmp+0x3e>$/;"	l
f010720e	obj/kern/kernel.asm	/^f010720e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107213	obj/kern/kernel.asm	/^f0107213:	eb 16                	jmp    f010722b <strncmp+0x54>$/;"	l
f0107215	obj/kern/kernel.asm	/^f0107215:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107218	obj/kern/kernel.asm	/^f0107218:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010721b	obj/kern/kernel.asm	/^f010721b:	0f b6 d0             	movzbl %al,%edx$/;"	l
f010721e	obj/kern/kernel.asm	/^f010721e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107221	obj/kern/kernel.asm	/^f0107221:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0107224	obj/kern/kernel.asm	/^f0107224:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0107227	obj/kern/kernel.asm	/^f0107227:	29 c2                	sub    %eax,%edx$/;"	l
f0107229	obj/kern/kernel.asm	/^f0107229:	89 d0                	mov    %edx,%eax$/;"	l
f010722b	obj/kern/kernel.asm	/^f010722b:	5d                   	pop    %ebp$/;"	l
f010722c	obj/kern/kernel.asm	/^f010722c:	c3                   	ret    $/;"	l
f010722d	obj/kern/kernel.asm	/^f010722d <strchr>:$/;"	l
f010722d	obj/kern/kernel.asm	/^f010722d:	55                   	push   %ebp$/;"	l
f010722e	obj/kern/kernel.asm	/^f010722e:	89 e5                	mov    %esp,%ebp$/;"	l
f0107230	obj/kern/kernel.asm	/^f0107230:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0107233	obj/kern/kernel.asm	/^f0107233:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107236	obj/kern/kernel.asm	/^f0107236:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
f0107239	obj/kern/kernel.asm	/^f0107239:	eb 14                	jmp    f010724f <strchr+0x22>$/;"	l
f010723b	obj/kern/kernel.asm	/^f010723b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010723e	obj/kern/kernel.asm	/^f010723e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0107241	obj/kern/kernel.asm	/^f0107241:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
f0107244	obj/kern/kernel.asm	/^f0107244:	75 05                	jne    f010724b <strchr+0x1e>$/;"	l
f0107246	obj/kern/kernel.asm	/^f0107246:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107249	obj/kern/kernel.asm	/^f0107249:	eb 13                	jmp    f010725e <strchr+0x31>$/;"	l
f010724b	obj/kern/kernel.asm	/^f010724b:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f010724f	obj/kern/kernel.asm	/^f010724f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107252	obj/kern/kernel.asm	/^f0107252:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0107255	obj/kern/kernel.asm	/^f0107255:	84 c0                	test   %al,%al$/;"	l
f0107257	obj/kern/kernel.asm	/^f0107257:	75 e2                	jne    f010723b <strchr+0xe>$/;"	l
f0107259	obj/kern/kernel.asm	/^f0107259:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010725e	obj/kern/kernel.asm	/^f010725e:	c9                   	leave  $/;"	l
f010725f	obj/kern/kernel.asm	/^f010725f:	c3                   	ret    $/;"	l
f0107260	obj/kern/kernel.asm	/^f0107260 <strfind>:$/;"	l
f0107260	obj/kern/kernel.asm	/^f0107260:	55                   	push   %ebp$/;"	l
f0107261	obj/kern/kernel.asm	/^f0107261:	89 e5                	mov    %esp,%ebp$/;"	l
f0107263	obj/kern/kernel.asm	/^f0107263:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0107266	obj/kern/kernel.asm	/^f0107266:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107269	obj/kern/kernel.asm	/^f0107269:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
f010726c	obj/kern/kernel.asm	/^f010726c:	eb 0f                	jmp    f010727d <strfind+0x1d>$/;"	l
f010726e	obj/kern/kernel.asm	/^f010726e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107271	obj/kern/kernel.asm	/^f0107271:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0107274	obj/kern/kernel.asm	/^f0107274:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
f0107277	obj/kern/kernel.asm	/^f0107277:	74 10                	je     f0107289 <strfind+0x29>$/;"	l
f0107279	obj/kern/kernel.asm	/^f0107279:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f010727d	obj/kern/kernel.asm	/^f010727d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107280	obj/kern/kernel.asm	/^f0107280:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0107283	obj/kern/kernel.asm	/^f0107283:	84 c0                	test   %al,%al$/;"	l
f0107285	obj/kern/kernel.asm	/^f0107285:	75 e7                	jne    f010726e <strfind+0xe>$/;"	l
f0107287	obj/kern/kernel.asm	/^f0107287:	eb 01                	jmp    f010728a <strfind+0x2a>$/;"	l
f0107289	obj/kern/kernel.asm	/^f0107289:	90                   	nop$/;"	l
f010728a	obj/kern/kernel.asm	/^f010728a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010728d	obj/kern/kernel.asm	/^f010728d:	c9                   	leave  $/;"	l
f010728e	obj/kern/kernel.asm	/^f010728e:	c3                   	ret    $/;"	l
f010728f	obj/kern/kernel.asm	/^f010728f <memset>:$/;"	l
f010728f	obj/kern/kernel.asm	/^f010728f:	55                   	push   %ebp$/;"	l
f0107290	obj/kern/kernel.asm	/^f0107290:	89 e5                	mov    %esp,%ebp$/;"	l
f0107292	obj/kern/kernel.asm	/^f0107292:	57                   	push   %edi$/;"	l
f0107293	obj/kern/kernel.asm	/^f0107293:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0107297	obj/kern/kernel.asm	/^f0107297:	75 05                	jne    f010729e <memset+0xf>$/;"	l
f0107299	obj/kern/kernel.asm	/^f0107299:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010729c	obj/kern/kernel.asm	/^f010729c:	eb 5c                	jmp    f01072fa <memset+0x6b>$/;"	l
f010729e	obj/kern/kernel.asm	/^f010729e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01072a1	obj/kern/kernel.asm	/^f01072a1:	83 e0 03             	and    $0x3,%eax$/;"	l
f01072a4	obj/kern/kernel.asm	/^f01072a4:	85 c0                	test   %eax,%eax$/;"	l
f01072a6	obj/kern/kernel.asm	/^f01072a6:	75 41                	jne    f01072e9 <memset+0x5a>$/;"	l
f01072a8	obj/kern/kernel.asm	/^f01072a8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01072ab	obj/kern/kernel.asm	/^f01072ab:	83 e0 03             	and    $0x3,%eax$/;"	l
f01072ae	obj/kern/kernel.asm	/^f01072ae:	85 c0                	test   %eax,%eax$/;"	l
f01072b0	obj/kern/kernel.asm	/^f01072b0:	75 37                	jne    f01072e9 <memset+0x5a>$/;"	l
f01072b2	obj/kern/kernel.asm	/^f01072b2:	81 65 0c ff 00 00 00 	andl   $0xff,0xc(%ebp)$/;"	l
f01072b9	obj/kern/kernel.asm	/^f01072b9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01072bc	obj/kern/kernel.asm	/^f01072bc:	c1 e0 18             	shl    $0x18,%eax$/;"	l
f01072bf	obj/kern/kernel.asm	/^f01072bf:	89 c2                	mov    %eax,%edx$/;"	l
f01072c1	obj/kern/kernel.asm	/^f01072c1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01072c4	obj/kern/kernel.asm	/^f01072c4:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01072c7	obj/kern/kernel.asm	/^f01072c7:	09 c2                	or     %eax,%edx$/;"	l
f01072c9	obj/kern/kernel.asm	/^f01072c9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01072cc	obj/kern/kernel.asm	/^f01072cc:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f01072cf	obj/kern/kernel.asm	/^f01072cf:	09 d0                	or     %edx,%eax$/;"	l
f01072d1	obj/kern/kernel.asm	/^f01072d1:	09 45 0c             	or     %eax,0xc(%ebp)$/;"	l
f01072d4	obj/kern/kernel.asm	/^f01072d4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01072d7	obj/kern/kernel.asm	/^f01072d7:	c1 e8 02             	shr    $0x2,%eax$/;"	l
f01072da	obj/kern/kernel.asm	/^f01072da:	89 c1                	mov    %eax,%ecx$/;"	l
f01072dc	obj/kern/kernel.asm	/^f01072dc:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01072df	obj/kern/kernel.asm	/^f01072df:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01072e2	obj/kern/kernel.asm	/^f01072e2:	89 d7                	mov    %edx,%edi$/;"	l
f01072e4	obj/kern/kernel.asm	/^f01072e4:	fc                   	cld    $/;"	l
f01072e5	obj/kern/kernel.asm	/^f01072e5:	f3 ab                	rep stos %eax,%es:(%edi)$/;"	l
f01072e7	obj/kern/kernel.asm	/^f01072e7:	eb 0e                	jmp    f01072f7 <memset+0x68>$/;"	l
f01072e9	obj/kern/kernel.asm	/^f01072e9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01072ec	obj/kern/kernel.asm	/^f01072ec:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01072ef	obj/kern/kernel.asm	/^f01072ef:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01072f2	obj/kern/kernel.asm	/^f01072f2:	89 d7                	mov    %edx,%edi$/;"	l
f01072f4	obj/kern/kernel.asm	/^f01072f4:	fc                   	cld    $/;"	l
f01072f5	obj/kern/kernel.asm	/^f01072f5:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
f01072f7	obj/kern/kernel.asm	/^f01072f7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01072fa	obj/kern/kernel.asm	/^f01072fa:	5f                   	pop    %edi$/;"	l
f01072fb	obj/kern/kernel.asm	/^f01072fb:	5d                   	pop    %ebp$/;"	l
f01072fc	obj/kern/kernel.asm	/^f01072fc:	c3                   	ret    $/;"	l
f01072fd	obj/kern/kernel.asm	/^f01072fd <memmove>:$/;"	l
f01072fd	obj/kern/kernel.asm	/^f01072fd:	55                   	push   %ebp$/;"	l
f01072fe	obj/kern/kernel.asm	/^f01072fe:	89 e5                	mov    %esp,%ebp$/;"	l
f0107300	obj/kern/kernel.asm	/^f0107300:	57                   	push   %edi$/;"	l
f0107301	obj/kern/kernel.asm	/^f0107301:	56                   	push   %esi$/;"	l
f0107302	obj/kern/kernel.asm	/^f0107302:	53                   	push   %ebx$/;"	l
f0107303	obj/kern/kernel.asm	/^f0107303:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0107306	obj/kern/kernel.asm	/^f0107306:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107309	obj/kern/kernel.asm	/^f0107309:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010730c	obj/kern/kernel.asm	/^f010730c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010730f	obj/kern/kernel.asm	/^f010730f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f0107312	obj/kern/kernel.asm	/^f0107312:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0107315	obj/kern/kernel.asm	/^f0107315:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
f0107318	obj/kern/kernel.asm	/^f0107318:	73 6d                	jae    f0107387 <memmove+0x8a>$/;"	l
f010731a	obj/kern/kernel.asm	/^f010731a:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f010731d	obj/kern/kernel.asm	/^f010731d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0107320	obj/kern/kernel.asm	/^f0107320:	01 d0                	add    %edx,%eax$/;"	l
f0107322	obj/kern/kernel.asm	/^f0107322:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
f0107325	obj/kern/kernel.asm	/^f0107325:	76 60                	jbe    f0107387 <memmove+0x8a>$/;"	l
f0107327	obj/kern/kernel.asm	/^f0107327:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010732a	obj/kern/kernel.asm	/^f010732a:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
f010732d	obj/kern/kernel.asm	/^f010732d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0107330	obj/kern/kernel.asm	/^f0107330:	01 45 ec             	add    %eax,-0x14(%ebp)$/;"	l
f0107333	obj/kern/kernel.asm	/^f0107333:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0107336	obj/kern/kernel.asm	/^f0107336:	83 e0 03             	and    $0x3,%eax$/;"	l
f0107339	obj/kern/kernel.asm	/^f0107339:	85 c0                	test   %eax,%eax$/;"	l
f010733b	obj/kern/kernel.asm	/^f010733b:	75 2f                	jne    f010736c <memmove+0x6f>$/;"	l
f010733d	obj/kern/kernel.asm	/^f010733d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0107340	obj/kern/kernel.asm	/^f0107340:	83 e0 03             	and    $0x3,%eax$/;"	l
f0107343	obj/kern/kernel.asm	/^f0107343:	85 c0                	test   %eax,%eax$/;"	l
f0107345	obj/kern/kernel.asm	/^f0107345:	75 25                	jne    f010736c <memmove+0x6f>$/;"	l
f0107347	obj/kern/kernel.asm	/^f0107347:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010734a	obj/kern/kernel.asm	/^f010734a:	83 e0 03             	and    $0x3,%eax$/;"	l
f010734d	obj/kern/kernel.asm	/^f010734d:	85 c0                	test   %eax,%eax$/;"	l
f010734f	obj/kern/kernel.asm	/^f010734f:	75 1b                	jne    f010736c <memmove+0x6f>$/;"	l
f0107351	obj/kern/kernel.asm	/^f0107351:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0107354	obj/kern/kernel.asm	/^f0107354:	83 e8 04             	sub    $0x4,%eax$/;"	l
f0107357	obj/kern/kernel.asm	/^f0107357:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f010735a	obj/kern/kernel.asm	/^f010735a:	83 ea 04             	sub    $0x4,%edx$/;"	l
f010735d	obj/kern/kernel.asm	/^f010735d:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f0107360	obj/kern/kernel.asm	/^f0107360:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
f0107363	obj/kern/kernel.asm	/^f0107363:	89 c7                	mov    %eax,%edi$/;"	l
f0107365	obj/kern/kernel.asm	/^f0107365:	89 d6                	mov    %edx,%esi$/;"	l
f0107367	obj/kern/kernel.asm	/^f0107367:	fd                   	std    $/;"	l
f0107368	obj/kern/kernel.asm	/^f0107368:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f010736a	obj/kern/kernel.asm	/^f010736a:	eb 18                	jmp    f0107384 <memmove+0x87>$/;"	l
f010736c	obj/kern/kernel.asm	/^f010736c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f010736f	obj/kern/kernel.asm	/^f010736f:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f0107372	obj/kern/kernel.asm	/^f0107372:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0107375	obj/kern/kernel.asm	/^f0107375:	8d 58 ff             	lea    -0x1(%eax),%ebx$/;"	l
f0107378	obj/kern/kernel.asm	/^f0107378:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010737b	obj/kern/kernel.asm	/^f010737b:	89 d7                	mov    %edx,%edi$/;"	l
f010737d	obj/kern/kernel.asm	/^f010737d:	89 de                	mov    %ebx,%esi$/;"	l
f010737f	obj/kern/kernel.asm	/^f010737f:	89 c1                	mov    %eax,%ecx$/;"	l
f0107381	obj/kern/kernel.asm	/^f0107381:	fd                   	std    $/;"	l
f0107382	obj/kern/kernel.asm	/^f0107382:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f0107384	obj/kern/kernel.asm	/^f0107384:	fc                   	cld    $/;"	l
f0107385	obj/kern/kernel.asm	/^f0107385:	eb 45                	jmp    f01073cc <memmove+0xcf>$/;"	l
f0107387	obj/kern/kernel.asm	/^f0107387:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010738a	obj/kern/kernel.asm	/^f010738a:	83 e0 03             	and    $0x3,%eax$/;"	l
f010738d	obj/kern/kernel.asm	/^f010738d:	85 c0                	test   %eax,%eax$/;"	l
f010738f	obj/kern/kernel.asm	/^f010738f:	75 2b                	jne    f01073bc <memmove+0xbf>$/;"	l
f0107391	obj/kern/kernel.asm	/^f0107391:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0107394	obj/kern/kernel.asm	/^f0107394:	83 e0 03             	and    $0x3,%eax$/;"	l
f0107397	obj/kern/kernel.asm	/^f0107397:	85 c0                	test   %eax,%eax$/;"	l
f0107399	obj/kern/kernel.asm	/^f0107399:	75 21                	jne    f01073bc <memmove+0xbf>$/;"	l
f010739b	obj/kern/kernel.asm	/^f010739b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010739e	obj/kern/kernel.asm	/^f010739e:	83 e0 03             	and    $0x3,%eax$/;"	l
f01073a1	obj/kern/kernel.asm	/^f01073a1:	85 c0                	test   %eax,%eax$/;"	l
f01073a3	obj/kern/kernel.asm	/^f01073a3:	75 17                	jne    f01073bc <memmove+0xbf>$/;"	l
f01073a5	obj/kern/kernel.asm	/^f01073a5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01073a8	obj/kern/kernel.asm	/^f01073a8:	c1 e8 02             	shr    $0x2,%eax$/;"	l
f01073ab	obj/kern/kernel.asm	/^f01073ab:	89 c1                	mov    %eax,%ecx$/;"	l
f01073ad	obj/kern/kernel.asm	/^f01073ad:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01073b0	obj/kern/kernel.asm	/^f01073b0:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01073b3	obj/kern/kernel.asm	/^f01073b3:	89 c7                	mov    %eax,%edi$/;"	l
f01073b5	obj/kern/kernel.asm	/^f01073b5:	89 d6                	mov    %edx,%esi$/;"	l
f01073b7	obj/kern/kernel.asm	/^f01073b7:	fc                   	cld    $/;"	l
f01073b8	obj/kern/kernel.asm	/^f01073b8:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
f01073ba	obj/kern/kernel.asm	/^f01073ba:	eb 10                	jmp    f01073cc <memmove+0xcf>$/;"	l
f01073bc	obj/kern/kernel.asm	/^f01073bc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01073bf	obj/kern/kernel.asm	/^f01073bf:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f01073c2	obj/kern/kernel.asm	/^f01073c2:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
f01073c5	obj/kern/kernel.asm	/^f01073c5:	89 c7                	mov    %eax,%edi$/;"	l
f01073c7	obj/kern/kernel.asm	/^f01073c7:	89 d6                	mov    %edx,%esi$/;"	l
f01073c9	obj/kern/kernel.asm	/^f01073c9:	fc                   	cld    $/;"	l
f01073ca	obj/kern/kernel.asm	/^f01073ca:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
f01073cc	obj/kern/kernel.asm	/^f01073cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01073cf	obj/kern/kernel.asm	/^f01073cf:	83 c4 10             	add    $0x10,%esp$/;"	l
f01073d2	obj/kern/kernel.asm	/^f01073d2:	5b                   	pop    %ebx$/;"	l
f01073d3	obj/kern/kernel.asm	/^f01073d3:	5e                   	pop    %esi$/;"	l
f01073d4	obj/kern/kernel.asm	/^f01073d4:	5f                   	pop    %edi$/;"	l
f01073d5	obj/kern/kernel.asm	/^f01073d5:	5d                   	pop    %ebp$/;"	l
f01073d6	obj/kern/kernel.asm	/^f01073d6:	c3                   	ret    $/;"	l
f01073d7	obj/kern/kernel.asm	/^f01073d7 <memcpy>:$/;"	l
f01073d7	obj/kern/kernel.asm	/^f01073d7:	55                   	push   %ebp$/;"	l
f01073d8	obj/kern/kernel.asm	/^f01073d8:	89 e5                	mov    %esp,%ebp$/;"	l
f01073da	obj/kern/kernel.asm	/^f01073da:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f01073dd	obj/kern/kernel.asm	/^f01073dd:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01073e0	obj/kern/kernel.asm	/^f01073e0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01073e3	obj/kern/kernel.asm	/^f01073e3:	e8 15 ff ff ff       	call   f01072fd <memmove>$/;"	l
f01073e8	obj/kern/kernel.asm	/^f01073e8:	83 c4 0c             	add    $0xc,%esp$/;"	l
f01073eb	obj/kern/kernel.asm	/^f01073eb:	c9                   	leave  $/;"	l
f01073ec	obj/kern/kernel.asm	/^f01073ec:	c3                   	ret    $/;"	l
f01073ed	obj/kern/kernel.asm	/^f01073ed <memcmp>:$/;"	l
f01073ed	obj/kern/kernel.asm	/^f01073ed:	55                   	push   %ebp$/;"	l
f01073ee	obj/kern/kernel.asm	/^f01073ee:	89 e5                	mov    %esp,%ebp$/;"	l
f01073f0	obj/kern/kernel.asm	/^f01073f0:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01073f3	obj/kern/kernel.asm	/^f01073f3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01073f6	obj/kern/kernel.asm	/^f01073f6:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f01073f9	obj/kern/kernel.asm	/^f01073f9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01073fc	obj/kern/kernel.asm	/^f01073fc:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
f01073ff	obj/kern/kernel.asm	/^f01073ff:	eb 30                	jmp    f0107431 <memcmp+0x44>$/;"	l
f0107401	obj/kern/kernel.asm	/^f0107401:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0107404	obj/kern/kernel.asm	/^f0107404:	0f b6 10             	movzbl (%eax),%edx$/;"	l
f0107407	obj/kern/kernel.asm	/^f0107407:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f010740a	obj/kern/kernel.asm	/^f010740a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010740d	obj/kern/kernel.asm	/^f010740d:	38 c2                	cmp    %al,%dl$/;"	l
f010740f	obj/kern/kernel.asm	/^f010740f:	74 18                	je     f0107429 <memcmp+0x3c>$/;"	l
f0107411	obj/kern/kernel.asm	/^f0107411:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0107414	obj/kern/kernel.asm	/^f0107414:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0107417	obj/kern/kernel.asm	/^f0107417:	0f b6 d0             	movzbl %al,%edx$/;"	l
f010741a	obj/kern/kernel.asm	/^f010741a:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f010741d	obj/kern/kernel.asm	/^f010741d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0107420	obj/kern/kernel.asm	/^f0107420:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0107423	obj/kern/kernel.asm	/^f0107423:	29 c2                	sub    %eax,%edx$/;"	l
f0107425	obj/kern/kernel.asm	/^f0107425:	89 d0                	mov    %edx,%eax$/;"	l
f0107427	obj/kern/kernel.asm	/^f0107427:	eb 1a                	jmp    f0107443 <memcmp+0x56>$/;"	l
f0107429	obj/kern/kernel.asm	/^f0107429:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
f010742d	obj/kern/kernel.asm	/^f010742d:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)$/;"	l
f0107431	obj/kern/kernel.asm	/^f0107431:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0107434	obj/kern/kernel.asm	/^f0107434:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
f0107437	obj/kern/kernel.asm	/^f0107437:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
f010743a	obj/kern/kernel.asm	/^f010743a:	85 c0                	test   %eax,%eax$/;"	l
f010743c	obj/kern/kernel.asm	/^f010743c:	75 c3                	jne    f0107401 <memcmp+0x14>$/;"	l
f010743e	obj/kern/kernel.asm	/^f010743e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107443	obj/kern/kernel.asm	/^f0107443:	c9                   	leave  $/;"	l
f0107444	obj/kern/kernel.asm	/^f0107444:	c3                   	ret    $/;"	l
f0107445	obj/kern/kernel.asm	/^f0107445 <memfind>:$/;"	l
f0107445	obj/kern/kernel.asm	/^f0107445:	55                   	push   %ebp$/;"	l
f0107446	obj/kern/kernel.asm	/^f0107446:	89 e5                	mov    %esp,%ebp$/;"	l
f0107448	obj/kern/kernel.asm	/^f0107448:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010744b	obj/kern/kernel.asm	/^f010744b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010744e	obj/kern/kernel.asm	/^f010744e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0107451	obj/kern/kernel.asm	/^f0107451:	01 d0                	add    %edx,%eax$/;"	l
f0107453	obj/kern/kernel.asm	/^f0107453:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f0107456	obj/kern/kernel.asm	/^f0107456:	eb 17                	jmp    f010746f <memfind+0x2a>$/;"	l
f0107458	obj/kern/kernel.asm	/^f0107458:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010745b	obj/kern/kernel.asm	/^f010745b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010745e	obj/kern/kernel.asm	/^f010745e:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0107461	obj/kern/kernel.asm	/^f0107461:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107464	obj/kern/kernel.asm	/^f0107464:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0107467	obj/kern/kernel.asm	/^f0107467:	39 c2                	cmp    %eax,%edx$/;"	l
f0107469	obj/kern/kernel.asm	/^f0107469:	74 0e                	je     f0107479 <memfind+0x34>$/;"	l
f010746b	obj/kern/kernel.asm	/^f010746b:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f010746f	obj/kern/kernel.asm	/^f010746f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107472	obj/kern/kernel.asm	/^f0107472:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
f0107475	obj/kern/kernel.asm	/^f0107475:	72 e1                	jb     f0107458 <memfind+0x13>$/;"	l
f0107477	obj/kern/kernel.asm	/^f0107477:	eb 01                	jmp    f010747a <memfind+0x35>$/;"	l
f0107479	obj/kern/kernel.asm	/^f0107479:	90                   	nop$/;"	l
f010747a	obj/kern/kernel.asm	/^f010747a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010747d	obj/kern/kernel.asm	/^f010747d:	c9                   	leave  $/;"	l
f010747e	obj/kern/kernel.asm	/^f010747e:	c3                   	ret    $/;"	l
f010747f	obj/kern/kernel.asm	/^f010747f <strtol>:$/;"	l
f010747f	obj/kern/kernel.asm	/^f010747f:	55                   	push   %ebp$/;"	l
f0107480	obj/kern/kernel.asm	/^f0107480:	89 e5                	mov    %esp,%ebp$/;"	l
f0107482	obj/kern/kernel.asm	/^f0107482:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0107485	obj/kern/kernel.asm	/^f0107485:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
f010748c	obj/kern/kernel.asm	/^f010748c:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
f0107493	obj/kern/kernel.asm	/^f0107493:	eb 04                	jmp    f0107499 <strtol+0x1a>$/;"	l
f0107495	obj/kern/kernel.asm	/^f0107495:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f0107499	obj/kern/kernel.asm	/^f0107499:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010749c	obj/kern/kernel.asm	/^f010749c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010749f	obj/kern/kernel.asm	/^f010749f:	3c 20                	cmp    $0x20,%al$/;"	l
f01074a1	obj/kern/kernel.asm	/^f01074a1:	74 f2                	je     f0107495 <strtol+0x16>$/;"	l
f01074a3	obj/kern/kernel.asm	/^f01074a3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01074a6	obj/kern/kernel.asm	/^f01074a6:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01074a9	obj/kern/kernel.asm	/^f01074a9:	3c 09                	cmp    $0x9,%al$/;"	l
f01074ab	obj/kern/kernel.asm	/^f01074ab:	74 e8                	je     f0107495 <strtol+0x16>$/;"	l
f01074ad	obj/kern/kernel.asm	/^f01074ad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01074b0	obj/kern/kernel.asm	/^f01074b0:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01074b3	obj/kern/kernel.asm	/^f01074b3:	3c 2b                	cmp    $0x2b,%al$/;"	l
f01074b5	obj/kern/kernel.asm	/^f01074b5:	75 06                	jne    f01074bd <strtol+0x3e>$/;"	l
f01074b7	obj/kern/kernel.asm	/^f01074b7:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f01074bb	obj/kern/kernel.asm	/^f01074bb:	eb 15                	jmp    f01074d2 <strtol+0x53>$/;"	l
f01074bd	obj/kern/kernel.asm	/^f01074bd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01074c0	obj/kern/kernel.asm	/^f01074c0:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01074c3	obj/kern/kernel.asm	/^f01074c3:	3c 2d                	cmp    $0x2d,%al$/;"	l
f01074c5	obj/kern/kernel.asm	/^f01074c5:	75 0b                	jne    f01074d2 <strtol+0x53>$/;"	l
f01074c7	obj/kern/kernel.asm	/^f01074c7:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f01074cb	obj/kern/kernel.asm	/^f01074cb:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%ebp)$/;"	l
f01074d2	obj/kern/kernel.asm	/^f01074d2:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f01074d6	obj/kern/kernel.asm	/^f01074d6:	74 06                	je     f01074de <strtol+0x5f>$/;"	l
f01074d8	obj/kern/kernel.asm	/^f01074d8:	83 7d 10 10          	cmpl   $0x10,0x10(%ebp)$/;"	l
f01074dc	obj/kern/kernel.asm	/^f01074dc:	75 24                	jne    f0107502 <strtol+0x83>$/;"	l
f01074de	obj/kern/kernel.asm	/^f01074de:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01074e1	obj/kern/kernel.asm	/^f01074e1:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01074e4	obj/kern/kernel.asm	/^f01074e4:	3c 30                	cmp    $0x30,%al$/;"	l
f01074e6	obj/kern/kernel.asm	/^f01074e6:	75 1a                	jne    f0107502 <strtol+0x83>$/;"	l
f01074e8	obj/kern/kernel.asm	/^f01074e8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01074eb	obj/kern/kernel.asm	/^f01074eb:	83 c0 01             	add    $0x1,%eax$/;"	l
f01074ee	obj/kern/kernel.asm	/^f01074ee:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01074f1	obj/kern/kernel.asm	/^f01074f1:	3c 78                	cmp    $0x78,%al$/;"	l
f01074f3	obj/kern/kernel.asm	/^f01074f3:	75 0d                	jne    f0107502 <strtol+0x83>$/;"	l
f01074f5	obj/kern/kernel.asm	/^f01074f5:	83 45 08 02          	addl   $0x2,0x8(%ebp)$/;"	l
f01074f9	obj/kern/kernel.asm	/^f01074f9:	c7 45 10 10 00 00 00 	movl   $0x10,0x10(%ebp)$/;"	l
f0107500	obj/kern/kernel.asm	/^f0107500:	eb 2a                	jmp    f010752c <strtol+0xad>$/;"	l
f0107502	obj/kern/kernel.asm	/^f0107502:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0107506	obj/kern/kernel.asm	/^f0107506:	75 17                	jne    f010751f <strtol+0xa0>$/;"	l
f0107508	obj/kern/kernel.asm	/^f0107508:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010750b	obj/kern/kernel.asm	/^f010750b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010750e	obj/kern/kernel.asm	/^f010750e:	3c 30                	cmp    $0x30,%al$/;"	l
f0107510	obj/kern/kernel.asm	/^f0107510:	75 0d                	jne    f010751f <strtol+0xa0>$/;"	l
f0107512	obj/kern/kernel.asm	/^f0107512:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f0107516	obj/kern/kernel.asm	/^f0107516:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)$/;"	l
f010751d	obj/kern/kernel.asm	/^f010751d:	eb 0d                	jmp    f010752c <strtol+0xad>$/;"	l
f010751f	obj/kern/kernel.asm	/^f010751f:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
f0107523	obj/kern/kernel.asm	/^f0107523:	75 07                	jne    f010752c <strtol+0xad>$/;"	l
f0107525	obj/kern/kernel.asm	/^f0107525:	c7 45 10 0a 00 00 00 	movl   $0xa,0x10(%ebp)$/;"	l
f010752c	obj/kern/kernel.asm	/^f010752c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010752f	obj/kern/kernel.asm	/^f010752f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0107532	obj/kern/kernel.asm	/^f0107532:	3c 2f                	cmp    $0x2f,%al$/;"	l
f0107534	obj/kern/kernel.asm	/^f0107534:	7e 1b                	jle    f0107551 <strtol+0xd2>$/;"	l
f0107536	obj/kern/kernel.asm	/^f0107536:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107539	obj/kern/kernel.asm	/^f0107539:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010753c	obj/kern/kernel.asm	/^f010753c:	3c 39                	cmp    $0x39,%al$/;"	l
f010753e	obj/kern/kernel.asm	/^f010753e:	7f 11                	jg     f0107551 <strtol+0xd2>$/;"	l
f0107540	obj/kern/kernel.asm	/^f0107540:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107543	obj/kern/kernel.asm	/^f0107543:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0107546	obj/kern/kernel.asm	/^f0107546:	0f be c0             	movsbl %al,%eax$/;"	l
f0107549	obj/kern/kernel.asm	/^f0107549:	83 e8 30             	sub    $0x30,%eax$/;"	l
f010754c	obj/kern/kernel.asm	/^f010754c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f010754f	obj/kern/kernel.asm	/^f010754f:	eb 48                	jmp    f0107599 <strtol+0x11a>$/;"	l
f0107551	obj/kern/kernel.asm	/^f0107551:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107554	obj/kern/kernel.asm	/^f0107554:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0107557	obj/kern/kernel.asm	/^f0107557:	3c 60                	cmp    $0x60,%al$/;"	l
f0107559	obj/kern/kernel.asm	/^f0107559:	7e 1b                	jle    f0107576 <strtol+0xf7>$/;"	l
f010755b	obj/kern/kernel.asm	/^f010755b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010755e	obj/kern/kernel.asm	/^f010755e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0107561	obj/kern/kernel.asm	/^f0107561:	3c 7a                	cmp    $0x7a,%al$/;"	l
f0107563	obj/kern/kernel.asm	/^f0107563:	7f 11                	jg     f0107576 <strtol+0xf7>$/;"	l
f0107565	obj/kern/kernel.asm	/^f0107565:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107568	obj/kern/kernel.asm	/^f0107568:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010756b	obj/kern/kernel.asm	/^f010756b:	0f be c0             	movsbl %al,%eax$/;"	l
f010756e	obj/kern/kernel.asm	/^f010756e:	83 e8 57             	sub    $0x57,%eax$/;"	l
f0107571	obj/kern/kernel.asm	/^f0107571:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0107574	obj/kern/kernel.asm	/^f0107574:	eb 23                	jmp    f0107599 <strtol+0x11a>$/;"	l
f0107576	obj/kern/kernel.asm	/^f0107576:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107579	obj/kern/kernel.asm	/^f0107579:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f010757c	obj/kern/kernel.asm	/^f010757c:	3c 40                	cmp    $0x40,%al$/;"	l
f010757e	obj/kern/kernel.asm	/^f010757e:	7e 3c                	jle    f01075bc <strtol+0x13d>$/;"	l
f0107580	obj/kern/kernel.asm	/^f0107580:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107583	obj/kern/kernel.asm	/^f0107583:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0107586	obj/kern/kernel.asm	/^f0107586:	3c 5a                	cmp    $0x5a,%al$/;"	l
f0107588	obj/kern/kernel.asm	/^f0107588:	7f 32                	jg     f01075bc <strtol+0x13d>$/;"	l
f010758a	obj/kern/kernel.asm	/^f010758a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010758d	obj/kern/kernel.asm	/^f010758d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0107590	obj/kern/kernel.asm	/^f0107590:	0f be c0             	movsbl %al,%eax$/;"	l
f0107593	obj/kern/kernel.asm	/^f0107593:	83 e8 37             	sub    $0x37,%eax$/;"	l
f0107596	obj/kern/kernel.asm	/^f0107596:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0107599	obj/kern/kernel.asm	/^f0107599:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010759c	obj/kern/kernel.asm	/^f010759c:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
f010759f	obj/kern/kernel.asm	/^f010759f:	7d 1a                	jge    f01075bb <strtol+0x13c>$/;"	l
f01075a1	obj/kern/kernel.asm	/^f01075a1:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
f01075a5	obj/kern/kernel.asm	/^f01075a5:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f01075a8	obj/kern/kernel.asm	/^f01075a8:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
f01075ac	obj/kern/kernel.asm	/^f01075ac:	89 c2                	mov    %eax,%edx$/;"	l
f01075ae	obj/kern/kernel.asm	/^f01075ae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01075b1	obj/kern/kernel.asm	/^f01075b1:	01 d0                	add    %edx,%eax$/;"	l
f01075b3	obj/kern/kernel.asm	/^f01075b3:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
f01075b6	obj/kern/kernel.asm	/^f01075b6:	e9 71 ff ff ff       	jmp    f010752c <strtol+0xad>$/;"	l
f01075bb	obj/kern/kernel.asm	/^f01075bb:	90                   	nop$/;"	l
f01075bc	obj/kern/kernel.asm	/^f01075bc:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
f01075c0	obj/kern/kernel.asm	/^f01075c0:	74 08                	je     f01075ca <strtol+0x14b>$/;"	l
f01075c2	obj/kern/kernel.asm	/^f01075c2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f01075c5	obj/kern/kernel.asm	/^f01075c5:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f01075c8	obj/kern/kernel.asm	/^f01075c8:	89 10                	mov    %edx,(%eax)$/;"	l
f01075ca	obj/kern/kernel.asm	/^f01075ca:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
f01075ce	obj/kern/kernel.asm	/^f01075ce:	74 07                	je     f01075d7 <strtol+0x158>$/;"	l
f01075d0	obj/kern/kernel.asm	/^f01075d0:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f01075d3	obj/kern/kernel.asm	/^f01075d3:	f7 d8                	neg    %eax$/;"	l
f01075d5	obj/kern/kernel.asm	/^f01075d5:	eb 03                	jmp    f01075da <strtol+0x15b>$/;"	l
f01075d7	obj/kern/kernel.asm	/^f01075d7:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f01075da	obj/kern/kernel.asm	/^f01075da:	c9                   	leave  $/;"	l
f01075db	obj/kern/kernel.asm	/^f01075db:	c3                   	ret    $/;"	l
f01075dc	obj/kern/kernel.asm	/^f01075dc <mpentry_start>:$/;"	l
f01075dc	obj/kern/kernel.asm	/^f01075dc:	fa                   	cli    $/;"	l
f01075dd	obj/kern/kernel.asm	/^f01075dd:	31 c0                	xor    %eax,%eax$/;"	l
f01075df	obj/kern/kernel.asm	/^f01075df:	8e d8                	mov    %eax,%ds$/;"	l
f01075e1	obj/kern/kernel.asm	/^f01075e1:	8e c0                	mov    %eax,%es$/;"	l
f01075e3	obj/kern/kernel.asm	/^f01075e3:	8e d0                	mov    %eax,%ss$/;"	l
f01075e5	obj/kern/kernel.asm	/^f01075e5:	0f 01 16             	lgdtl  (%esi)$/;"	l
f01075e8	obj/kern/kernel.asm	/^f01075e8:	74 70                	je     f010765a <inb+0x3>$/;"	l
f01075ea	obj/kern/kernel.asm	/^f01075ea:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f01075ed	obj/kern/kernel.asm	/^f01075ed:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f01075f1	obj/kern/kernel.asm	/^f01075f1:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f01075f4	obj/kern/kernel.asm	/^f01075f4:	66 ea 20 70 00 00    	ljmpw  $0x0,$0x7020$/;"	l
f01075fa	obj/kern/kernel.asm	/^f01075fa:	08 00                	or     %al,(%eax)$/;"	l
f01075fc	obj/kern/kernel.asm	/^f01075fc <start32>:$/;"	l
f01075fc	obj/kern/kernel.asm	/^f01075fc:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0107600	obj/kern/kernel.asm	/^f0107600:	8e d8                	mov    %eax,%ds$/;"	l
f0107602	obj/kern/kernel.asm	/^f0107602:	8e c0                	mov    %eax,%es$/;"	l
f0107604	obj/kern/kernel.asm	/^f0107604:	8e d0                	mov    %eax,%ss$/;"	l
f0107606	obj/kern/kernel.asm	/^f0107606:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f010760a	obj/kern/kernel.asm	/^f010760a:	8e e0                	mov    %eax,%fs$/;"	l
f010760c	obj/kern/kernel.asm	/^f010760c:	8e e8                	mov    %eax,%gs$/;"	l
f010760e	obj/kern/kernel.asm	/^f010760e:	b8 00 40 12 00       	mov    $0x124000,%eax$/;"	l
f0107613	obj/kern/kernel.asm	/^f0107613:	0f 22 d8             	mov    %eax,%cr3$/;"	l
f0107616	obj/kern/kernel.asm	/^f0107616:	0f 20 c0             	mov    %cr0,%eax$/;"	l
f0107619	obj/kern/kernel.asm	/^f0107619:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f010761e	obj/kern/kernel.asm	/^f010761e:	0f 22 c0             	mov    %eax,%cr0$/;"	l
f0107621	obj/kern/kernel.asm	/^f0107621:	8b 25 e4 0e 23 f0    	mov    0xf0230ee4,%esp$/;"	l
f0107627	obj/kern/kernel.asm	/^f0107627:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
f010762c	obj/kern/kernel.asm	/^f010762c:	b8 58 02 10 f0       	mov    $0xf0100258,%eax$/;"	l
f0107631	obj/kern/kernel.asm	/^f0107631:	ff d0                	call   *%eax$/;"	l
f0107633	obj/kern/kernel.asm	/^f0107633 <spin>:$/;"	l
f0107633	obj/kern/kernel.asm	/^f0107633:	eb fe                	jmp    f0107633 <spin>$/;"	l
f0107635	obj/kern/kernel.asm	/^f0107635:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0107638	obj/kern/kernel.asm	/^f0107638 <gdt>:$/;"	l
f0107640	obj/kern/kernel.asm	/^f0107640:	ff                   	(bad)  $/;"	l
f0107641	obj/kern/kernel.asm	/^f0107641:	ff 00                	incl   (%eax)$/;"	l
f0107643	obj/kern/kernel.asm	/^f0107643:	00 00                	add    %al,(%eax)$/;"	l
f0107645	obj/kern/kernel.asm	/^f0107645:	9a cf 00 ff ff 00 00 	lcall  $0x0,$0xffff00cf$/;"	l
f010764c	obj/kern/kernel.asm	/^f010764c:	00                   	.byte 0x0$/;"	l
f010764d	obj/kern/kernel.asm	/^f010764d:	92                   	xchg   %eax,%edx$/;"	l
f010764e	obj/kern/kernel.asm	/^f010764e:	cf                   	iret   $/;"	l
f0107650	obj/kern/kernel.asm	/^f0107650 <gdtdesc>:$/;"	l
f0107650	obj/kern/kernel.asm	/^f0107650:	17                   	pop    %ss$/;"	l
f0107651	obj/kern/kernel.asm	/^f0107651:	00 5c 70 00          	add    %bl,0x0(%eax,%esi,2)$/;"	l
f0107656	obj/kern/kernel.asm	/^f0107656 <mpentry_end>:$/;"	l
f0107656	obj/kern/kernel.asm	/^f0107656:	90                   	nop$/;"	l
f0107657	obj/kern/kernel.asm	/^f0107657 <inb>:$/;"	l
f0107657	obj/kern/kernel.asm	/^f0107657:	55                   	push   %ebp$/;"	l
f0107658	obj/kern/kernel.asm	/^f0107658:	89 e5                	mov    %esp,%ebp$/;"	l
f010765a	obj/kern/kernel.asm	/^f010765a:	83 ec 10             	sub    $0x10,%esp$/;"	l
f010765d	obj/kern/kernel.asm	/^f010765d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107660	obj/kern/kernel.asm	/^f0107660:	89 c2                	mov    %eax,%edx$/;"	l
f0107662	obj/kern/kernel.asm	/^f0107662:	ec                   	in     (%dx),%al$/;"	l
f0107663	obj/kern/kernel.asm	/^f0107663:	88 45 ff             	mov    %al,-0x1(%ebp)$/;"	l
f0107666	obj/kern/kernel.asm	/^f0107666:	0f b6 45 ff          	movzbl -0x1(%ebp),%eax$/;"	l
f010766a	obj/kern/kernel.asm	/^f010766a:	c9                   	leave  $/;"	l
f010766b	obj/kern/kernel.asm	/^f010766b:	c3                   	ret    $/;"	l
f010766c	obj/kern/kernel.asm	/^f010766c <outb>:$/;"	l
f010766c	obj/kern/kernel.asm	/^f010766c:	55                   	push   %ebp$/;"	l
f010766d	obj/kern/kernel.asm	/^f010766d:	89 e5                	mov    %esp,%ebp$/;"	l
f010766f	obj/kern/kernel.asm	/^f010766f:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0107672	obj/kern/kernel.asm	/^f0107672:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107675	obj/kern/kernel.asm	/^f0107675:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
f0107678	obj/kern/kernel.asm	/^f0107678:	0f b6 45 fc          	movzbl -0x4(%ebp),%eax$/;"	l
f010767c	obj/kern/kernel.asm	/^f010767c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f010767f	obj/kern/kernel.asm	/^f010767f:	ee                   	out    %al,(%dx)$/;"	l
f0107680	obj/kern/kernel.asm	/^f0107680:	90                   	nop$/;"	l
f0107681	obj/kern/kernel.asm	/^f0107681:	c9                   	leave  $/;"	l
f0107682	obj/kern/kernel.asm	/^f0107682:	c3                   	ret    $/;"	l
f0107683	obj/kern/kernel.asm	/^f0107683 <_kaddr>:$/;"	l
f0107683	obj/kern/kernel.asm	/^f0107683:	55                   	push   %ebp$/;"	l
f0107684	obj/kern/kernel.asm	/^f0107684:	89 e5                	mov    %esp,%ebp$/;"	l
f0107686	obj/kern/kernel.asm	/^f0107686:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107689	obj/kern/kernel.asm	/^f0107689:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f010768c	obj/kern/kernel.asm	/^f010768c:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010768f	obj/kern/kernel.asm	/^f010768f:	89 c2                	mov    %eax,%edx$/;"	l
f0107691	obj/kern/kernel.asm	/^f0107691:	a1 e8 0e 23 f0       	mov    0xf0230ee8,%eax$/;"	l
f0107696	obj/kern/kernel.asm	/^f0107696:	39 c2                	cmp    %eax,%edx$/;"	l
f0107698	obj/kern/kernel.asm	/^f0107698:	72 13                	jb     f01076ad <_kaddr+0x2a>$/;"	l
f010769a	obj/kern/kernel.asm	/^f010769a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f010769d	obj/kern/kernel.asm	/^f010769d:	68 f4 9f 10 f0       	push   $0xf0109ff4$/;"	l
f01076a2	obj/kern/kernel.asm	/^f01076a2:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f01076a5	obj/kern/kernel.asm	/^f01076a5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01076a8	obj/kern/kernel.asm	/^f01076a8:	e8 33 8c ff ff       	call   f01002e0 <_panic>$/;"	l
f01076ad	obj/kern/kernel.asm	/^f01076ad:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f01076b0	obj/kern/kernel.asm	/^f01076b0:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f01076b5	obj/kern/kernel.asm	/^f01076b5:	c9                   	leave  $/;"	l
f01076b6	obj/kern/kernel.asm	/^f01076b6:	c3                   	ret    $/;"	l
f01076b7	obj/kern/kernel.asm	/^f01076b7 <sum>:$/;"	l
f01076b7	obj/kern/kernel.asm	/^f01076b7:	55                   	push   %ebp$/;"	l
f01076b8	obj/kern/kernel.asm	/^f01076b8:	89 e5                	mov    %esp,%ebp$/;"	l
f01076ba	obj/kern/kernel.asm	/^f01076ba:	83 ec 10             	sub    $0x10,%esp$/;"	l
f01076bd	obj/kern/kernel.asm	/^f01076bd:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
f01076c4	obj/kern/kernel.asm	/^f01076c4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
f01076cb	obj/kern/kernel.asm	/^f01076cb:	eb 15                	jmp    f01076e2 <sum+0x2b>$/;"	l
f01076cd	obj/kern/kernel.asm	/^f01076cd:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
f01076d0	obj/kern/kernel.asm	/^f01076d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f01076d3	obj/kern/kernel.asm	/^f01076d3:	01 d0                	add    %edx,%eax$/;"	l
f01076d5	obj/kern/kernel.asm	/^f01076d5:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01076d8	obj/kern/kernel.asm	/^f01076d8:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01076db	obj/kern/kernel.asm	/^f01076db:	01 45 f8             	add    %eax,-0x8(%ebp)$/;"	l
f01076de	obj/kern/kernel.asm	/^f01076de:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
f01076e2	obj/kern/kernel.asm	/^f01076e2:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f01076e5	obj/kern/kernel.asm	/^f01076e5:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
f01076e8	obj/kern/kernel.asm	/^f01076e8:	7c e3                	jl     f01076cd <sum+0x16>$/;"	l
f01076ea	obj/kern/kernel.asm	/^f01076ea:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f01076ed	obj/kern/kernel.asm	/^f01076ed:	c9                   	leave  $/;"	l
f01076ee	obj/kern/kernel.asm	/^f01076ee:	c3                   	ret    $/;"	l
f01076ef	obj/kern/kernel.asm	/^f01076ef <mpsearch1>:$/;"	l
f01076ef	obj/kern/kernel.asm	/^f01076ef:	55                   	push   %ebp$/;"	l
f01076f0	obj/kern/kernel.asm	/^f01076f0:	89 e5                	mov    %esp,%ebp$/;"	l
f01076f2	obj/kern/kernel.asm	/^f01076f2:	83 ec 18             	sub    $0x18,%esp$/;"	l
f01076f5	obj/kern/kernel.asm	/^f01076f5:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01076f8	obj/kern/kernel.asm	/^f01076f8:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f01076fb	obj/kern/kernel.asm	/^f01076fb:	6a 57                	push   $0x57$/;"	l
f01076fd	obj/kern/kernel.asm	/^f01076fd:	68 17 a0 10 f0       	push   $0xf010a017$/;"	l
f0107702	obj/kern/kernel.asm	/^f0107702:	e8 7c ff ff ff       	call   f0107683 <_kaddr>$/;"	l
f0107707	obj/kern/kernel.asm	/^f0107707:	83 c4 10             	add    $0x10,%esp$/;"	l
f010770a	obj/kern/kernel.asm	/^f010770a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f010770d	obj/kern/kernel.asm	/^f010770d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0107710	obj/kern/kernel.asm	/^f0107710:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107713	obj/kern/kernel.asm	/^f0107713:	01 d0                	add    %edx,%eax$/;"	l
f0107715	obj/kern/kernel.asm	/^f0107715:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0107718	obj/kern/kernel.asm	/^f0107718:	50                   	push   %eax$/;"	l
f0107719	obj/kern/kernel.asm	/^f0107719:	6a 57                	push   $0x57$/;"	l
f010771b	obj/kern/kernel.asm	/^f010771b:	68 17 a0 10 f0       	push   $0xf010a017$/;"	l
f0107720	obj/kern/kernel.asm	/^f0107720:	e8 5e ff ff ff       	call   f0107683 <_kaddr>$/;"	l
f0107725	obj/kern/kernel.asm	/^f0107725:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107728	obj/kern/kernel.asm	/^f0107728:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f010772b	obj/kern/kernel.asm	/^f010772b:	eb 37                	jmp    f0107764 <mpsearch1+0x75>$/;"	l
f010772d	obj/kern/kernel.asm	/^f010772d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0107730	obj/kern/kernel.asm	/^f0107730:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0107733	obj/kern/kernel.asm	/^f0107733:	6a 04                	push   $0x4$/;"	l
f0107735	obj/kern/kernel.asm	/^f0107735:	68 27 a0 10 f0       	push   $0xf010a027$/;"	l
f010773a	obj/kern/kernel.asm	/^f010773a:	50                   	push   %eax$/;"	l
f010773b	obj/kern/kernel.asm	/^f010773b:	e8 ad fc ff ff       	call   f01073ed <memcmp>$/;"	l
f0107740	obj/kern/kernel.asm	/^f0107740:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107743	obj/kern/kernel.asm	/^f0107743:	85 c0                	test   %eax,%eax$/;"	l
f0107745	obj/kern/kernel.asm	/^f0107745:	75 19                	jne    f0107760 <mpsearch1+0x71>$/;"	l
f0107747	obj/kern/kernel.asm	/^f0107747:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010774a	obj/kern/kernel.asm	/^f010774a:	6a 10                	push   $0x10$/;"	l
f010774c	obj/kern/kernel.asm	/^f010774c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
f010774f	obj/kern/kernel.asm	/^f010774f:	e8 63 ff ff ff       	call   f01076b7 <sum>$/;"	l
f0107754	obj/kern/kernel.asm	/^f0107754:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107757	obj/kern/kernel.asm	/^f0107757:	84 c0                	test   %al,%al$/;"	l
f0107759	obj/kern/kernel.asm	/^f0107759:	75 05                	jne    f0107760 <mpsearch1+0x71>$/;"	l
f010775b	obj/kern/kernel.asm	/^f010775b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010775e	obj/kern/kernel.asm	/^f010775e:	eb 11                	jmp    f0107771 <mpsearch1+0x82>$/;"	l
f0107760	obj/kern/kernel.asm	/^f0107760:	83 45 f4 10          	addl   $0x10,-0xc(%ebp)$/;"	l
f0107764	obj/kern/kernel.asm	/^f0107764:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0107767	obj/kern/kernel.asm	/^f0107767:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
f010776a	obj/kern/kernel.asm	/^f010776a:	72 c1                	jb     f010772d <mpsearch1+0x3e>$/;"	l
f010776c	obj/kern/kernel.asm	/^f010776c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107771	obj/kern/kernel.asm	/^f0107771:	c9                   	leave  $/;"	l
f0107772	obj/kern/kernel.asm	/^f0107772:	c3                   	ret    $/;"	l
f0107773	obj/kern/kernel.asm	/^f0107773 <mpsearch>:$/;"	l
f0107773	obj/kern/kernel.asm	/^f0107773:	55                   	push   %ebp$/;"	l
f0107774	obj/kern/kernel.asm	/^f0107774:	89 e5                	mov    %esp,%ebp$/;"	l
f0107776	obj/kern/kernel.asm	/^f0107776:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0107779	obj/kern/kernel.asm	/^f0107779:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010777c	obj/kern/kernel.asm	/^f010777c:	68 00 04 00 00       	push   $0x400$/;"	l
f0107781	obj/kern/kernel.asm	/^f0107781:	6a 6f                	push   $0x6f$/;"	l
f0107783	obj/kern/kernel.asm	/^f0107783:	68 17 a0 10 f0       	push   $0xf010a017$/;"	l
f0107788	obj/kern/kernel.asm	/^f0107788:	e8 f6 fe ff ff       	call   f0107683 <_kaddr>$/;"	l
f010778d	obj/kern/kernel.asm	/^f010778d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107790	obj/kern/kernel.asm	/^f0107790:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f0107793	obj/kern/kernel.asm	/^f0107793:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0107796	obj/kern/kernel.asm	/^f0107796:	83 c0 0e             	add    $0xe,%eax$/;"	l
f0107799	obj/kern/kernel.asm	/^f0107799:	0f b7 00             	movzwl (%eax),%eax$/;"	l
f010779c	obj/kern/kernel.asm	/^f010779c:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010779f	obj/kern/kernel.asm	/^f010779f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01077a2	obj/kern/kernel.asm	/^f01077a2:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
f01077a6	obj/kern/kernel.asm	/^f01077a6:	74 25                	je     f01077cd <mpsearch+0x5a>$/;"	l
f01077a8	obj/kern/kernel.asm	/^f01077a8:	c1 65 f0 04          	shll   $0x4,-0x10(%ebp)$/;"	l
f01077ac	obj/kern/kernel.asm	/^f01077ac:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01077af	obj/kern/kernel.asm	/^f01077af:	68 00 04 00 00       	push   $0x400$/;"	l
f01077b4	obj/kern/kernel.asm	/^f01077b4:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f01077b7	obj/kern/kernel.asm	/^f01077b7:	e8 33 ff ff ff       	call   f01076ef <mpsearch1>$/;"	l
f01077bc	obj/kern/kernel.asm	/^f01077bc:	83 c4 10             	add    $0x10,%esp$/;"	l
f01077bf	obj/kern/kernel.asm	/^f01077bf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01077c2	obj/kern/kernel.asm	/^f01077c2:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f01077c6	obj/kern/kernel.asm	/^f01077c6:	74 3e                	je     f0107806 <mpsearch+0x93>$/;"	l
f01077c8	obj/kern/kernel.asm	/^f01077c8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01077cb	obj/kern/kernel.asm	/^f01077cb:	eb 4e                	jmp    f010781b <mpsearch+0xa8>$/;"	l
f01077cd	obj/kern/kernel.asm	/^f01077cd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01077d0	obj/kern/kernel.asm	/^f01077d0:	83 c0 13             	add    $0x13,%eax$/;"	l
f01077d3	obj/kern/kernel.asm	/^f01077d3:	0f b7 00             	movzwl (%eax),%eax$/;"	l
f01077d6	obj/kern/kernel.asm	/^f01077d6:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01077d9	obj/kern/kernel.asm	/^f01077d9:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f01077dc	obj/kern/kernel.asm	/^f01077dc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f01077df	obj/kern/kernel.asm	/^f01077df:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01077e2	obj/kern/kernel.asm	/^f01077e2:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f01077e7	obj/kern/kernel.asm	/^f01077e7:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01077ea	obj/kern/kernel.asm	/^f01077ea:	68 00 04 00 00       	push   $0x400$/;"	l
f01077ef	obj/kern/kernel.asm	/^f01077ef:	50                   	push   %eax$/;"	l
f01077f0	obj/kern/kernel.asm	/^f01077f0:	e8 fa fe ff ff       	call   f01076ef <mpsearch1>$/;"	l
f01077f5	obj/kern/kernel.asm	/^f01077f5:	83 c4 10             	add    $0x10,%esp$/;"	l
f01077f8	obj/kern/kernel.asm	/^f01077f8:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01077fb	obj/kern/kernel.asm	/^f01077fb:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f01077ff	obj/kern/kernel.asm	/^f01077ff:	74 05                	je     f0107806 <mpsearch+0x93>$/;"	l
f0107801	obj/kern/kernel.asm	/^f0107801:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0107804	obj/kern/kernel.asm	/^f0107804:	eb 15                	jmp    f010781b <mpsearch+0xa8>$/;"	l
f0107806	obj/kern/kernel.asm	/^f0107806:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107809	obj/kern/kernel.asm	/^f0107809:	68 00 00 01 00       	push   $0x10000$/;"	l
f010780e	obj/kern/kernel.asm	/^f010780e:	68 00 00 0f 00       	push   $0xf0000$/;"	l
f0107813	obj/kern/kernel.asm	/^f0107813:	e8 d7 fe ff ff       	call   f01076ef <mpsearch1>$/;"	l
f0107818	obj/kern/kernel.asm	/^f0107818:	83 c4 10             	add    $0x10,%esp$/;"	l
f010781b	obj/kern/kernel.asm	/^f010781b:	c9                   	leave  $/;"	l
f010781c	obj/kern/kernel.asm	/^f010781c:	c3                   	ret    $/;"	l
f010781d	obj/kern/kernel.asm	/^f010781d <mpconfig>:$/;"	l
f010781d	obj/kern/kernel.asm	/^f010781d:	55                   	push   %ebp$/;"	l
f010781e	obj/kern/kernel.asm	/^f010781e:	89 e5                	mov    %esp,%ebp$/;"	l
f0107820	obj/kern/kernel.asm	/^f0107820:	83 ec 18             	sub    $0x18,%esp$/;"	l
f0107823	obj/kern/kernel.asm	/^f0107823:	e8 4b ff ff ff       	call   f0107773 <mpsearch>$/;"	l
f0107828	obj/kern/kernel.asm	/^f0107828:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f010782b	obj/kern/kernel.asm	/^f010782b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
f010782f	obj/kern/kernel.asm	/^f010782f:	75 0a                	jne    f010783b <mpconfig+0x1e>$/;"	l
f0107831	obj/kern/kernel.asm	/^f0107831:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107836	obj/kern/kernel.asm	/^f0107836:	e9 4e 01 00 00       	jmp    f0107989 <mpconfig+0x16c>$/;"	l
f010783b	obj/kern/kernel.asm	/^f010783b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010783e	obj/kern/kernel.asm	/^f010783e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107841	obj/kern/kernel.asm	/^f0107841:	85 c0                	test   %eax,%eax$/;"	l
f0107843	obj/kern/kernel.asm	/^f0107843:	74 0b                	je     f0107850 <mpconfig+0x33>$/;"	l
f0107845	obj/kern/kernel.asm	/^f0107845:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0107848	obj/kern/kernel.asm	/^f0107848:	0f b6 40 0b          	movzbl 0xb(%eax),%eax$/;"	l
f010784c	obj/kern/kernel.asm	/^f010784c:	84 c0                	test   %al,%al$/;"	l
f010784e	obj/kern/kernel.asm	/^f010784e:	74 1a                	je     f010786a <mpconfig+0x4d>$/;"	l
f0107850	obj/kern/kernel.asm	/^f0107850:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0107853	obj/kern/kernel.asm	/^f0107853:	68 2c a0 10 f0       	push   $0xf010a02c$/;"	l
f0107858	obj/kern/kernel.asm	/^f0107858:	e8 51 d1 ff ff       	call   f01049ae <cprintf>$/;"	l
f010785d	obj/kern/kernel.asm	/^f010785d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107860	obj/kern/kernel.asm	/^f0107860:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107865	obj/kern/kernel.asm	/^f0107865:	e9 1f 01 00 00       	jmp    f0107989 <mpconfig+0x16c>$/;"	l
f010786a	obj/kern/kernel.asm	/^f010786a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f010786d	obj/kern/kernel.asm	/^f010786d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107870	obj/kern/kernel.asm	/^f0107870:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0107873	obj/kern/kernel.asm	/^f0107873:	50                   	push   %eax$/;"	l
f0107874	obj/kern/kernel.asm	/^f0107874:	68 90 00 00 00       	push   $0x90$/;"	l
f0107879	obj/kern/kernel.asm	/^f0107879:	68 17 a0 10 f0       	push   $0xf010a017$/;"	l
f010787e	obj/kern/kernel.asm	/^f010787e:	e8 00 fe ff ff       	call   f0107683 <_kaddr>$/;"	l
f0107883	obj/kern/kernel.asm	/^f0107883:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107886	obj/kern/kernel.asm	/^f0107886:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0107889	obj/kern/kernel.asm	/^f0107889:	83 ec 04             	sub    $0x4,%esp$/;"	l
f010788c	obj/kern/kernel.asm	/^f010788c:	6a 04                	push   $0x4$/;"	l
f010788e	obj/kern/kernel.asm	/^f010788e:	68 59 a0 10 f0       	push   $0xf010a059$/;"	l
f0107893	obj/kern/kernel.asm	/^f0107893:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f0107896	obj/kern/kernel.asm	/^f0107896:	e8 52 fb ff ff       	call   f01073ed <memcmp>$/;"	l
f010789b	obj/kern/kernel.asm	/^f010789b:	83 c4 10             	add    $0x10,%esp$/;"	l
f010789e	obj/kern/kernel.asm	/^f010789e:	85 c0                	test   %eax,%eax$/;"	l
f01078a0	obj/kern/kernel.asm	/^f01078a0:	74 1a                	je     f01078bc <mpconfig+0x9f>$/;"	l
f01078a2	obj/kern/kernel.asm	/^f01078a2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01078a5	obj/kern/kernel.asm	/^f01078a5:	68 60 a0 10 f0       	push   $0xf010a060$/;"	l
f01078aa	obj/kern/kernel.asm	/^f01078aa:	e8 ff d0 ff ff       	call   f01049ae <cprintf>$/;"	l
f01078af	obj/kern/kernel.asm	/^f01078af:	83 c4 10             	add    $0x10,%esp$/;"	l
f01078b2	obj/kern/kernel.asm	/^f01078b2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01078b7	obj/kern/kernel.asm	/^f01078b7:	e9 cd 00 00 00       	jmp    f0107989 <mpconfig+0x16c>$/;"	l
f01078bc	obj/kern/kernel.asm	/^f01078bc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01078bf	obj/kern/kernel.asm	/^f01078bf:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
f01078c3	obj/kern/kernel.asm	/^f01078c3:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f01078c6	obj/kern/kernel.asm	/^f01078c6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01078c9	obj/kern/kernel.asm	/^f01078c9:	50                   	push   %eax$/;"	l
f01078ca	obj/kern/kernel.asm	/^f01078ca:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
f01078cd	obj/kern/kernel.asm	/^f01078cd:	e8 e5 fd ff ff       	call   f01076b7 <sum>$/;"	l
f01078d2	obj/kern/kernel.asm	/^f01078d2:	83 c4 10             	add    $0x10,%esp$/;"	l
f01078d5	obj/kern/kernel.asm	/^f01078d5:	84 c0                	test   %al,%al$/;"	l
f01078d7	obj/kern/kernel.asm	/^f01078d7:	74 1a                	je     f01078f3 <mpconfig+0xd6>$/;"	l
f01078d9	obj/kern/kernel.asm	/^f01078d9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f01078dc	obj/kern/kernel.asm	/^f01078dc:	68 94 a0 10 f0       	push   $0xf010a094$/;"	l
f01078e1	obj/kern/kernel.asm	/^f01078e1:	e8 c8 d0 ff ff       	call   f01049ae <cprintf>$/;"	l
f01078e6	obj/kern/kernel.asm	/^f01078e6:	83 c4 10             	add    $0x10,%esp$/;"	l
f01078e9	obj/kern/kernel.asm	/^f01078e9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01078ee	obj/kern/kernel.asm	/^f01078ee:	e9 96 00 00 00       	jmp    f0107989 <mpconfig+0x16c>$/;"	l
f01078f3	obj/kern/kernel.asm	/^f01078f3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f01078f6	obj/kern/kernel.asm	/^f01078f6:	0f b6 40 06          	movzbl 0x6(%eax),%eax$/;"	l
f01078fa	obj/kern/kernel.asm	/^f01078fa:	3c 01                	cmp    $0x1,%al$/;"	l
f01078fc	obj/kern/kernel.asm	/^f01078fc:	74 2d                	je     f010792b <mpconfig+0x10e>$/;"	l
f01078fe	obj/kern/kernel.asm	/^f01078fe:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0107901	obj/kern/kernel.asm	/^f0107901:	0f b6 40 06          	movzbl 0x6(%eax),%eax$/;"	l
f0107905	obj/kern/kernel.asm	/^f0107905:	3c 04                	cmp    $0x4,%al$/;"	l
f0107907	obj/kern/kernel.asm	/^f0107907:	74 22                	je     f010792b <mpconfig+0x10e>$/;"	l
f0107909	obj/kern/kernel.asm	/^f0107909:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010790c	obj/kern/kernel.asm	/^f010790c:	0f b6 40 06          	movzbl 0x6(%eax),%eax$/;"	l
f0107910	obj/kern/kernel.asm	/^f0107910:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0107913	obj/kern/kernel.asm	/^f0107913:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107916	obj/kern/kernel.asm	/^f0107916:	50                   	push   %eax$/;"	l
f0107917	obj/kern/kernel.asm	/^f0107917:	68 b8 a0 10 f0       	push   $0xf010a0b8$/;"	l
f010791c	obj/kern/kernel.asm	/^f010791c:	e8 8d d0 ff ff       	call   f01049ae <cprintf>$/;"	l
f0107921	obj/kern/kernel.asm	/^f0107921:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107924	obj/kern/kernel.asm	/^f0107924:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107929	obj/kern/kernel.asm	/^f0107929:	eb 5e                	jmp    f0107989 <mpconfig+0x16c>$/;"	l
f010792b	obj/kern/kernel.asm	/^f010792b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f010792e	obj/kern/kernel.asm	/^f010792e:	0f b7 40 28          	movzwl 0x28(%eax),%eax$/;"	l
f0107932	obj/kern/kernel.asm	/^f0107932:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0107935	obj/kern/kernel.asm	/^f0107935:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0107938	obj/kern/kernel.asm	/^f0107938:	0f b7 52 04          	movzwl 0x4(%edx),%edx$/;"	l
f010793c	obj/kern/kernel.asm	/^f010793c:	0f b7 ca             	movzwl %dx,%ecx$/;"	l
f010793f	obj/kern/kernel.asm	/^f010793f:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
f0107942	obj/kern/kernel.asm	/^f0107942:	01 ca                	add    %ecx,%edx$/;"	l
f0107944	obj/kern/kernel.asm	/^f0107944:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107947	obj/kern/kernel.asm	/^f0107947:	50                   	push   %eax$/;"	l
f0107948	obj/kern/kernel.asm	/^f0107948:	52                   	push   %edx$/;"	l
f0107949	obj/kern/kernel.asm	/^f0107949:	e8 69 fd ff ff       	call   f01076b7 <sum>$/;"	l
f010794e	obj/kern/kernel.asm	/^f010794e:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107951	obj/kern/kernel.asm	/^f0107951:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0107954	obj/kern/kernel.asm	/^f0107954:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0107957	obj/kern/kernel.asm	/^f0107957:	0f b6 40 2a          	movzbl 0x2a(%eax),%eax$/;"	l
f010795b	obj/kern/kernel.asm	/^f010795b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010795e	obj/kern/kernel.asm	/^f010795e:	01 d0                	add    %edx,%eax$/;"	l
f0107960	obj/kern/kernel.asm	/^f0107960:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0107963	obj/kern/kernel.asm	/^f0107963:	85 c0                	test   %eax,%eax$/;"	l
f0107965	obj/kern/kernel.asm	/^f0107965:	74 17                	je     f010797e <mpconfig+0x161>$/;"	l
f0107967	obj/kern/kernel.asm	/^f0107967:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010796a	obj/kern/kernel.asm	/^f010796a:	68 d8 a0 10 f0       	push   $0xf010a0d8$/;"	l
f010796f	obj/kern/kernel.asm	/^f010796f:	e8 3a d0 ff ff       	call   f01049ae <cprintf>$/;"	l
f0107974	obj/kern/kernel.asm	/^f0107974:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107977	obj/kern/kernel.asm	/^f0107977:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010797c	obj/kern/kernel.asm	/^f010797c:	eb 0b                	jmp    f0107989 <mpconfig+0x16c>$/;"	l
f010797e	obj/kern/kernel.asm	/^f010797e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107981	obj/kern/kernel.asm	/^f0107981:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
f0107984	obj/kern/kernel.asm	/^f0107984:	89 10                	mov    %edx,(%eax)$/;"	l
f0107986	obj/kern/kernel.asm	/^f0107986:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0107989	obj/kern/kernel.asm	/^f0107989:	c9                   	leave  $/;"	l
f010798a	obj/kern/kernel.asm	/^f010798a:	c3                   	ret    $/;"	l
f010798b	obj/kern/kernel.asm	/^f010798b <mp_init>:$/;"	l
f010798b	obj/kern/kernel.asm	/^f010798b:	55                   	push   %ebp$/;"	l
f010798c	obj/kern/kernel.asm	/^f010798c:	89 e5                	mov    %esp,%ebp$/;"	l
f010798e	obj/kern/kernel.asm	/^f010798e:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0107991	obj/kern/kernel.asm	/^f0107991:	c7 05 c0 13 23 f0 20 	movl   $0xf0231020,0xf02313c0$/;"	l
f0107998	obj/kern/kernel.asm	/^f0107998:	10 23 f0 $/;"	l
f010799b	obj/kern/kernel.asm	/^f010799b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f010799e	obj/kern/kernel.asm	/^f010799e:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
f01079a1	obj/kern/kernel.asm	/^f01079a1:	50                   	push   %eax$/;"	l
f01079a2	obj/kern/kernel.asm	/^f01079a2:	e8 76 fe ff ff       	call   f010781d <mpconfig>$/;"	l
f01079a7	obj/kern/kernel.asm	/^f01079a7:	83 c4 10             	add    $0x10,%esp$/;"	l
f01079aa	obj/kern/kernel.asm	/^f01079aa:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
f01079ad	obj/kern/kernel.asm	/^f01079ad:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
f01079b1	obj/kern/kernel.asm	/^f01079b1:	0f 84 bb 01 00 00    	je     f0107b72 <mp_init+0x1e7>$/;"	l
f01079b7	obj/kern/kernel.asm	/^f01079b7:	c7 05 00 10 23 f0 01 	movl   $0x1,0xf0231000$/;"	l
f01079be	obj/kern/kernel.asm	/^f01079be:	00 00 00 $/;"	l
f01079c1	obj/kern/kernel.asm	/^f01079c1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01079c4	obj/kern/kernel.asm	/^f01079c4:	8b 40 24             	mov    0x24(%eax),%eax$/;"	l
f01079c7	obj/kern/kernel.asm	/^f01079c7:	a3 00 20 27 f0       	mov    %eax,0xf0272000$/;"	l
f01079cc	obj/kern/kernel.asm	/^f01079cc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f01079cf	obj/kern/kernel.asm	/^f01079cf:	83 c0 2c             	add    $0x2c,%eax$/;"	l
f01079d2	obj/kern/kernel.asm	/^f01079d2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
f01079d5	obj/kern/kernel.asm	/^f01079d5:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
f01079dc	obj/kern/kernel.asm	/^f01079dc:	e9 d3 00 00 00       	jmp    f0107ab4 <mp_init+0x129>$/;"	l
f01079e1	obj/kern/kernel.asm	/^f01079e1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f01079e4	obj/kern/kernel.asm	/^f01079e4:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f01079e7	obj/kern/kernel.asm	/^f01079e7:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01079ea	obj/kern/kernel.asm	/^f01079ea:	85 c0                	test   %eax,%eax$/;"	l
f01079ec	obj/kern/kernel.asm	/^f01079ec:	74 13                	je     f0107a01 <mp_init+0x76>$/;"	l
f01079ee	obj/kern/kernel.asm	/^f01079ee:	85 c0                	test   %eax,%eax$/;"	l
f01079f0	obj/kern/kernel.asm	/^f01079f0:	0f 88 89 00 00 00    	js     f0107a7f <mp_init+0xf4>$/;"	l
f01079f6	obj/kern/kernel.asm	/^f01079f6:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f01079f9	obj/kern/kernel.asm	/^f01079f9:	0f 8f 80 00 00 00    	jg     f0107a7f <mp_init+0xf4>$/;"	l
f01079ff	obj/kern/kernel.asm	/^f01079ff:	eb 78                	jmp    f0107a79 <mp_init+0xee>$/;"	l
f0107a01	obj/kern/kernel.asm	/^f0107a01:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0107a04	obj/kern/kernel.asm	/^f0107a04:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
f0107a07	obj/kern/kernel.asm	/^f0107a07:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0107a0a	obj/kern/kernel.asm	/^f0107a0a:	0f b6 40 03          	movzbl 0x3(%eax),%eax$/;"	l
f0107a0e	obj/kern/kernel.asm	/^f0107a0e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0107a11	obj/kern/kernel.asm	/^f0107a11:	83 e0 02             	and    $0x2,%eax$/;"	l
f0107a14	obj/kern/kernel.asm	/^f0107a14:	85 c0                	test   %eax,%eax$/;"	l
f0107a16	obj/kern/kernel.asm	/^f0107a16:	74 12                	je     f0107a2a <mp_init+0x9f>$/;"	l
f0107a18	obj/kern/kernel.asm	/^f0107a18:	a1 c4 13 23 f0       	mov    0xf02313c4,%eax$/;"	l
f0107a1d	obj/kern/kernel.asm	/^f0107a1d:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0107a20	obj/kern/kernel.asm	/^f0107a20:	05 20 10 23 f0       	add    $0xf0231020,%eax$/;"	l
f0107a25	obj/kern/kernel.asm	/^f0107a25:	a3 c0 13 23 f0       	mov    %eax,0xf02313c0$/;"	l
f0107a2a	obj/kern/kernel.asm	/^f0107a2a:	a1 c4 13 23 f0       	mov    0xf02313c4,%eax$/;"	l
f0107a2f	obj/kern/kernel.asm	/^f0107a2f:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f0107a32	obj/kern/kernel.asm	/^f0107a32:	7f 24                	jg     f0107a58 <mp_init+0xcd>$/;"	l
f0107a34	obj/kern/kernel.asm	/^f0107a34:	a1 c4 13 23 f0       	mov    0xf02313c4,%eax$/;"	l
f0107a39	obj/kern/kernel.asm	/^f0107a39:	8b 15 c4 13 23 f0    	mov    0xf02313c4,%edx$/;"	l
f0107a3f	obj/kern/kernel.asm	/^f0107a3f:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0107a42	obj/kern/kernel.asm	/^f0107a42:	05 20 10 23 f0       	add    $0xf0231020,%eax$/;"	l
f0107a47	obj/kern/kernel.asm	/^f0107a47:	88 10                	mov    %dl,(%eax)$/;"	l
f0107a49	obj/kern/kernel.asm	/^f0107a49:	a1 c4 13 23 f0       	mov    0xf02313c4,%eax$/;"	l
f0107a4e	obj/kern/kernel.asm	/^f0107a4e:	83 c0 01             	add    $0x1,%eax$/;"	l
f0107a51	obj/kern/kernel.asm	/^f0107a51:	a3 c4 13 23 f0       	mov    %eax,0xf02313c4$/;"	l
f0107a56	obj/kern/kernel.asm	/^f0107a56:	eb 1b                	jmp    f0107a73 <mp_init+0xe8>$/;"	l
f0107a58	obj/kern/kernel.asm	/^f0107a58:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
f0107a5b	obj/kern/kernel.asm	/^f0107a5b:	0f b6 40 01          	movzbl 0x1(%eax),%eax$/;"	l
f0107a5f	obj/kern/kernel.asm	/^f0107a5f:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0107a62	obj/kern/kernel.asm	/^f0107a62:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107a65	obj/kern/kernel.asm	/^f0107a65:	50                   	push   %eax$/;"	l
f0107a66	obj/kern/kernel.asm	/^f0107a66:	68 08 a1 10 f0       	push   $0xf010a108$/;"	l
f0107a6b	obj/kern/kernel.asm	/^f0107a6b:	e8 3e cf ff ff       	call   f01049ae <cprintf>$/;"	l
f0107a70	obj/kern/kernel.asm	/^f0107a70:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107a73	obj/kern/kernel.asm	/^f0107a73:	83 45 f4 14          	addl   $0x14,-0xc(%ebp)$/;"	l
f0107a77	obj/kern/kernel.asm	/^f0107a77:	eb 37                	jmp    f0107ab0 <mp_init+0x125>$/;"	l
f0107a79	obj/kern/kernel.asm	/^f0107a79:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)$/;"	l
f0107a7d	obj/kern/kernel.asm	/^f0107a7d:	eb 31                	jmp    f0107ab0 <mp_init+0x125>$/;"	l
f0107a7f	obj/kern/kernel.asm	/^f0107a7f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
f0107a82	obj/kern/kernel.asm	/^f0107a82:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0107a85	obj/kern/kernel.asm	/^f0107a85:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0107a88	obj/kern/kernel.asm	/^f0107a88:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107a8b	obj/kern/kernel.asm	/^f0107a8b:	50                   	push   %eax$/;"	l
f0107a8c	obj/kern/kernel.asm	/^f0107a8c:	68 30 a1 10 f0       	push   $0xf010a130$/;"	l
f0107a91	obj/kern/kernel.asm	/^f0107a91:	e8 18 cf ff ff       	call   f01049ae <cprintf>$/;"	l
f0107a96	obj/kern/kernel.asm	/^f0107a96:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107a99	obj/kern/kernel.asm	/^f0107a99:	c7 05 00 10 23 f0 00 	movl   $0x0,0xf0231000$/;"	l
f0107aa0	obj/kern/kernel.asm	/^f0107aa0:	00 00 00 $/;"	l
f0107aa3	obj/kern/kernel.asm	/^f0107aa3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0107aa6	obj/kern/kernel.asm	/^f0107aa6:	0f b7 40 22          	movzwl 0x22(%eax),%eax$/;"	l
f0107aaa	obj/kern/kernel.asm	/^f0107aaa:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0107aad	obj/kern/kernel.asm	/^f0107aad:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0107ab0	obj/kern/kernel.asm	/^f0107ab0:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
f0107ab4	obj/kern/kernel.asm	/^f0107ab4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
f0107ab7	obj/kern/kernel.asm	/^f0107ab7:	0f b7 40 22          	movzwl 0x22(%eax),%eax$/;"	l
f0107abb	obj/kern/kernel.asm	/^f0107abb:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0107abe	obj/kern/kernel.asm	/^f0107abe:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
f0107ac1	obj/kern/kernel.asm	/^f0107ac1:	0f 87 1a ff ff ff    	ja     f01079e1 <mp_init+0x56>$/;"	l
f0107ac7	obj/kern/kernel.asm	/^f0107ac7:	a1 c0 13 23 f0       	mov    0xf02313c0,%eax$/;"	l
f0107acc	obj/kern/kernel.asm	/^f0107acc:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
f0107ad3	obj/kern/kernel.asm	/^f0107ad3:	a1 00 10 23 f0       	mov    0xf0231000,%eax$/;"	l
f0107ad8	obj/kern/kernel.asm	/^f0107ad8:	85 c0                	test   %eax,%eax$/;"	l
f0107ada	obj/kern/kernel.asm	/^f0107ada:	75 26                	jne    f0107b02 <mp_init+0x177>$/;"	l
f0107adc	obj/kern/kernel.asm	/^f0107adc:	c7 05 c4 13 23 f0 01 	movl   $0x1,0xf02313c4$/;"	l
f0107ae3	obj/kern/kernel.asm	/^f0107ae3:	00 00 00 $/;"	l
f0107ae6	obj/kern/kernel.asm	/^f0107ae6:	c7 05 00 20 27 f0 00 	movl   $0x0,0xf0272000$/;"	l
f0107aed	obj/kern/kernel.asm	/^f0107aed:	00 00 00 $/;"	l
f0107af0	obj/kern/kernel.asm	/^f0107af0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0107af3	obj/kern/kernel.asm	/^f0107af3:	68 50 a1 10 f0       	push   $0xf010a150$/;"	l
f0107af8	obj/kern/kernel.asm	/^f0107af8:	e8 b1 ce ff ff       	call   f01049ae <cprintf>$/;"	l
f0107afd	obj/kern/kernel.asm	/^f0107afd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107b00	obj/kern/kernel.asm	/^f0107b00:	eb 71                	jmp    f0107b73 <mp_init+0x1e8>$/;"	l
f0107b02	obj/kern/kernel.asm	/^f0107b02:	8b 15 c4 13 23 f0    	mov    0xf02313c4,%edx$/;"	l
f0107b08	obj/kern/kernel.asm	/^f0107b08:	a1 c0 13 23 f0       	mov    0xf02313c0,%eax$/;"	l
f0107b0d	obj/kern/kernel.asm	/^f0107b0d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0107b10	obj/kern/kernel.asm	/^f0107b10:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0107b13	obj/kern/kernel.asm	/^f0107b13:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0107b16	obj/kern/kernel.asm	/^f0107b16:	52                   	push   %edx$/;"	l
f0107b17	obj/kern/kernel.asm	/^f0107b17:	50                   	push   %eax$/;"	l
f0107b18	obj/kern/kernel.asm	/^f0107b18:	68 7c a1 10 f0       	push   $0xf010a17c$/;"	l
f0107b1d	obj/kern/kernel.asm	/^f0107b1d:	e8 8c ce ff ff       	call   f01049ae <cprintf>$/;"	l
f0107b22	obj/kern/kernel.asm	/^f0107b22:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107b25	obj/kern/kernel.asm	/^f0107b25:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0107b28	obj/kern/kernel.asm	/^f0107b28:	0f b6 40 0c          	movzbl 0xc(%eax),%eax$/;"	l
f0107b2c	obj/kern/kernel.asm	/^f0107b2c:	84 c0                	test   %al,%al$/;"	l
f0107b2e	obj/kern/kernel.asm	/^f0107b2e:	74 43                	je     f0107b73 <mp_init+0x1e8>$/;"	l
f0107b30	obj/kern/kernel.asm	/^f0107b30:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0107b33	obj/kern/kernel.asm	/^f0107b33:	68 9c a1 10 f0       	push   $0xf010a19c$/;"	l
f0107b38	obj/kern/kernel.asm	/^f0107b38:	e8 71 ce ff ff       	call   f01049ae <cprintf>$/;"	l
f0107b3d	obj/kern/kernel.asm	/^f0107b3d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107b40	obj/kern/kernel.asm	/^f0107b40:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107b43	obj/kern/kernel.asm	/^f0107b43:	6a 70                	push   $0x70$/;"	l
f0107b45	obj/kern/kernel.asm	/^f0107b45:	6a 22                	push   $0x22$/;"	l
f0107b47	obj/kern/kernel.asm	/^f0107b47:	e8 20 fb ff ff       	call   f010766c <outb>$/;"	l
f0107b4c	obj/kern/kernel.asm	/^f0107b4c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107b4f	obj/kern/kernel.asm	/^f0107b4f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0107b52	obj/kern/kernel.asm	/^f0107b52:	6a 23                	push   $0x23$/;"	l
f0107b54	obj/kern/kernel.asm	/^f0107b54:	e8 fe fa ff ff       	call   f0107657 <inb>$/;"	l
f0107b59	obj/kern/kernel.asm	/^f0107b59:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107b5c	obj/kern/kernel.asm	/^f0107b5c:	83 c8 01             	or     $0x1,%eax$/;"	l
f0107b5f	obj/kern/kernel.asm	/^f0107b5f:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0107b62	obj/kern/kernel.asm	/^f0107b62:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107b65	obj/kern/kernel.asm	/^f0107b65:	50                   	push   %eax$/;"	l
f0107b66	obj/kern/kernel.asm	/^f0107b66:	6a 23                	push   $0x23$/;"	l
f0107b68	obj/kern/kernel.asm	/^f0107b68:	e8 ff fa ff ff       	call   f010766c <outb>$/;"	l
f0107b6d	obj/kern/kernel.asm	/^f0107b6d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107b70	obj/kern/kernel.asm	/^f0107b70:	eb 01                	jmp    f0107b73 <mp_init+0x1e8>$/;"	l
f0107b72	obj/kern/kernel.asm	/^f0107b72:	90                   	nop$/;"	l
f0107b73	obj/kern/kernel.asm	/^f0107b73:	c9                   	leave  $/;"	l
f0107b74	obj/kern/kernel.asm	/^f0107b74:	c3                   	ret    $/;"	l
f0107b75	obj/kern/kernel.asm	/^f0107b75 <outb>:$/;"	l
f0107b75	obj/kern/kernel.asm	/^f0107b75:	55                   	push   %ebp$/;"	l
f0107b76	obj/kern/kernel.asm	/^f0107b76:	89 e5                	mov    %esp,%ebp$/;"	l
f0107b78	obj/kern/kernel.asm	/^f0107b78:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0107b7b	obj/kern/kernel.asm	/^f0107b7b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107b7e	obj/kern/kernel.asm	/^f0107b7e:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
f0107b81	obj/kern/kernel.asm	/^f0107b81:	0f b6 45 fc          	movzbl -0x4(%ebp),%eax$/;"	l
f0107b85	obj/kern/kernel.asm	/^f0107b85:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0107b88	obj/kern/kernel.asm	/^f0107b88:	ee                   	out    %al,(%dx)$/;"	l
f0107b89	obj/kern/kernel.asm	/^f0107b89:	90                   	nop$/;"	l
f0107b8a	obj/kern/kernel.asm	/^f0107b8a:	c9                   	leave  $/;"	l
f0107b8b	obj/kern/kernel.asm	/^f0107b8b:	c3                   	ret    $/;"	l
f0107b8c	obj/kern/kernel.asm	/^f0107b8c <_kaddr>:$/;"	l
f0107b8c	obj/kern/kernel.asm	/^f0107b8c:	55                   	push   %ebp$/;"	l
f0107b8d	obj/kern/kernel.asm	/^f0107b8d:	89 e5                	mov    %esp,%ebp$/;"	l
f0107b8f	obj/kern/kernel.asm	/^f0107b8f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107b92	obj/kern/kernel.asm	/^f0107b92:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0107b95	obj/kern/kernel.asm	/^f0107b95:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0107b98	obj/kern/kernel.asm	/^f0107b98:	89 c2                	mov    %eax,%edx$/;"	l
f0107b9a	obj/kern/kernel.asm	/^f0107b9a:	a1 e8 0e 23 f0       	mov    0xf0230ee8,%eax$/;"	l
f0107b9f	obj/kern/kernel.asm	/^f0107b9f:	39 c2                	cmp    %eax,%edx$/;"	l
f0107ba1	obj/kern/kernel.asm	/^f0107ba1:	72 13                	jb     f0107bb6 <_kaddr+0x2a>$/;"	l
f0107ba3	obj/kern/kernel.asm	/^f0107ba3:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
f0107ba6	obj/kern/kernel.asm	/^f0107ba6:	68 e0 a1 10 f0       	push   $0xf010a1e0$/;"	l
f0107bab	obj/kern/kernel.asm	/^f0107bab:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
f0107bae	obj/kern/kernel.asm	/^f0107bae:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0107bb1	obj/kern/kernel.asm	/^f0107bb1:	e8 2a 87 ff ff       	call   f01002e0 <_panic>$/;"	l
f0107bb6	obj/kern/kernel.asm	/^f0107bb6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
f0107bb9	obj/kern/kernel.asm	/^f0107bb9:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0107bbe	obj/kern/kernel.asm	/^f0107bbe:	c9                   	leave  $/;"	l
f0107bbf	obj/kern/kernel.asm	/^f0107bbf:	c3                   	ret    $/;"	l
f0107bc0	obj/kern/kernel.asm	/^f0107bc0 <lapicw>:$/;"	l
f0107bc0	obj/kern/kernel.asm	/^f0107bc0:	55                   	push   %ebp$/;"	l
f0107bc1	obj/kern/kernel.asm	/^f0107bc1:	89 e5                	mov    %esp,%ebp$/;"	l
f0107bc3	obj/kern/kernel.asm	/^f0107bc3:	a1 04 20 27 f0       	mov    0xf0272004,%eax$/;"	l
f0107bc8	obj/kern/kernel.asm	/^f0107bc8:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0107bcb	obj/kern/kernel.asm	/^f0107bcb:	c1 e2 02             	shl    $0x2,%edx$/;"	l
f0107bce	obj/kern/kernel.asm	/^f0107bce:	01 c2                	add    %eax,%edx$/;"	l
f0107bd0	obj/kern/kernel.asm	/^f0107bd0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107bd3	obj/kern/kernel.asm	/^f0107bd3:	89 02                	mov    %eax,(%edx)$/;"	l
f0107bd5	obj/kern/kernel.asm	/^f0107bd5:	a1 04 20 27 f0       	mov    0xf0272004,%eax$/;"	l
f0107bda	obj/kern/kernel.asm	/^f0107bda:	83 c0 20             	add    $0x20,%eax$/;"	l
f0107bdd	obj/kern/kernel.asm	/^f0107bdd:	8b 00                	mov    (%eax),%eax$/;"	l
f0107bdf	obj/kern/kernel.asm	/^f0107bdf:	90                   	nop$/;"	l
f0107be0	obj/kern/kernel.asm	/^f0107be0:	5d                   	pop    %ebp$/;"	l
f0107be1	obj/kern/kernel.asm	/^f0107be1:	c3                   	ret    $/;"	l
f0107be2	obj/kern/kernel.asm	/^f0107be2 <lapic_init>:$/;"	l
f0107be2	obj/kern/kernel.asm	/^f0107be2:	55                   	push   %ebp$/;"	l
f0107be3	obj/kern/kernel.asm	/^f0107be3:	89 e5                	mov    %esp,%ebp$/;"	l
f0107be5	obj/kern/kernel.asm	/^f0107be5:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107be8	obj/kern/kernel.asm	/^f0107be8:	a1 00 20 27 f0       	mov    0xf0272000,%eax$/;"	l
f0107bed	obj/kern/kernel.asm	/^f0107bed:	85 c0                	test   %eax,%eax$/;"	l
f0107bef	obj/kern/kernel.asm	/^f0107bef:	0f 84 67 01 00 00    	je     f0107d5c <lapic_init+0x17a>$/;"	l
f0107bf5	obj/kern/kernel.asm	/^f0107bf5:	a1 00 20 27 f0       	mov    0xf0272000,%eax$/;"	l
f0107bfa	obj/kern/kernel.asm	/^f0107bfa:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107bfd	obj/kern/kernel.asm	/^f0107bfd:	68 00 10 00 00       	push   $0x1000$/;"	l
f0107c02	obj/kern/kernel.asm	/^f0107c02:	50                   	push   %eax$/;"	l
f0107c03	obj/kern/kernel.asm	/^f0107c03:	e8 66 a0 ff ff       	call   f0101c6e <mmio_map_region>$/;"	l
f0107c08	obj/kern/kernel.asm	/^f0107c08:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107c0b	obj/kern/kernel.asm	/^f0107c0b:	a3 04 20 27 f0       	mov    %eax,0xf0272004$/;"	l
f0107c10	obj/kern/kernel.asm	/^f0107c10:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107c13	obj/kern/kernel.asm	/^f0107c13:	68 27 01 00 00       	push   $0x127$/;"	l
f0107c18	obj/kern/kernel.asm	/^f0107c18:	6a 3c                	push   $0x3c$/;"	l
f0107c1a	obj/kern/kernel.asm	/^f0107c1a:	e8 a1 ff ff ff       	call   f0107bc0 <lapicw>$/;"	l
f0107c1f	obj/kern/kernel.asm	/^f0107c1f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107c22	obj/kern/kernel.asm	/^f0107c22:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107c25	obj/kern/kernel.asm	/^f0107c25:	6a 0b                	push   $0xb$/;"	l
f0107c27	obj/kern/kernel.asm	/^f0107c27:	68 f8 00 00 00       	push   $0xf8$/;"	l
f0107c2c	obj/kern/kernel.asm	/^f0107c2c:	e8 8f ff ff ff       	call   f0107bc0 <lapicw>$/;"	l
f0107c31	obj/kern/kernel.asm	/^f0107c31:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107c34	obj/kern/kernel.asm	/^f0107c34:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107c37	obj/kern/kernel.asm	/^f0107c37:	68 20 00 02 00       	push   $0x20020$/;"	l
f0107c3c	obj/kern/kernel.asm	/^f0107c3c:	68 c8 00 00 00       	push   $0xc8$/;"	l
f0107c41	obj/kern/kernel.asm	/^f0107c41:	e8 7a ff ff ff       	call   f0107bc0 <lapicw>$/;"	l
f0107c46	obj/kern/kernel.asm	/^f0107c46:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107c49	obj/kern/kernel.asm	/^f0107c49:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107c4c	obj/kern/kernel.asm	/^f0107c4c:	68 80 96 98 00       	push   $0x989680$/;"	l
f0107c51	obj/kern/kernel.asm	/^f0107c51:	68 e0 00 00 00       	push   $0xe0$/;"	l
f0107c56	obj/kern/kernel.asm	/^f0107c56:	e8 65 ff ff ff       	call   f0107bc0 <lapicw>$/;"	l
f0107c5b	obj/kern/kernel.asm	/^f0107c5b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107c5e	obj/kern/kernel.asm	/^f0107c5e:	e8 fc 00 00 00       	call   f0107d5f <cpunum>$/;"	l
f0107c63	obj/kern/kernel.asm	/^f0107c63:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0107c66	obj/kern/kernel.asm	/^f0107c66:	8d 90 20 10 23 f0    	lea    -0xfdcefe0(%eax),%edx$/;"	l
f0107c6c	obj/kern/kernel.asm	/^f0107c6c:	a1 c0 13 23 f0       	mov    0xf02313c0,%eax$/;"	l
f0107c71	obj/kern/kernel.asm	/^f0107c71:	39 c2                	cmp    %eax,%edx$/;"	l
f0107c73	obj/kern/kernel.asm	/^f0107c73:	74 15                	je     f0107c8a <lapic_init+0xa8>$/;"	l
f0107c75	obj/kern/kernel.asm	/^f0107c75:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107c78	obj/kern/kernel.asm	/^f0107c78:	68 00 00 01 00       	push   $0x10000$/;"	l
f0107c7d	obj/kern/kernel.asm	/^f0107c7d:	68 d4 00 00 00       	push   $0xd4$/;"	l
f0107c82	obj/kern/kernel.asm	/^f0107c82:	e8 39 ff ff ff       	call   f0107bc0 <lapicw>$/;"	l
f0107c87	obj/kern/kernel.asm	/^f0107c87:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107c8a	obj/kern/kernel.asm	/^f0107c8a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107c8d	obj/kern/kernel.asm	/^f0107c8d:	68 00 00 01 00       	push   $0x10000$/;"	l
f0107c92	obj/kern/kernel.asm	/^f0107c92:	68 d8 00 00 00       	push   $0xd8$/;"	l
f0107c97	obj/kern/kernel.asm	/^f0107c97:	e8 24 ff ff ff       	call   f0107bc0 <lapicw>$/;"	l
f0107c9c	obj/kern/kernel.asm	/^f0107c9c:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107c9f	obj/kern/kernel.asm	/^f0107c9f:	a1 04 20 27 f0       	mov    0xf0272004,%eax$/;"	l
f0107ca4	obj/kern/kernel.asm	/^f0107ca4:	83 c0 30             	add    $0x30,%eax$/;"	l
f0107ca7	obj/kern/kernel.asm	/^f0107ca7:	8b 00                	mov    (%eax),%eax$/;"	l
f0107ca9	obj/kern/kernel.asm	/^f0107ca9:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0107cac	obj/kern/kernel.asm	/^f0107cac:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0107caf	obj/kern/kernel.asm	/^f0107caf:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0107cb2	obj/kern/kernel.asm	/^f0107cb2:	76 15                	jbe    f0107cc9 <lapic_init+0xe7>$/;"	l
f0107cb4	obj/kern/kernel.asm	/^f0107cb4:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107cb7	obj/kern/kernel.asm	/^f0107cb7:	68 00 00 01 00       	push   $0x10000$/;"	l
f0107cbc	obj/kern/kernel.asm	/^f0107cbc:	68 d0 00 00 00       	push   $0xd0$/;"	l
f0107cc1	obj/kern/kernel.asm	/^f0107cc1:	e8 fa fe ff ff       	call   f0107bc0 <lapicw>$/;"	l
f0107cc6	obj/kern/kernel.asm	/^f0107cc6:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107cc9	obj/kern/kernel.asm	/^f0107cc9:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107ccc	obj/kern/kernel.asm	/^f0107ccc:	6a 33                	push   $0x33$/;"	l
f0107cce	obj/kern/kernel.asm	/^f0107cce:	68 dc 00 00 00       	push   $0xdc$/;"	l
f0107cd3	obj/kern/kernel.asm	/^f0107cd3:	e8 e8 fe ff ff       	call   f0107bc0 <lapicw>$/;"	l
f0107cd8	obj/kern/kernel.asm	/^f0107cd8:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107cdb	obj/kern/kernel.asm	/^f0107cdb:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107cde	obj/kern/kernel.asm	/^f0107cde:	6a 00                	push   $0x0$/;"	l
f0107ce0	obj/kern/kernel.asm	/^f0107ce0:	68 a0 00 00 00       	push   $0xa0$/;"	l
f0107ce5	obj/kern/kernel.asm	/^f0107ce5:	e8 d6 fe ff ff       	call   f0107bc0 <lapicw>$/;"	l
f0107cea	obj/kern/kernel.asm	/^f0107cea:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107ced	obj/kern/kernel.asm	/^f0107ced:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107cf0	obj/kern/kernel.asm	/^f0107cf0:	6a 00                	push   $0x0$/;"	l
f0107cf2	obj/kern/kernel.asm	/^f0107cf2:	68 a0 00 00 00       	push   $0xa0$/;"	l
f0107cf7	obj/kern/kernel.asm	/^f0107cf7:	e8 c4 fe ff ff       	call   f0107bc0 <lapicw>$/;"	l
f0107cfc	obj/kern/kernel.asm	/^f0107cfc:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107cff	obj/kern/kernel.asm	/^f0107cff:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107d02	obj/kern/kernel.asm	/^f0107d02:	6a 00                	push   $0x0$/;"	l
f0107d04	obj/kern/kernel.asm	/^f0107d04:	6a 2c                	push   $0x2c$/;"	l
f0107d06	obj/kern/kernel.asm	/^f0107d06:	e8 b5 fe ff ff       	call   f0107bc0 <lapicw>$/;"	l
f0107d0b	obj/kern/kernel.asm	/^f0107d0b:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107d0e	obj/kern/kernel.asm	/^f0107d0e:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107d11	obj/kern/kernel.asm	/^f0107d11:	6a 00                	push   $0x0$/;"	l
f0107d13	obj/kern/kernel.asm	/^f0107d13:	68 c4 00 00 00       	push   $0xc4$/;"	l
f0107d18	obj/kern/kernel.asm	/^f0107d18:	e8 a3 fe ff ff       	call   f0107bc0 <lapicw>$/;"	l
f0107d1d	obj/kern/kernel.asm	/^f0107d1d:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107d20	obj/kern/kernel.asm	/^f0107d20:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107d23	obj/kern/kernel.asm	/^f0107d23:	68 00 85 08 00       	push   $0x88500$/;"	l
f0107d28	obj/kern/kernel.asm	/^f0107d28:	68 c0 00 00 00       	push   $0xc0$/;"	l
f0107d2d	obj/kern/kernel.asm	/^f0107d2d:	e8 8e fe ff ff       	call   f0107bc0 <lapicw>$/;"	l
f0107d32	obj/kern/kernel.asm	/^f0107d32:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107d35	obj/kern/kernel.asm	/^f0107d35:	90                   	nop$/;"	l
f0107d36	obj/kern/kernel.asm	/^f0107d36:	a1 04 20 27 f0       	mov    0xf0272004,%eax$/;"	l
f0107d3b	obj/kern/kernel.asm	/^f0107d3b:	05 00 03 00 00       	add    $0x300,%eax$/;"	l
f0107d40	obj/kern/kernel.asm	/^f0107d40:	8b 00                	mov    (%eax),%eax$/;"	l
f0107d42	obj/kern/kernel.asm	/^f0107d42:	25 00 10 00 00       	and    $0x1000,%eax$/;"	l
f0107d47	obj/kern/kernel.asm	/^f0107d47:	85 c0                	test   %eax,%eax$/;"	l
f0107d49	obj/kern/kernel.asm	/^f0107d49:	75 eb                	jne    f0107d36 <lapic_init+0x154>$/;"	l
f0107d4b	obj/kern/kernel.asm	/^f0107d4b:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107d4e	obj/kern/kernel.asm	/^f0107d4e:	6a 00                	push   $0x0$/;"	l
f0107d50	obj/kern/kernel.asm	/^f0107d50:	6a 20                	push   $0x20$/;"	l
f0107d52	obj/kern/kernel.asm	/^f0107d52:	e8 69 fe ff ff       	call   f0107bc0 <lapicw>$/;"	l
f0107d57	obj/kern/kernel.asm	/^f0107d57:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107d5a	obj/kern/kernel.asm	/^f0107d5a:	eb 01                	jmp    f0107d5d <lapic_init+0x17b>$/;"	l
f0107d5c	obj/kern/kernel.asm	/^f0107d5c:	90                   	nop$/;"	l
f0107d5d	obj/kern/kernel.asm	/^f0107d5d:	c9                   	leave  $/;"	l
f0107d5e	obj/kern/kernel.asm	/^f0107d5e:	c3                   	ret    $/;"	l
f0107d5f	obj/kern/kernel.asm	/^f0107d5f <cpunum>:$/;"	l
f0107d5f	obj/kern/kernel.asm	/^f0107d5f:	55                   	push   %ebp$/;"	l
f0107d60	obj/kern/kernel.asm	/^f0107d60:	89 e5                	mov    %esp,%ebp$/;"	l
f0107d62	obj/kern/kernel.asm	/^f0107d62:	a1 04 20 27 f0       	mov    0xf0272004,%eax$/;"	l
f0107d67	obj/kern/kernel.asm	/^f0107d67:	85 c0                	test   %eax,%eax$/;"	l
f0107d69	obj/kern/kernel.asm	/^f0107d69:	74 0f                	je     f0107d7a <cpunum+0x1b>$/;"	l
f0107d6b	obj/kern/kernel.asm	/^f0107d6b:	a1 04 20 27 f0       	mov    0xf0272004,%eax$/;"	l
f0107d70	obj/kern/kernel.asm	/^f0107d70:	83 c0 20             	add    $0x20,%eax$/;"	l
f0107d73	obj/kern/kernel.asm	/^f0107d73:	8b 00                	mov    (%eax),%eax$/;"	l
f0107d75	obj/kern/kernel.asm	/^f0107d75:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0107d78	obj/kern/kernel.asm	/^f0107d78:	eb 05                	jmp    f0107d7f <cpunum+0x20>$/;"	l
f0107d7a	obj/kern/kernel.asm	/^f0107d7a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107d7f	obj/kern/kernel.asm	/^f0107d7f:	5d                   	pop    %ebp$/;"	l
f0107d80	obj/kern/kernel.asm	/^f0107d80:	c3                   	ret    $/;"	l
f0107d81	obj/kern/kernel.asm	/^f0107d81 <lapic_eoi>:$/;"	l
f0107d81	obj/kern/kernel.asm	/^f0107d81:	55                   	push   %ebp$/;"	l
f0107d82	obj/kern/kernel.asm	/^f0107d82:	89 e5                	mov    %esp,%ebp$/;"	l
f0107d84	obj/kern/kernel.asm	/^f0107d84:	a1 04 20 27 f0       	mov    0xf0272004,%eax$/;"	l
f0107d89	obj/kern/kernel.asm	/^f0107d89:	85 c0                	test   %eax,%eax$/;"	l
f0107d8b	obj/kern/kernel.asm	/^f0107d8b:	74 0c                	je     f0107d99 <lapic_eoi+0x18>$/;"	l
f0107d8d	obj/kern/kernel.asm	/^f0107d8d:	6a 00                	push   $0x0$/;"	l
f0107d8f	obj/kern/kernel.asm	/^f0107d8f:	6a 2c                	push   $0x2c$/;"	l
f0107d91	obj/kern/kernel.asm	/^f0107d91:	e8 2a fe ff ff       	call   f0107bc0 <lapicw>$/;"	l
f0107d96	obj/kern/kernel.asm	/^f0107d96:	83 c4 08             	add    $0x8,%esp$/;"	l
f0107d99	obj/kern/kernel.asm	/^f0107d99:	90                   	nop$/;"	l
f0107d9a	obj/kern/kernel.asm	/^f0107d9a:	c9                   	leave  $/;"	l
f0107d9b	obj/kern/kernel.asm	/^f0107d9b:	c3                   	ret    $/;"	l
f0107d9c	obj/kern/kernel.asm	/^f0107d9c <microdelay>:$/;"	l
f0107d9c	obj/kern/kernel.asm	/^f0107d9c:	55                   	push   %ebp$/;"	l
f0107d9d	obj/kern/kernel.asm	/^f0107d9d:	89 e5                	mov    %esp,%ebp$/;"	l
f0107d9f	obj/kern/kernel.asm	/^f0107d9f:	90                   	nop$/;"	l
f0107da0	obj/kern/kernel.asm	/^f0107da0:	5d                   	pop    %ebp$/;"	l
f0107da1	obj/kern/kernel.asm	/^f0107da1:	c3                   	ret    $/;"	l
f0107da2	obj/kern/kernel.asm	/^f0107da2 <lapic_startap>:$/;"	l
f0107da2	obj/kern/kernel.asm	/^f0107da2:	55                   	push   %ebp$/;"	l
f0107da3	obj/kern/kernel.asm	/^f0107da3:	89 e5                	mov    %esp,%ebp$/;"	l
f0107da5	obj/kern/kernel.asm	/^f0107da5:	83 ec 28             	sub    $0x28,%esp$/;"	l
f0107da8	obj/kern/kernel.asm	/^f0107da8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107dab	obj/kern/kernel.asm	/^f0107dab:	88 45 e4             	mov    %al,-0x1c(%ebp)$/;"	l
f0107dae	obj/kern/kernel.asm	/^f0107dae:	6a 0f                	push   $0xf$/;"	l
f0107db0	obj/kern/kernel.asm	/^f0107db0:	6a 70                	push   $0x70$/;"	l
f0107db2	obj/kern/kernel.asm	/^f0107db2:	e8 be fd ff ff       	call   f0107b75 <outb>$/;"	l
f0107db7	obj/kern/kernel.asm	/^f0107db7:	83 c4 08             	add    $0x8,%esp$/;"	l
f0107dba	obj/kern/kernel.asm	/^f0107dba:	6a 0a                	push   $0xa$/;"	l
f0107dbc	obj/kern/kernel.asm	/^f0107dbc:	6a 71                	push   $0x71$/;"	l
f0107dbe	obj/kern/kernel.asm	/^f0107dbe:	e8 b2 fd ff ff       	call   f0107b75 <outb>$/;"	l
f0107dc3	obj/kern/kernel.asm	/^f0107dc3:	83 c4 08             	add    $0x8,%esp$/;"	l
f0107dc6	obj/kern/kernel.asm	/^f0107dc6:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0107dc9	obj/kern/kernel.asm	/^f0107dc9:	68 67 04 00 00       	push   $0x467$/;"	l
f0107dce	obj/kern/kernel.asm	/^f0107dce:	68 98 00 00 00       	push   $0x98$/;"	l
f0107dd3	obj/kern/kernel.asm	/^f0107dd3:	68 03 a2 10 f0       	push   $0xf010a203$/;"	l
f0107dd8	obj/kern/kernel.asm	/^f0107dd8:	e8 af fd ff ff       	call   f0107b8c <_kaddr>$/;"	l
f0107ddd	obj/kern/kernel.asm	/^f0107ddd:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107de0	obj/kern/kernel.asm	/^f0107de0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
f0107de3	obj/kern/kernel.asm	/^f0107de3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0107de6	obj/kern/kernel.asm	/^f0107de6:	66 c7 00 00 00       	movw   $0x0,(%eax)$/;"	l
f0107deb	obj/kern/kernel.asm	/^f0107deb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
f0107dee	obj/kern/kernel.asm	/^f0107dee:	83 c0 02             	add    $0x2,%eax$/;"	l
f0107df1	obj/kern/kernel.asm	/^f0107df1:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0107df4	obj/kern/kernel.asm	/^f0107df4:	c1 ea 04             	shr    $0x4,%edx$/;"	l
f0107df7	obj/kern/kernel.asm	/^f0107df7:	66 89 10             	mov    %dx,(%eax)$/;"	l
f0107dfa	obj/kern/kernel.asm	/^f0107dfa:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax$/;"	l
f0107dfe	obj/kern/kernel.asm	/^f0107dfe:	c1 e0 18             	shl    $0x18,%eax$/;"	l
f0107e01	obj/kern/kernel.asm	/^f0107e01:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107e04	obj/kern/kernel.asm	/^f0107e04:	50                   	push   %eax$/;"	l
f0107e05	obj/kern/kernel.asm	/^f0107e05:	68 c4 00 00 00       	push   $0xc4$/;"	l
f0107e0a	obj/kern/kernel.asm	/^f0107e0a:	e8 b1 fd ff ff       	call   f0107bc0 <lapicw>$/;"	l
f0107e0f	obj/kern/kernel.asm	/^f0107e0f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107e12	obj/kern/kernel.asm	/^f0107e12:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107e15	obj/kern/kernel.asm	/^f0107e15:	68 00 c5 00 00       	push   $0xc500$/;"	l
f0107e1a	obj/kern/kernel.asm	/^f0107e1a:	68 c0 00 00 00       	push   $0xc0$/;"	l
f0107e1f	obj/kern/kernel.asm	/^f0107e1f:	e8 9c fd ff ff       	call   f0107bc0 <lapicw>$/;"	l
f0107e24	obj/kern/kernel.asm	/^f0107e24:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107e27	obj/kern/kernel.asm	/^f0107e27:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0107e2a	obj/kern/kernel.asm	/^f0107e2a:	68 c8 00 00 00       	push   $0xc8$/;"	l
f0107e2f	obj/kern/kernel.asm	/^f0107e2f:	e8 68 ff ff ff       	call   f0107d9c <microdelay>$/;"	l
f0107e34	obj/kern/kernel.asm	/^f0107e34:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107e37	obj/kern/kernel.asm	/^f0107e37:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107e3a	obj/kern/kernel.asm	/^f0107e3a:	68 00 85 00 00       	push   $0x8500$/;"	l
f0107e3f	obj/kern/kernel.asm	/^f0107e3f:	68 c0 00 00 00       	push   $0xc0$/;"	l
f0107e44	obj/kern/kernel.asm	/^f0107e44:	e8 77 fd ff ff       	call   f0107bc0 <lapicw>$/;"	l
f0107e49	obj/kern/kernel.asm	/^f0107e49:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107e4c	obj/kern/kernel.asm	/^f0107e4c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0107e4f	obj/kern/kernel.asm	/^f0107e4f:	6a 64                	push   $0x64$/;"	l
f0107e51	obj/kern/kernel.asm	/^f0107e51:	e8 46 ff ff ff       	call   f0107d9c <microdelay>$/;"	l
f0107e56	obj/kern/kernel.asm	/^f0107e56:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107e59	obj/kern/kernel.asm	/^f0107e59:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
f0107e60	obj/kern/kernel.asm	/^f0107e60:	eb 46                	jmp    f0107ea8 <lapic_startap+0x106>$/;"	l
f0107e62	obj/kern/kernel.asm	/^f0107e62:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax$/;"	l
f0107e66	obj/kern/kernel.asm	/^f0107e66:	c1 e0 18             	shl    $0x18,%eax$/;"	l
f0107e69	obj/kern/kernel.asm	/^f0107e69:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107e6c	obj/kern/kernel.asm	/^f0107e6c:	50                   	push   %eax$/;"	l
f0107e6d	obj/kern/kernel.asm	/^f0107e6d:	68 c4 00 00 00       	push   $0xc4$/;"	l
f0107e72	obj/kern/kernel.asm	/^f0107e72:	e8 49 fd ff ff       	call   f0107bc0 <lapicw>$/;"	l
f0107e77	obj/kern/kernel.asm	/^f0107e77:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107e7a	obj/kern/kernel.asm	/^f0107e7a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107e7d	obj/kern/kernel.asm	/^f0107e7d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f0107e80	obj/kern/kernel.asm	/^f0107e80:	80 cc 06             	or     $0x6,%ah$/;"	l
f0107e83	obj/kern/kernel.asm	/^f0107e83:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0107e86	obj/kern/kernel.asm	/^f0107e86:	50                   	push   %eax$/;"	l
f0107e87	obj/kern/kernel.asm	/^f0107e87:	68 c0 00 00 00       	push   $0xc0$/;"	l
f0107e8c	obj/kern/kernel.asm	/^f0107e8c:	e8 2f fd ff ff       	call   f0107bc0 <lapicw>$/;"	l
f0107e91	obj/kern/kernel.asm	/^f0107e91:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107e94	obj/kern/kernel.asm	/^f0107e94:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0107e97	obj/kern/kernel.asm	/^f0107e97:	68 c8 00 00 00       	push   $0xc8$/;"	l
f0107e9c	obj/kern/kernel.asm	/^f0107e9c:	e8 fb fe ff ff       	call   f0107d9c <microdelay>$/;"	l
f0107ea1	obj/kern/kernel.asm	/^f0107ea1:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107ea4	obj/kern/kernel.asm	/^f0107ea4:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
f0107ea8	obj/kern/kernel.asm	/^f0107ea8:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)$/;"	l
f0107eac	obj/kern/kernel.asm	/^f0107eac:	7e b4                	jle    f0107e62 <lapic_startap+0xc0>$/;"	l
f0107eae	obj/kern/kernel.asm	/^f0107eae:	90                   	nop$/;"	l
f0107eaf	obj/kern/kernel.asm	/^f0107eaf:	c9                   	leave  $/;"	l
f0107eb0	obj/kern/kernel.asm	/^f0107eb0:	c3                   	ret    $/;"	l
f0107eb1	obj/kern/kernel.asm	/^f0107eb1 <lapic_ipi>:$/;"	l
f0107eb1	obj/kern/kernel.asm	/^f0107eb1:	55                   	push   %ebp$/;"	l
f0107eb2	obj/kern/kernel.asm	/^f0107eb2:	89 e5                	mov    %esp,%ebp$/;"	l
f0107eb4	obj/kern/kernel.asm	/^f0107eb4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107eb7	obj/kern/kernel.asm	/^f0107eb7:	0d 00 00 0c 00       	or     $0xc0000,%eax$/;"	l
f0107ebc	obj/kern/kernel.asm	/^f0107ebc:	50                   	push   %eax$/;"	l
f0107ebd	obj/kern/kernel.asm	/^f0107ebd:	68 c0 00 00 00       	push   $0xc0$/;"	l
f0107ec2	obj/kern/kernel.asm	/^f0107ec2:	e8 f9 fc ff ff       	call   f0107bc0 <lapicw>$/;"	l
f0107ec7	obj/kern/kernel.asm	/^f0107ec7:	83 c4 08             	add    $0x8,%esp$/;"	l
f0107eca	obj/kern/kernel.asm	/^f0107eca:	90                   	nop$/;"	l
f0107ecb	obj/kern/kernel.asm	/^f0107ecb:	a1 04 20 27 f0       	mov    0xf0272004,%eax$/;"	l
f0107ed0	obj/kern/kernel.asm	/^f0107ed0:	05 00 03 00 00       	add    $0x300,%eax$/;"	l
f0107ed5	obj/kern/kernel.asm	/^f0107ed5:	8b 00                	mov    (%eax),%eax$/;"	l
f0107ed7	obj/kern/kernel.asm	/^f0107ed7:	25 00 10 00 00       	and    $0x1000,%eax$/;"	l
f0107edc	obj/kern/kernel.asm	/^f0107edc:	85 c0                	test   %eax,%eax$/;"	l
f0107ede	obj/kern/kernel.asm	/^f0107ede:	75 eb                	jne    f0107ecb <lapic_ipi+0x1a>$/;"	l
f0107ee0	obj/kern/kernel.asm	/^f0107ee0:	90                   	nop$/;"	l
f0107ee1	obj/kern/kernel.asm	/^f0107ee1:	c9                   	leave  $/;"	l
f0107ee2	obj/kern/kernel.asm	/^f0107ee2:	c3                   	ret    $/;"	l
f0107ee3	obj/kern/kernel.asm	/^f0107ee3 <read_ebp>:$/;"	l
f0107ee3	obj/kern/kernel.asm	/^f0107ee3:	55                   	push   %ebp$/;"	l
f0107ee4	obj/kern/kernel.asm	/^f0107ee4:	89 e5                	mov    %esp,%ebp$/;"	l
f0107ee6	obj/kern/kernel.asm	/^f0107ee6:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0107ee9	obj/kern/kernel.asm	/^f0107ee9:	89 e8                	mov    %ebp,%eax$/;"	l
f0107eeb	obj/kern/kernel.asm	/^f0107eeb:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f0107eee	obj/kern/kernel.asm	/^f0107eee:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0107ef1	obj/kern/kernel.asm	/^f0107ef1:	c9                   	leave  $/;"	l
f0107ef2	obj/kern/kernel.asm	/^f0107ef2:	c3                   	ret    $/;"	l
f0107ef3	obj/kern/kernel.asm	/^f0107ef3 <xchg>:$/;"	l
f0107ef3	obj/kern/kernel.asm	/^f0107ef3:	55                   	push   %ebp$/;"	l
f0107ef4	obj/kern/kernel.asm	/^f0107ef4:	89 e5                	mov    %esp,%ebp$/;"	l
f0107ef6	obj/kern/kernel.asm	/^f0107ef6:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0107ef9	obj/kern/kernel.asm	/^f0107ef9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
f0107efc	obj/kern/kernel.asm	/^f0107efc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
f0107eff	obj/kern/kernel.asm	/^f0107eff:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
f0107f02	obj/kern/kernel.asm	/^f0107f02:	f0 87 02             	lock xchg %eax,(%edx)$/;"	l
f0107f05	obj/kern/kernel.asm	/^f0107f05:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f0107f08	obj/kern/kernel.asm	/^f0107f08:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0107f0b	obj/kern/kernel.asm	/^f0107f0b:	c9                   	leave  $/;"	l
f0107f0c	obj/kern/kernel.asm	/^f0107f0c:	c3                   	ret    $/;"	l
f0107f0d	obj/kern/kernel.asm	/^f0107f0d <get_caller_pcs>:$/;"	l
f0107f0d	obj/kern/kernel.asm	/^f0107f0d:	55                   	push   %ebp$/;"	l
f0107f0e	obj/kern/kernel.asm	/^f0107f0e:	89 e5                	mov    %esp,%ebp$/;"	l
f0107f10	obj/kern/kernel.asm	/^f0107f10:	83 ec 10             	sub    $0x10,%esp$/;"	l
f0107f13	obj/kern/kernel.asm	/^f0107f13:	e8 cb ff ff ff       	call   f0107ee3 <read_ebp>$/;"	l
f0107f18	obj/kern/kernel.asm	/^f0107f18:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f0107f1b	obj/kern/kernel.asm	/^f0107f1b:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
f0107f22	obj/kern/kernel.asm	/^f0107f22:	eb 32                	jmp    f0107f56 <get_caller_pcs+0x49>$/;"	l
f0107f24	obj/kern/kernel.asm	/^f0107f24:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
f0107f28	obj/kern/kernel.asm	/^f0107f28:	74 4d                	je     f0107f77 <get_caller_pcs+0x6a>$/;"	l
f0107f2a	obj/kern/kernel.asm	/^f0107f2a:	81 7d fc ff ff 7f ef 	cmpl   $0xef7fffff,-0x4(%ebp)$/;"	l
f0107f31	obj/kern/kernel.asm	/^f0107f31:	76 44                	jbe    f0107f77 <get_caller_pcs+0x6a>$/;"	l
f0107f33	obj/kern/kernel.asm	/^f0107f33:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f0107f36	obj/kern/kernel.asm	/^f0107f36:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f0107f3d	obj/kern/kernel.asm	/^f0107f3d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107f40	obj/kern/kernel.asm	/^f0107f40:	01 c2                	add    %eax,%edx$/;"	l
f0107f42	obj/kern/kernel.asm	/^f0107f42:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0107f45	obj/kern/kernel.asm	/^f0107f45:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
f0107f48	obj/kern/kernel.asm	/^f0107f48:	89 02                	mov    %eax,(%edx)$/;"	l
f0107f4a	obj/kern/kernel.asm	/^f0107f4a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
f0107f4d	obj/kern/kernel.asm	/^f0107f4d:	8b 00                	mov    (%eax),%eax$/;"	l
f0107f4f	obj/kern/kernel.asm	/^f0107f4f:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
f0107f52	obj/kern/kernel.asm	/^f0107f52:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)$/;"	l
f0107f56	obj/kern/kernel.asm	/^f0107f56:	83 7d f8 09          	cmpl   $0x9,-0x8(%ebp)$/;"	l
f0107f5a	obj/kern/kernel.asm	/^f0107f5a:	7e c8                	jle    f0107f24 <get_caller_pcs+0x17>$/;"	l
f0107f5c	obj/kern/kernel.asm	/^f0107f5c:	eb 19                	jmp    f0107f77 <get_caller_pcs+0x6a>$/;"	l
f0107f5e	obj/kern/kernel.asm	/^f0107f5e:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
f0107f61	obj/kern/kernel.asm	/^f0107f61:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
f0107f68	obj/kern/kernel.asm	/^f0107f68:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107f6b	obj/kern/kernel.asm	/^f0107f6b:	01 d0                	add    %edx,%eax$/;"	l
f0107f6d	obj/kern/kernel.asm	/^f0107f6d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0107f73	obj/kern/kernel.asm	/^f0107f73:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)$/;"	l
f0107f77	obj/kern/kernel.asm	/^f0107f77:	83 7d f8 09          	cmpl   $0x9,-0x8(%ebp)$/;"	l
f0107f7b	obj/kern/kernel.asm	/^f0107f7b:	7e e1                	jle    f0107f5e <get_caller_pcs+0x51>$/;"	l
f0107f7d	obj/kern/kernel.asm	/^f0107f7d:	90                   	nop$/;"	l
f0107f7e	obj/kern/kernel.asm	/^f0107f7e:	c9                   	leave  $/;"	l
f0107f7f	obj/kern/kernel.asm	/^f0107f7f:	c3                   	ret    $/;"	l
f0107f80	obj/kern/kernel.asm	/^f0107f80 <holding>:$/;"	l
f0107f80	obj/kern/kernel.asm	/^f0107f80:	55                   	push   %ebp$/;"	l
f0107f81	obj/kern/kernel.asm	/^f0107f81:	89 e5                	mov    %esp,%ebp$/;"	l
f0107f83	obj/kern/kernel.asm	/^f0107f83:	53                   	push   %ebx$/;"	l
f0107f84	obj/kern/kernel.asm	/^f0107f84:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0107f87	obj/kern/kernel.asm	/^f0107f87:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107f8a	obj/kern/kernel.asm	/^f0107f8a:	8b 00                	mov    (%eax),%eax$/;"	l
f0107f8c	obj/kern/kernel.asm	/^f0107f8c:	85 c0                	test   %eax,%eax$/;"	l
f0107f8e	obj/kern/kernel.asm	/^f0107f8e:	74 1e                	je     f0107fae <holding+0x2e>$/;"	l
f0107f90	obj/kern/kernel.asm	/^f0107f90:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107f93	obj/kern/kernel.asm	/^f0107f93:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
f0107f96	obj/kern/kernel.asm	/^f0107f96:	e8 c4 fd ff ff       	call   f0107d5f <cpunum>$/;"	l
f0107f9b	obj/kern/kernel.asm	/^f0107f9b:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0107f9e	obj/kern/kernel.asm	/^f0107f9e:	05 20 10 23 f0       	add    $0xf0231020,%eax$/;"	l
f0107fa3	obj/kern/kernel.asm	/^f0107fa3:	39 c3                	cmp    %eax,%ebx$/;"	l
f0107fa5	obj/kern/kernel.asm	/^f0107fa5:	75 07                	jne    f0107fae <holding+0x2e>$/;"	l
f0107fa7	obj/kern/kernel.asm	/^f0107fa7:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0107fac	obj/kern/kernel.asm	/^f0107fac:	eb 05                	jmp    f0107fb3 <holding+0x33>$/;"	l
f0107fae	obj/kern/kernel.asm	/^f0107fae:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107fb3	obj/kern/kernel.asm	/^f0107fb3:	83 c4 04             	add    $0x4,%esp$/;"	l
f0107fb6	obj/kern/kernel.asm	/^f0107fb6:	5b                   	pop    %ebx$/;"	l
f0107fb7	obj/kern/kernel.asm	/^f0107fb7:	5d                   	pop    %ebp$/;"	l
f0107fb8	obj/kern/kernel.asm	/^f0107fb8:	c3                   	ret    $/;"	l
f0107fb9	obj/kern/kernel.asm	/^f0107fb9 <__spin_initlock>:$/;"	l
f0107fb9	obj/kern/kernel.asm	/^f0107fb9:	55                   	push   %ebp$/;"	l
f0107fba	obj/kern/kernel.asm	/^f0107fba:	89 e5                	mov    %esp,%ebp$/;"	l
f0107fbc	obj/kern/kernel.asm	/^f0107fbc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107fbf	obj/kern/kernel.asm	/^f0107fbf:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
f0107fc5	obj/kern/kernel.asm	/^f0107fc5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107fc8	obj/kern/kernel.asm	/^f0107fc8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
f0107fcb	obj/kern/kernel.asm	/^f0107fcb:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
f0107fce	obj/kern/kernel.asm	/^f0107fce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107fd1	obj/kern/kernel.asm	/^f0107fd1:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f0107fd8	obj/kern/kernel.asm	/^f0107fd8:	90                   	nop$/;"	l
f0107fd9	obj/kern/kernel.asm	/^f0107fd9:	5d                   	pop    %ebp$/;"	l
f0107fda	obj/kern/kernel.asm	/^f0107fda:	c3                   	ret    $/;"	l
f0107fdb	obj/kern/kernel.asm	/^f0107fdb <spin_lock>:$/;"	l
f0107fdb	obj/kern/kernel.asm	/^f0107fdb:	55                   	push   %ebp$/;"	l
f0107fdc	obj/kern/kernel.asm	/^f0107fdc:	89 e5                	mov    %esp,%ebp$/;"	l
f0107fde	obj/kern/kernel.asm	/^f0107fde:	53                   	push   %ebx$/;"	l
f0107fdf	obj/kern/kernel.asm	/^f0107fdf:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0107fe2	obj/kern/kernel.asm	/^f0107fe2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0107fe5	obj/kern/kernel.asm	/^f0107fe5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0107fe8	obj/kern/kernel.asm	/^f0107fe8:	e8 93 ff ff ff       	call   f0107f80 <holding>$/;"	l
f0107fed	obj/kern/kernel.asm	/^f0107fed:	83 c4 10             	add    $0x10,%esp$/;"	l
f0107ff0	obj/kern/kernel.asm	/^f0107ff0:	85 c0                	test   %eax,%eax$/;"	l
f0107ff2	obj/kern/kernel.asm	/^f0107ff2:	74 23                	je     f0108017 <spin_lock+0x3c>$/;"	l
f0107ff4	obj/kern/kernel.asm	/^f0107ff4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0107ff7	obj/kern/kernel.asm	/^f0107ff7:	8b 58 04             	mov    0x4(%eax),%ebx$/;"	l
f0107ffa	obj/kern/kernel.asm	/^f0107ffa:	e8 60 fd ff ff       	call   f0107d5f <cpunum>$/;"	l
f0107fff	obj/kern/kernel.asm	/^f0107fff:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0108002	obj/kern/kernel.asm	/^f0108002:	53                   	push   %ebx$/;"	l
f0108003	obj/kern/kernel.asm	/^f0108003:	50                   	push   %eax$/;"	l
f0108004	obj/kern/kernel.asm	/^f0108004:	68 1c a2 10 f0       	push   $0xf010a21c$/;"	l
f0108009	obj/kern/kernel.asm	/^f0108009:	6a 41                	push   $0x41$/;"	l
f010800b	obj/kern/kernel.asm	/^f010800b:	68 46 a2 10 f0       	push   $0xf010a246$/;"	l
f0108010	obj/kern/kernel.asm	/^f0108010:	e8 cb 82 ff ff       	call   f01002e0 <_panic>$/;"	l
f0108015	obj/kern/kernel.asm	/^f0108015:	f3 90                	pause  $/;"	l
f0108017	obj/kern/kernel.asm	/^f0108017:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010801a	obj/kern/kernel.asm	/^f010801a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010801d	obj/kern/kernel.asm	/^f010801d:	6a 01                	push   $0x1$/;"	l
f010801f	obj/kern/kernel.asm	/^f010801f:	50                   	push   %eax$/;"	l
f0108020	obj/kern/kernel.asm	/^f0108020:	e8 ce fe ff ff       	call   f0107ef3 <xchg>$/;"	l
f0108025	obj/kern/kernel.asm	/^f0108025:	83 c4 10             	add    $0x10,%esp$/;"	l
f0108028	obj/kern/kernel.asm	/^f0108028:	85 c0                	test   %eax,%eax$/;"	l
f010802a	obj/kern/kernel.asm	/^f010802a:	75 e9                	jne    f0108015 <spin_lock+0x3a>$/;"	l
f010802c	obj/kern/kernel.asm	/^f010802c:	e8 2e fd ff ff       	call   f0107d5f <cpunum>$/;"	l
f0108031	obj/kern/kernel.asm	/^f0108031:	6b c0 74             	imul   $0x74,%eax,%eax$/;"	l
f0108034	obj/kern/kernel.asm	/^f0108034:	8d 90 20 10 23 f0    	lea    -0xfdcefe0(%eax),%edx$/;"	l
f010803a	obj/kern/kernel.asm	/^f010803a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010803d	obj/kern/kernel.asm	/^f010803d:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
f0108040	obj/kern/kernel.asm	/^f0108040:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108043	obj/kern/kernel.asm	/^f0108043:	83 c0 0c             	add    $0xc,%eax$/;"	l
f0108046	obj/kern/kernel.asm	/^f0108046:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0108049	obj/kern/kernel.asm	/^f0108049:	50                   	push   %eax$/;"	l
f010804a	obj/kern/kernel.asm	/^f010804a:	e8 be fe ff ff       	call   f0107f0d <get_caller_pcs>$/;"	l
f010804f	obj/kern/kernel.asm	/^f010804f:	83 c4 10             	add    $0x10,%esp$/;"	l
f0108052	obj/kern/kernel.asm	/^f0108052:	90                   	nop$/;"	l
f0108053	obj/kern/kernel.asm	/^f0108053:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
f0108056	obj/kern/kernel.asm	/^f0108056:	c9                   	leave  $/;"	l
f0108057	obj/kern/kernel.asm	/^f0108057:	c3                   	ret    $/;"	l
f0108058	obj/kern/kernel.asm	/^f0108058 <spin_unlock>:$/;"	l
f0108058	obj/kern/kernel.asm	/^f0108058:	55                   	push   %ebp$/;"	l
f0108059	obj/kern/kernel.asm	/^f0108059:	89 e5                	mov    %esp,%ebp$/;"	l
f010805b	obj/kern/kernel.asm	/^f010805b:	57                   	push   %edi$/;"	l
f010805c	obj/kern/kernel.asm	/^f010805c:	56                   	push   %esi$/;"	l
f010805d	obj/kern/kernel.asm	/^f010805d:	53                   	push   %ebx$/;"	l
f010805e	obj/kern/kernel.asm	/^f010805e:	83 ec 5c             	sub    $0x5c,%esp$/;"	l
f0108061	obj/kern/kernel.asm	/^f0108061:	83 ec 0c             	sub    $0xc,%esp$/;"	l
f0108064	obj/kern/kernel.asm	/^f0108064:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
f0108067	obj/kern/kernel.asm	/^f0108067:	e8 14 ff ff ff       	call   f0107f80 <holding>$/;"	l
f010806c	obj/kern/kernel.asm	/^f010806c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010806f	obj/kern/kernel.asm	/^f010806f:	85 c0                	test   %eax,%eax$/;"	l
f0108071	obj/kern/kernel.asm	/^f0108071:	0f 85 e1 00 00 00    	jne    f0108158 <spin_unlock+0x100>$/;"	l
f0108077	obj/kern/kernel.asm	/^f0108077:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010807a	obj/kern/kernel.asm	/^f010807a:	83 c0 0c             	add    $0xc,%eax$/;"	l
f010807d	obj/kern/kernel.asm	/^f010807d:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0108080	obj/kern/kernel.asm	/^f0108080:	6a 28                	push   $0x28$/;"	l
f0108082	obj/kern/kernel.asm	/^f0108082:	50                   	push   %eax$/;"	l
f0108083	obj/kern/kernel.asm	/^f0108083:	8d 45 a4             	lea    -0x5c(%ebp),%eax$/;"	l
f0108086	obj/kern/kernel.asm	/^f0108086:	50                   	push   %eax$/;"	l
f0108087	obj/kern/kernel.asm	/^f0108087:	e8 71 f2 ff ff       	call   f01072fd <memmove>$/;"	l
f010808c	obj/kern/kernel.asm	/^f010808c:	83 c4 10             	add    $0x10,%esp$/;"	l
f010808f	obj/kern/kernel.asm	/^f010808f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108092	obj/kern/kernel.asm	/^f0108092:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
f0108095	obj/kern/kernel.asm	/^f0108095:	0f b6 00             	movzbl (%eax),%eax$/;"	l
f0108098	obj/kern/kernel.asm	/^f0108098:	0f b6 f0             	movzbl %al,%esi$/;"	l
f010809b	obj/kern/kernel.asm	/^f010809b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010809e	obj/kern/kernel.asm	/^f010809e:	8b 58 04             	mov    0x4(%eax),%ebx$/;"	l
f01080a1	obj/kern/kernel.asm	/^f01080a1:	e8 b9 fc ff ff       	call   f0107d5f <cpunum>$/;"	l
f01080a6	obj/kern/kernel.asm	/^f01080a6:	56                   	push   %esi$/;"	l
f01080a7	obj/kern/kernel.asm	/^f01080a7:	53                   	push   %ebx$/;"	l
f01080a8	obj/kern/kernel.asm	/^f01080a8:	50                   	push   %eax$/;"	l
f01080a9	obj/kern/kernel.asm	/^f01080a9:	68 58 a2 10 f0       	push   $0xf010a258$/;"	l
f01080ae	obj/kern/kernel.asm	/^f01080ae:	e8 fb c8 ff ff       	call   f01049ae <cprintf>$/;"	l
f01080b3	obj/kern/kernel.asm	/^f01080b3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01080b6	obj/kern/kernel.asm	/^f01080b6:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
f01080bd	obj/kern/kernel.asm	/^f01080bd:	eb 70                	jmp    f010812f <spin_unlock+0xd7>$/;"	l
f01080bf	obj/kern/kernel.asm	/^f01080bf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01080c2	obj/kern/kernel.asm	/^f01080c2:	8b 44 85 a4          	mov    -0x5c(%ebp,%eax,4),%eax$/;"	l
f01080c6	obj/kern/kernel.asm	/^f01080c6:	83 ec 08             	sub    $0x8,%esp$/;"	l
f01080c9	obj/kern/kernel.asm	/^f01080c9:	8d 55 cc             	lea    -0x34(%ebp),%edx$/;"	l
f01080cc	obj/kern/kernel.asm	/^f01080cc:	52                   	push   %edx$/;"	l
f01080cd	obj/kern/kernel.asm	/^f01080cd:	50                   	push   %eax$/;"	l
f01080ce	obj/kern/kernel.asm	/^f01080ce:	e8 a7 e4 ff ff       	call   f010657a <debuginfo_eip>$/;"	l
f01080d3	obj/kern/kernel.asm	/^f01080d3:	83 c4 10             	add    $0x10,%esp$/;"	l
f01080d6	obj/kern/kernel.asm	/^f01080d6:	85 c0                	test   %eax,%eax$/;"	l
f01080d8	obj/kern/kernel.asm	/^f01080d8:	78 39                	js     f0108113 <spin_unlock+0xbb>$/;"	l
f01080da	obj/kern/kernel.asm	/^f01080da:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01080dd	obj/kern/kernel.asm	/^f01080dd:	8b 54 85 a4          	mov    -0x5c(%ebp,%eax,4),%edx$/;"	l
f01080e1	obj/kern/kernel.asm	/^f01080e1:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
f01080e4	obj/kern/kernel.asm	/^f01080e4:	89 d7                	mov    %edx,%edi$/;"	l
f01080e6	obj/kern/kernel.asm	/^f01080e6:	29 c7                	sub    %eax,%edi$/;"	l
f01080e8	obj/kern/kernel.asm	/^f01080e8:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
f01080eb	obj/kern/kernel.asm	/^f01080eb:	8b 5d d8             	mov    -0x28(%ebp),%ebx$/;"	l
f01080ee	obj/kern/kernel.asm	/^f01080ee:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
f01080f1	obj/kern/kernel.asm	/^f01080f1:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
f01080f4	obj/kern/kernel.asm	/^f01080f4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f01080f7	obj/kern/kernel.asm	/^f01080f7:	8b 44 85 a4          	mov    -0x5c(%ebp,%eax,4),%eax$/;"	l
f01080fb	obj/kern/kernel.asm	/^f01080fb:	83 ec 04             	sub    $0x4,%esp$/;"	l
f01080fe	obj/kern/kernel.asm	/^f01080fe:	57                   	push   %edi$/;"	l
f01080ff	obj/kern/kernel.asm	/^f01080ff:	56                   	push   %esi$/;"	l
f0108100	obj/kern/kernel.asm	/^f0108100:	53                   	push   %ebx$/;"	l
f0108101	obj/kern/kernel.asm	/^f0108101:	51                   	push   %ecx$/;"	l
f0108102	obj/kern/kernel.asm	/^f0108102:	52                   	push   %edx$/;"	l
f0108103	obj/kern/kernel.asm	/^f0108103:	50                   	push   %eax$/;"	l
f0108104	obj/kern/kernel.asm	/^f0108104:	68 8e a2 10 f0       	push   $0xf010a28e$/;"	l
f0108109	obj/kern/kernel.asm	/^f0108109:	e8 a0 c8 ff ff       	call   f01049ae <cprintf>$/;"	l
f010810e	obj/kern/kernel.asm	/^f010810e:	83 c4 20             	add    $0x20,%esp$/;"	l
f0108111	obj/kern/kernel.asm	/^f0108111:	eb 18                	jmp    f010812b <spin_unlock+0xd3>$/;"	l
f0108113	obj/kern/kernel.asm	/^f0108113:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0108116	obj/kern/kernel.asm	/^f0108116:	8b 44 85 a4          	mov    -0x5c(%ebp,%eax,4),%eax$/;"	l
f010811a	obj/kern/kernel.asm	/^f010811a:	83 ec 08             	sub    $0x8,%esp$/;"	l
f010811d	obj/kern/kernel.asm	/^f010811d:	50                   	push   %eax$/;"	l
f010811e	obj/kern/kernel.asm	/^f010811e:	68 a5 a2 10 f0       	push   $0xf010a2a5$/;"	l
f0108123	obj/kern/kernel.asm	/^f0108123:	e8 86 c8 ff ff       	call   f01049ae <cprintf>$/;"	l
f0108128	obj/kern/kernel.asm	/^f0108128:	83 c4 10             	add    $0x10,%esp$/;"	l
f010812b	obj/kern/kernel.asm	/^f010812b:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)$/;"	l
f010812f	obj/kern/kernel.asm	/^f010812f:	83 7d e4 09          	cmpl   $0x9,-0x1c(%ebp)$/;"	l
f0108133	obj/kern/kernel.asm	/^f0108133:	7f 0f                	jg     f0108144 <spin_unlock+0xec>$/;"	l
f0108135	obj/kern/kernel.asm	/^f0108135:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
f0108138	obj/kern/kernel.asm	/^f0108138:	8b 44 85 a4          	mov    -0x5c(%ebp,%eax,4),%eax$/;"	l
f010813c	obj/kern/kernel.asm	/^f010813c:	85 c0                	test   %eax,%eax$/;"	l
f010813e	obj/kern/kernel.asm	/^f010813e:	0f 85 7b ff ff ff    	jne    f01080bf <spin_unlock+0x67>$/;"	l
f0108144	obj/kern/kernel.asm	/^f0108144:	83 ec 04             	sub    $0x4,%esp$/;"	l
f0108147	obj/kern/kernel.asm	/^f0108147:	68 ad a2 10 f0       	push   $0xf010a2ad$/;"	l
f010814c	obj/kern/kernel.asm	/^f010814c:	6a 67                	push   $0x67$/;"	l
f010814e	obj/kern/kernel.asm	/^f010814e:	68 46 a2 10 f0       	push   $0xf010a246$/;"	l
f0108153	obj/kern/kernel.asm	/^f0108153:	e8 88 81 ff ff       	call   f01002e0 <_panic>$/;"	l
f0108158	obj/kern/kernel.asm	/^f0108158:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010815b	obj/kern/kernel.asm	/^f010815b:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
f0108162	obj/kern/kernel.asm	/^f0108162:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f0108165	obj/kern/kernel.asm	/^f0108165:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
f010816c	obj/kern/kernel.asm	/^f010816c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
f010816f	obj/kern/kernel.asm	/^f010816f:	83 ec 08             	sub    $0x8,%esp$/;"	l
f0108172	obj/kern/kernel.asm	/^f0108172:	6a 00                	push   $0x0$/;"	l
f0108174	obj/kern/kernel.asm	/^f0108174:	50                   	push   %eax$/;"	l
f0108175	obj/kern/kernel.asm	/^f0108175:	e8 79 fd ff ff       	call   f0107ef3 <xchg>$/;"	l
f010817a	obj/kern/kernel.asm	/^f010817a:	83 c4 10             	add    $0x10,%esp$/;"	l
f010817d	obj/kern/kernel.asm	/^f010817d:	90                   	nop$/;"	l
f010817e	obj/kern/kernel.asm	/^f010817e:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
f0108181	obj/kern/kernel.asm	/^f0108181:	5b                   	pop    %ebx$/;"	l
f0108182	obj/kern/kernel.asm	/^f0108182:	5e                   	pop    %esi$/;"	l
f0108183	obj/kern/kernel.asm	/^f0108183:	5f                   	pop    %edi$/;"	l
f0108184	obj/kern/kernel.asm	/^f0108184:	5d                   	pop    %ebp$/;"	l
f0108185	obj/kern/kernel.asm	/^f0108185:	c3                   	ret    $/;"	l
f0108186	obj/kern/kernel.asm	/^f0108186:	66 90                	xchg   %ax,%ax$/;"	l
f0108188	obj/kern/kernel.asm	/^f0108188:	66 90                	xchg   %ax,%ax$/;"	l
f010818a	obj/kern/kernel.asm	/^f010818a:	66 90                	xchg   %ax,%ax$/;"	l
f010818c	obj/kern/kernel.asm	/^f010818c:	66 90                	xchg   %ax,%ax$/;"	l
f010818e	obj/kern/kernel.asm	/^f010818e:	66 90                	xchg   %ax,%ax$/;"	l
f0108190	obj/kern/kernel.asm	/^f0108190 <__udivdi3>:$/;"	l
f0108190	obj/kern/kernel.asm	/^f0108190:	55                   	push   %ebp$/;"	l
f0108191	obj/kern/kernel.asm	/^f0108191:	57                   	push   %edi$/;"	l
f0108192	obj/kern/kernel.asm	/^f0108192:	56                   	push   %esi$/;"	l
f0108193	obj/kern/kernel.asm	/^f0108193:	53                   	push   %ebx$/;"	l
f0108194	obj/kern/kernel.asm	/^f0108194:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f0108197	obj/kern/kernel.asm	/^f0108197:	8b 74 24 3c          	mov    0x3c(%esp),%esi$/;"	l
f010819b	obj/kern/kernel.asm	/^f010819b:	8b 5c 24 30          	mov    0x30(%esp),%ebx$/;"	l
f010819f	obj/kern/kernel.asm	/^f010819f:	8b 4c 24 34          	mov    0x34(%esp),%ecx$/;"	l
f01081a3	obj/kern/kernel.asm	/^f01081a3:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f01081a7	obj/kern/kernel.asm	/^f01081a7:	85 f6                	test   %esi,%esi$/;"	l
f01081a9	obj/kern/kernel.asm	/^f01081a9:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01081ad	obj/kern/kernel.asm	/^f01081ad:	89 ca                	mov    %ecx,%edx$/;"	l
f01081af	obj/kern/kernel.asm	/^f01081af:	89 f8                	mov    %edi,%eax$/;"	l
f01081b1	obj/kern/kernel.asm	/^f01081b1:	75 3d                	jne    f01081f0 <__udivdi3+0x60>$/;"	l
f01081b3	obj/kern/kernel.asm	/^f01081b3:	39 cf                	cmp    %ecx,%edi$/;"	l
f01081b5	obj/kern/kernel.asm	/^f01081b5:	0f 87 c5 00 00 00    	ja     f0108280 <__udivdi3+0xf0>$/;"	l
f01081bb	obj/kern/kernel.asm	/^f01081bb:	85 ff                	test   %edi,%edi$/;"	l
f01081bd	obj/kern/kernel.asm	/^f01081bd:	89 fd                	mov    %edi,%ebp$/;"	l
f01081bf	obj/kern/kernel.asm	/^f01081bf:	75 0b                	jne    f01081cc <__udivdi3+0x3c>$/;"	l
f01081c1	obj/kern/kernel.asm	/^f01081c1:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01081c6	obj/kern/kernel.asm	/^f01081c6:	31 d2                	xor    %edx,%edx$/;"	l
f01081c8	obj/kern/kernel.asm	/^f01081c8:	f7 f7                	div    %edi$/;"	l
f01081ca	obj/kern/kernel.asm	/^f01081ca:	89 c5                	mov    %eax,%ebp$/;"	l
f01081cc	obj/kern/kernel.asm	/^f01081cc:	89 c8                	mov    %ecx,%eax$/;"	l
f01081ce	obj/kern/kernel.asm	/^f01081ce:	31 d2                	xor    %edx,%edx$/;"	l
f01081d0	obj/kern/kernel.asm	/^f01081d0:	f7 f5                	div    %ebp$/;"	l
f01081d2	obj/kern/kernel.asm	/^f01081d2:	89 c1                	mov    %eax,%ecx$/;"	l
f01081d4	obj/kern/kernel.asm	/^f01081d4:	89 d8                	mov    %ebx,%eax$/;"	l
f01081d6	obj/kern/kernel.asm	/^f01081d6:	89 cf                	mov    %ecx,%edi$/;"	l
f01081d8	obj/kern/kernel.asm	/^f01081d8:	f7 f5                	div    %ebp$/;"	l
f01081da	obj/kern/kernel.asm	/^f01081da:	89 c3                	mov    %eax,%ebx$/;"	l
f01081dc	obj/kern/kernel.asm	/^f01081dc:	89 d8                	mov    %ebx,%eax$/;"	l
f01081de	obj/kern/kernel.asm	/^f01081de:	89 fa                	mov    %edi,%edx$/;"	l
f01081e0	obj/kern/kernel.asm	/^f01081e0:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01081e3	obj/kern/kernel.asm	/^f01081e3:	5b                   	pop    %ebx$/;"	l
f01081e4	obj/kern/kernel.asm	/^f01081e4:	5e                   	pop    %esi$/;"	l
f01081e5	obj/kern/kernel.asm	/^f01081e5:	5f                   	pop    %edi$/;"	l
f01081e6	obj/kern/kernel.asm	/^f01081e6:	5d                   	pop    %ebp$/;"	l
f01081e7	obj/kern/kernel.asm	/^f01081e7:	c3                   	ret    $/;"	l
f01081e8	obj/kern/kernel.asm	/^f01081e8:	90                   	nop$/;"	l
f01081e9	obj/kern/kernel.asm	/^f01081e9:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f01081f0	obj/kern/kernel.asm	/^f01081f0:	39 ce                	cmp    %ecx,%esi$/;"	l
f01081f2	obj/kern/kernel.asm	/^f01081f2:	77 74                	ja     f0108268 <__udivdi3+0xd8>$/;"	l
f01081f4	obj/kern/kernel.asm	/^f01081f4:	0f bd fe             	bsr    %esi,%edi$/;"	l
f01081f7	obj/kern/kernel.asm	/^f01081f7:	83 f7 1f             	xor    $0x1f,%edi$/;"	l
f01081fa	obj/kern/kernel.asm	/^f01081fa:	0f 84 98 00 00 00    	je     f0108298 <__udivdi3+0x108>$/;"	l
f0108200	obj/kern/kernel.asm	/^f0108200:	bb 20 00 00 00       	mov    $0x20,%ebx$/;"	l
f0108205	obj/kern/kernel.asm	/^f0108205:	89 f9                	mov    %edi,%ecx$/;"	l
f0108207	obj/kern/kernel.asm	/^f0108207:	89 c5                	mov    %eax,%ebp$/;"	l
f0108209	obj/kern/kernel.asm	/^f0108209:	29 fb                	sub    %edi,%ebx$/;"	l
f010820b	obj/kern/kernel.asm	/^f010820b:	d3 e6                	shl    %cl,%esi$/;"	d
f010820d	obj/kern/kernel.asm	/^f010820d:	89 d9                	mov    %ebx,%ecx$/;"	l
f010820f	obj/kern/kernel.asm	/^f010820f:	d3 ed                	shr    %cl,%ebp$/;"	d
f0108211	obj/kern/kernel.asm	/^f0108211:	89 f9                	mov    %edi,%ecx$/;"	l
f0108213	obj/kern/kernel.asm	/^f0108213:	d3 e0                	shl    %cl,%eax$/;"	d
f0108215	obj/kern/kernel.asm	/^f0108215:	09 ee                	or     %ebp,%esi$/;"	l
f0108217	obj/kern/kernel.asm	/^f0108217:	89 d9                	mov    %ebx,%ecx$/;"	l
f0108219	obj/kern/kernel.asm	/^f0108219:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
f010821d	obj/kern/kernel.asm	/^f010821d:	89 d5                	mov    %edx,%ebp$/;"	l
f010821f	obj/kern/kernel.asm	/^f010821f:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f0108223	obj/kern/kernel.asm	/^f0108223:	d3 ed                	shr    %cl,%ebp$/;"	d
f0108225	obj/kern/kernel.asm	/^f0108225:	89 f9                	mov    %edi,%ecx$/;"	l
f0108227	obj/kern/kernel.asm	/^f0108227:	d3 e2                	shl    %cl,%edx$/;"	d
f0108229	obj/kern/kernel.asm	/^f0108229:	89 d9                	mov    %ebx,%ecx$/;"	l
f010822b	obj/kern/kernel.asm	/^f010822b:	d3 e8                	shr    %cl,%eax$/;"	d
f010822d	obj/kern/kernel.asm	/^f010822d:	09 c2                	or     %eax,%edx$/;"	l
f010822f	obj/kern/kernel.asm	/^f010822f:	89 d0                	mov    %edx,%eax$/;"	l
f0108231	obj/kern/kernel.asm	/^f0108231:	89 ea                	mov    %ebp,%edx$/;"	l
f0108233	obj/kern/kernel.asm	/^f0108233:	f7 f6                	div    %esi$/;"	l
f0108235	obj/kern/kernel.asm	/^f0108235:	89 d5                	mov    %edx,%ebp$/;"	l
f0108237	obj/kern/kernel.asm	/^f0108237:	89 c3                	mov    %eax,%ebx$/;"	l
f0108239	obj/kern/kernel.asm	/^f0108239:	f7 64 24 0c          	mull   0xc(%esp)$/;"	l
f010823d	obj/kern/kernel.asm	/^f010823d:	39 d5                	cmp    %edx,%ebp$/;"	l
f010823f	obj/kern/kernel.asm	/^f010823f:	72 10                	jb     f0108251 <__udivdi3+0xc1>$/;"	l
f0108241	obj/kern/kernel.asm	/^f0108241:	8b 74 24 08          	mov    0x8(%esp),%esi$/;"	l
f0108245	obj/kern/kernel.asm	/^f0108245:	89 f9                	mov    %edi,%ecx$/;"	l
f0108247	obj/kern/kernel.asm	/^f0108247:	d3 e6                	shl    %cl,%esi$/;"	d
f0108249	obj/kern/kernel.asm	/^f0108249:	39 c6                	cmp    %eax,%esi$/;"	l
f010824b	obj/kern/kernel.asm	/^f010824b:	73 07                	jae    f0108254 <__udivdi3+0xc4>$/;"	l
f010824d	obj/kern/kernel.asm	/^f010824d:	39 d5                	cmp    %edx,%ebp$/;"	l
f010824f	obj/kern/kernel.asm	/^f010824f:	75 03                	jne    f0108254 <__udivdi3+0xc4>$/;"	l
f0108251	obj/kern/kernel.asm	/^f0108251:	83 eb 01             	sub    $0x1,%ebx$/;"	l
f0108254	obj/kern/kernel.asm	/^f0108254:	31 ff                	xor    %edi,%edi$/;"	l
f0108256	obj/kern/kernel.asm	/^f0108256:	89 d8                	mov    %ebx,%eax$/;"	l
f0108258	obj/kern/kernel.asm	/^f0108258:	89 fa                	mov    %edi,%edx$/;"	l
f010825a	obj/kern/kernel.asm	/^f010825a:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010825d	obj/kern/kernel.asm	/^f010825d:	5b                   	pop    %ebx$/;"	l
f010825e	obj/kern/kernel.asm	/^f010825e:	5e                   	pop    %esi$/;"	l
f010825f	obj/kern/kernel.asm	/^f010825f:	5f                   	pop    %edi$/;"	l
f0108260	obj/kern/kernel.asm	/^f0108260:	5d                   	pop    %ebp$/;"	l
f0108261	obj/kern/kernel.asm	/^f0108261:	c3                   	ret    $/;"	l
f0108262	obj/kern/kernel.asm	/^f0108262:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0108268	obj/kern/kernel.asm	/^f0108268:	31 ff                	xor    %edi,%edi$/;"	l
f010826a	obj/kern/kernel.asm	/^f010826a:	31 db                	xor    %ebx,%ebx$/;"	l
f010826c	obj/kern/kernel.asm	/^f010826c:	89 d8                	mov    %ebx,%eax$/;"	l
f010826e	obj/kern/kernel.asm	/^f010826e:	89 fa                	mov    %edi,%edx$/;"	l
f0108270	obj/kern/kernel.asm	/^f0108270:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0108273	obj/kern/kernel.asm	/^f0108273:	5b                   	pop    %ebx$/;"	l
f0108274	obj/kern/kernel.asm	/^f0108274:	5e                   	pop    %esi$/;"	l
f0108275	obj/kern/kernel.asm	/^f0108275:	5f                   	pop    %edi$/;"	l
f0108276	obj/kern/kernel.asm	/^f0108276:	5d                   	pop    %ebp$/;"	l
f0108277	obj/kern/kernel.asm	/^f0108277:	c3                   	ret    $/;"	l
f0108278	obj/kern/kernel.asm	/^f0108278:	90                   	nop$/;"	l
f0108279	obj/kern/kernel.asm	/^f0108279:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0108280	obj/kern/kernel.asm	/^f0108280:	89 d8                	mov    %ebx,%eax$/;"	l
f0108282	obj/kern/kernel.asm	/^f0108282:	f7 f7                	div    %edi$/;"	l
f0108284	obj/kern/kernel.asm	/^f0108284:	31 ff                	xor    %edi,%edi$/;"	l
f0108286	obj/kern/kernel.asm	/^f0108286:	89 c3                	mov    %eax,%ebx$/;"	l
f0108288	obj/kern/kernel.asm	/^f0108288:	89 d8                	mov    %ebx,%eax$/;"	l
f010828a	obj/kern/kernel.asm	/^f010828a:	89 fa                	mov    %edi,%edx$/;"	l
f010828c	obj/kern/kernel.asm	/^f010828c:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f010828f	obj/kern/kernel.asm	/^f010828f:	5b                   	pop    %ebx$/;"	l
f0108290	obj/kern/kernel.asm	/^f0108290:	5e                   	pop    %esi$/;"	l
f0108291	obj/kern/kernel.asm	/^f0108291:	5f                   	pop    %edi$/;"	l
f0108292	obj/kern/kernel.asm	/^f0108292:	5d                   	pop    %ebp$/;"	l
f0108293	obj/kern/kernel.asm	/^f0108293:	c3                   	ret    $/;"	l
f0108294	obj/kern/kernel.asm	/^f0108294:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0108298	obj/kern/kernel.asm	/^f0108298:	39 ce                	cmp    %ecx,%esi$/;"	l
f010829a	obj/kern/kernel.asm	/^f010829a:	72 0c                	jb     f01082a8 <__udivdi3+0x118>$/;"	l
f010829c	obj/kern/kernel.asm	/^f010829c:	31 db                	xor    %ebx,%ebx$/;"	l
f010829e	obj/kern/kernel.asm	/^f010829e:	3b 44 24 08          	cmp    0x8(%esp),%eax$/;"	l
f01082a2	obj/kern/kernel.asm	/^f01082a2:	0f 87 34 ff ff ff    	ja     f01081dc <__udivdi3+0x4c>$/;"	l
f01082a8	obj/kern/kernel.asm	/^f01082a8:	bb 01 00 00 00       	mov    $0x1,%ebx$/;"	l
f01082ad	obj/kern/kernel.asm	/^f01082ad:	e9 2a ff ff ff       	jmp    f01081dc <__udivdi3+0x4c>$/;"	l
f01082b2	obj/kern/kernel.asm	/^f01082b2:	66 90                	xchg   %ax,%ax$/;"	l
f01082b4	obj/kern/kernel.asm	/^f01082b4:	66 90                	xchg   %ax,%ax$/;"	l
f01082b6	obj/kern/kernel.asm	/^f01082b6:	66 90                	xchg   %ax,%ax$/;"	l
f01082b8	obj/kern/kernel.asm	/^f01082b8:	66 90                	xchg   %ax,%ax$/;"	l
f01082ba	obj/kern/kernel.asm	/^f01082ba:	66 90                	xchg   %ax,%ax$/;"	l
f01082bc	obj/kern/kernel.asm	/^f01082bc:	66 90                	xchg   %ax,%ax$/;"	l
f01082be	obj/kern/kernel.asm	/^f01082be:	66 90                	xchg   %ax,%ax$/;"	l
f01082c0	obj/kern/kernel.asm	/^f01082c0 <__umoddi3>:$/;"	l
f01082c0	obj/kern/kernel.asm	/^f01082c0:	55                   	push   %ebp$/;"	l
f01082c1	obj/kern/kernel.asm	/^f01082c1:	57                   	push   %edi$/;"	l
f01082c2	obj/kern/kernel.asm	/^f01082c2:	56                   	push   %esi$/;"	l
f01082c3	obj/kern/kernel.asm	/^f01082c3:	53                   	push   %ebx$/;"	l
f01082c4	obj/kern/kernel.asm	/^f01082c4:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
f01082c7	obj/kern/kernel.asm	/^f01082c7:	8b 54 24 3c          	mov    0x3c(%esp),%edx$/;"	l
f01082cb	obj/kern/kernel.asm	/^f01082cb:	8b 4c 24 30          	mov    0x30(%esp),%ecx$/;"	l
f01082cf	obj/kern/kernel.asm	/^f01082cf:	8b 74 24 34          	mov    0x34(%esp),%esi$/;"	l
f01082d3	obj/kern/kernel.asm	/^f01082d3:	8b 7c 24 38          	mov    0x38(%esp),%edi$/;"	l
f01082d7	obj/kern/kernel.asm	/^f01082d7:	85 d2                	test   %edx,%edx$/;"	l
f01082d9	obj/kern/kernel.asm	/^f01082d9:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
f01082dd	obj/kern/kernel.asm	/^f01082dd:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f01082e1	obj/kern/kernel.asm	/^f01082e1:	89 f3                	mov    %esi,%ebx$/;"	l
f01082e3	obj/kern/kernel.asm	/^f01082e3:	89 3c 24             	mov    %edi,(%esp)$/;"	l
f01082e6	obj/kern/kernel.asm	/^f01082e6:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f01082ea	obj/kern/kernel.asm	/^f01082ea:	75 1c                	jne    f0108308 <__umoddi3+0x48>$/;"	l
f01082ec	obj/kern/kernel.asm	/^f01082ec:	39 f7                	cmp    %esi,%edi$/;"	l
f01082ee	obj/kern/kernel.asm	/^f01082ee:	76 50                	jbe    f0108340 <__umoddi3+0x80>$/;"	l
f01082f0	obj/kern/kernel.asm	/^f01082f0:	89 c8                	mov    %ecx,%eax$/;"	l
f01082f2	obj/kern/kernel.asm	/^f01082f2:	89 f2                	mov    %esi,%edx$/;"	l
f01082f4	obj/kern/kernel.asm	/^f01082f4:	f7 f7                	div    %edi$/;"	l
f01082f6	obj/kern/kernel.asm	/^f01082f6:	89 d0                	mov    %edx,%eax$/;"	l
f01082f8	obj/kern/kernel.asm	/^f01082f8:	31 d2                	xor    %edx,%edx$/;"	l
f01082fa	obj/kern/kernel.asm	/^f01082fa:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01082fd	obj/kern/kernel.asm	/^f01082fd:	5b                   	pop    %ebx$/;"	l
f01082fe	obj/kern/kernel.asm	/^f01082fe:	5e                   	pop    %esi$/;"	l
f01082ff	obj/kern/kernel.asm	/^f01082ff:	5f                   	pop    %edi$/;"	l
f0108300	obj/kern/kernel.asm	/^f0108300:	5d                   	pop    %ebp$/;"	l
f0108301	obj/kern/kernel.asm	/^f0108301:	c3                   	ret    $/;"	l
f0108302	obj/kern/kernel.asm	/^f0108302:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi$/;"	l
f0108308	obj/kern/kernel.asm	/^f0108308:	39 f2                	cmp    %esi,%edx$/;"	l
f010830a	obj/kern/kernel.asm	/^f010830a:	89 d0                	mov    %edx,%eax$/;"	l
f010830c	obj/kern/kernel.asm	/^f010830c:	77 52                	ja     f0108360 <__umoddi3+0xa0>$/;"	l
f010830e	obj/kern/kernel.asm	/^f010830e:	0f bd ea             	bsr    %edx,%ebp$/;"	l
f0108311	obj/kern/kernel.asm	/^f0108311:	83 f5 1f             	xor    $0x1f,%ebp$/;"	l
f0108314	obj/kern/kernel.asm	/^f0108314:	75 5a                	jne    f0108370 <__umoddi3+0xb0>$/;"	l
f0108316	obj/kern/kernel.asm	/^f0108316:	3b 54 24 04          	cmp    0x4(%esp),%edx$/;"	l
f010831a	obj/kern/kernel.asm	/^f010831a:	0f 82 e0 00 00 00    	jb     f0108400 <__umoddi3+0x140>$/;"	l
f0108320	obj/kern/kernel.asm	/^f0108320:	39 0c 24             	cmp    %ecx,(%esp)$/;"	l
f0108323	obj/kern/kernel.asm	/^f0108323:	0f 86 d7 00 00 00    	jbe    f0108400 <__umoddi3+0x140>$/;"	l
f0108329	obj/kern/kernel.asm	/^f0108329:	8b 44 24 08          	mov    0x8(%esp),%eax$/;"	l
f010832d	obj/kern/kernel.asm	/^f010832d:	8b 54 24 04          	mov    0x4(%esp),%edx$/;"	l
f0108331	obj/kern/kernel.asm	/^f0108331:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0108334	obj/kern/kernel.asm	/^f0108334:	5b                   	pop    %ebx$/;"	l
f0108335	obj/kern/kernel.asm	/^f0108335:	5e                   	pop    %esi$/;"	l
f0108336	obj/kern/kernel.asm	/^f0108336:	5f                   	pop    %edi$/;"	l
f0108337	obj/kern/kernel.asm	/^f0108337:	5d                   	pop    %ebp$/;"	l
f0108338	obj/kern/kernel.asm	/^f0108338:	c3                   	ret    $/;"	l
f0108339	obj/kern/kernel.asm	/^f0108339:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0108340	obj/kern/kernel.asm	/^f0108340:	85 ff                	test   %edi,%edi$/;"	l
f0108342	obj/kern/kernel.asm	/^f0108342:	89 fd                	mov    %edi,%ebp$/;"	l
f0108344	obj/kern/kernel.asm	/^f0108344:	75 0b                	jne    f0108351 <__umoddi3+0x91>$/;"	l
f0108346	obj/kern/kernel.asm	/^f0108346:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010834b	obj/kern/kernel.asm	/^f010834b:	31 d2                	xor    %edx,%edx$/;"	l
f010834d	obj/kern/kernel.asm	/^f010834d:	f7 f7                	div    %edi$/;"	l
f010834f	obj/kern/kernel.asm	/^f010834f:	89 c5                	mov    %eax,%ebp$/;"	l
f0108351	obj/kern/kernel.asm	/^f0108351:	89 f0                	mov    %esi,%eax$/;"	l
f0108353	obj/kern/kernel.asm	/^f0108353:	31 d2                	xor    %edx,%edx$/;"	l
f0108355	obj/kern/kernel.asm	/^f0108355:	f7 f5                	div    %ebp$/;"	l
f0108357	obj/kern/kernel.asm	/^f0108357:	89 c8                	mov    %ecx,%eax$/;"	l
f0108359	obj/kern/kernel.asm	/^f0108359:	f7 f5                	div    %ebp$/;"	l
f010835b	obj/kern/kernel.asm	/^f010835b:	89 d0                	mov    %edx,%eax$/;"	l
f010835d	obj/kern/kernel.asm	/^f010835d:	eb 99                	jmp    f01082f8 <__umoddi3+0x38>$/;"	l
f010835f	obj/kern/kernel.asm	/^f010835f:	90                   	nop$/;"	l
f0108360	obj/kern/kernel.asm	/^f0108360:	89 c8                	mov    %ecx,%eax$/;"	l
f0108362	obj/kern/kernel.asm	/^f0108362:	89 f2                	mov    %esi,%edx$/;"	l
f0108364	obj/kern/kernel.asm	/^f0108364:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f0108367	obj/kern/kernel.asm	/^f0108367:	5b                   	pop    %ebx$/;"	l
f0108368	obj/kern/kernel.asm	/^f0108368:	5e                   	pop    %esi$/;"	l
f0108369	obj/kern/kernel.asm	/^f0108369:	5f                   	pop    %edi$/;"	l
f010836a	obj/kern/kernel.asm	/^f010836a:	5d                   	pop    %ebp$/;"	l
f010836b	obj/kern/kernel.asm	/^f010836b:	c3                   	ret    $/;"	l
f010836c	obj/kern/kernel.asm	/^f010836c:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi$/;"	l
f0108370	obj/kern/kernel.asm	/^f0108370:	8b 34 24             	mov    (%esp),%esi$/;"	l
f0108373	obj/kern/kernel.asm	/^f0108373:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f0108378	obj/kern/kernel.asm	/^f0108378:	89 e9                	mov    %ebp,%ecx$/;"	l
f010837a	obj/kern/kernel.asm	/^f010837a:	29 ef                	sub    %ebp,%edi$/;"	l
f010837c	obj/kern/kernel.asm	/^f010837c:	d3 e0                	shl    %cl,%eax$/;"	d
f010837e	obj/kern/kernel.asm	/^f010837e:	89 f9                	mov    %edi,%ecx$/;"	l
f0108380	obj/kern/kernel.asm	/^f0108380:	89 f2                	mov    %esi,%edx$/;"	l
f0108382	obj/kern/kernel.asm	/^f0108382:	d3 ea                	shr    %cl,%edx$/;"	d
f0108384	obj/kern/kernel.asm	/^f0108384:	89 e9                	mov    %ebp,%ecx$/;"	l
f0108386	obj/kern/kernel.asm	/^f0108386:	09 c2                	or     %eax,%edx$/;"	l
f0108388	obj/kern/kernel.asm	/^f0108388:	89 d8                	mov    %ebx,%eax$/;"	l
f010838a	obj/kern/kernel.asm	/^f010838a:	89 14 24             	mov    %edx,(%esp)$/;"	l
f010838d	obj/kern/kernel.asm	/^f010838d:	89 f2                	mov    %esi,%edx$/;"	l
f010838f	obj/kern/kernel.asm	/^f010838f:	d3 e2                	shl    %cl,%edx$/;"	d
f0108391	obj/kern/kernel.asm	/^f0108391:	89 f9                	mov    %edi,%ecx$/;"	l
f0108393	obj/kern/kernel.asm	/^f0108393:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
f0108397	obj/kern/kernel.asm	/^f0108397:	8b 54 24 0c          	mov    0xc(%esp),%edx$/;"	l
f010839b	obj/kern/kernel.asm	/^f010839b:	d3 e8                	shr    %cl,%eax$/;"	d
f010839d	obj/kern/kernel.asm	/^f010839d:	89 e9                	mov    %ebp,%ecx$/;"	l
f010839f	obj/kern/kernel.asm	/^f010839f:	89 c6                	mov    %eax,%esi$/;"	l
f01083a1	obj/kern/kernel.asm	/^f01083a1:	d3 e3                	shl    %cl,%ebx$/;"	d
f01083a3	obj/kern/kernel.asm	/^f01083a3:	89 f9                	mov    %edi,%ecx$/;"	l
f01083a5	obj/kern/kernel.asm	/^f01083a5:	89 d0                	mov    %edx,%eax$/;"	l
f01083a7	obj/kern/kernel.asm	/^f01083a7:	d3 e8                	shr    %cl,%eax$/;"	d
f01083a9	obj/kern/kernel.asm	/^f01083a9:	89 e9                	mov    %ebp,%ecx$/;"	l
f01083ab	obj/kern/kernel.asm	/^f01083ab:	09 d8                	or     %ebx,%eax$/;"	l
f01083ad	obj/kern/kernel.asm	/^f01083ad:	89 d3                	mov    %edx,%ebx$/;"	l
f01083af	obj/kern/kernel.asm	/^f01083af:	89 f2                	mov    %esi,%edx$/;"	l
f01083b1	obj/kern/kernel.asm	/^f01083b1:	f7 34 24             	divl   (%esp)$/;"	l
f01083b4	obj/kern/kernel.asm	/^f01083b4:	89 d6                	mov    %edx,%esi$/;"	l
f01083b6	obj/kern/kernel.asm	/^f01083b6:	d3 e3                	shl    %cl,%ebx$/;"	d
f01083b8	obj/kern/kernel.asm	/^f01083b8:	f7 64 24 04          	mull   0x4(%esp)$/;"	l
f01083bc	obj/kern/kernel.asm	/^f01083bc:	39 d6                	cmp    %edx,%esi$/;"	l
f01083be	obj/kern/kernel.asm	/^f01083be:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
f01083c2	obj/kern/kernel.asm	/^f01083c2:	89 d1                	mov    %edx,%ecx$/;"	l
f01083c4	obj/kern/kernel.asm	/^f01083c4:	89 c3                	mov    %eax,%ebx$/;"	l
f01083c6	obj/kern/kernel.asm	/^f01083c6:	72 08                	jb     f01083d0 <__umoddi3+0x110>$/;"	l
f01083c8	obj/kern/kernel.asm	/^f01083c8:	75 11                	jne    f01083db <__umoddi3+0x11b>$/;"	l
f01083ca	obj/kern/kernel.asm	/^f01083ca:	39 44 24 08          	cmp    %eax,0x8(%esp)$/;"	l
f01083ce	obj/kern/kernel.asm	/^f01083ce:	73 0b                	jae    f01083db <__umoddi3+0x11b>$/;"	l
f01083d0	obj/kern/kernel.asm	/^f01083d0:	2b 44 24 04          	sub    0x4(%esp),%eax$/;"	l
f01083d4	obj/kern/kernel.asm	/^f01083d4:	1b 14 24             	sbb    (%esp),%edx$/;"	l
f01083d7	obj/kern/kernel.asm	/^f01083d7:	89 d1                	mov    %edx,%ecx$/;"	l
f01083d9	obj/kern/kernel.asm	/^f01083d9:	89 c3                	mov    %eax,%ebx$/;"	l
f01083db	obj/kern/kernel.asm	/^f01083db:	8b 54 24 08          	mov    0x8(%esp),%edx$/;"	l
f01083df	obj/kern/kernel.asm	/^f01083df:	29 da                	sub    %ebx,%edx$/;"	l
f01083e1	obj/kern/kernel.asm	/^f01083e1:	19 ce                	sbb    %ecx,%esi$/;"	l
f01083e3	obj/kern/kernel.asm	/^f01083e3:	89 f9                	mov    %edi,%ecx$/;"	l
f01083e5	obj/kern/kernel.asm	/^f01083e5:	89 f0                	mov    %esi,%eax$/;"	l
f01083e7	obj/kern/kernel.asm	/^f01083e7:	d3 e0                	shl    %cl,%eax$/;"	d
f01083e9	obj/kern/kernel.asm	/^f01083e9:	89 e9                	mov    %ebp,%ecx$/;"	l
f01083eb	obj/kern/kernel.asm	/^f01083eb:	d3 ea                	shr    %cl,%edx$/;"	d
f01083ed	obj/kern/kernel.asm	/^f01083ed:	89 e9                	mov    %ebp,%ecx$/;"	l
f01083ef	obj/kern/kernel.asm	/^f01083ef:	d3 ee                	shr    %cl,%esi$/;"	d
f01083f1	obj/kern/kernel.asm	/^f01083f1:	09 d0                	or     %edx,%eax$/;"	l
f01083f3	obj/kern/kernel.asm	/^f01083f3:	89 f2                	mov    %esi,%edx$/;"	l
f01083f5	obj/kern/kernel.asm	/^f01083f5:	83 c4 1c             	add    $0x1c,%esp$/;"	l
f01083f8	obj/kern/kernel.asm	/^f01083f8:	5b                   	pop    %ebx$/;"	l
f01083f9	obj/kern/kernel.asm	/^f01083f9:	5e                   	pop    %esi$/;"	l
f01083fa	obj/kern/kernel.asm	/^f01083fa:	5f                   	pop    %edi$/;"	l
f01083fb	obj/kern/kernel.asm	/^f01083fb:	5d                   	pop    %ebp$/;"	l
f01083fc	obj/kern/kernel.asm	/^f01083fc:	c3                   	ret    $/;"	l
f01083fd	obj/kern/kernel.asm	/^f01083fd:	8d 76 00             	lea    0x0(%esi),%esi$/;"	l
f0108400	obj/kern/kernel.asm	/^f0108400:	29 f9                	sub    %edi,%ecx$/;"	l
f0108402	obj/kern/kernel.asm	/^f0108402:	19 d6                	sbb    %edx,%esi$/;"	l
f0108404	obj/kern/kernel.asm	/^f0108404:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
f0108408	obj/kern/kernel.asm	/^f0108408:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
f010840c	obj/kern/kernel.asm	/^f010840c:	e9 18 ff ff ff       	jmp    f0108329 <__umoddi3+0x69>$/;"	l
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon1
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
gd_args	inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_sel	inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1); \/\/ env_id在第13位上加一个1(这样的话16进制显示的时候会好看一点), 低10位清零 \/\/ env_id第一次使用应该是0啊。$/;"	d
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint32_t pcs[])$/;"	f	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/user/pingpongs.asm	/^	i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	kern/init.c	/^i386_init(void)$/;"	f
id	obj/user/fairness.asm	/^	id = sys_getenvid();$/;"	d
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {$/;"	v	typeref:struct:Pseudodesc
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
inb	inc/x86.h	/^inb(int port)$/;"	f
init_idx	obj/kern/kernel.asm	/^		init_idx = (ENVX(curenv->env_id)+1)%NENV;$/;"	d
init_idx	obj/kern/kernel.asm	/^		init_idx = 0;$/;"	d
inl	inc/x86.h	/^inl(int port)$/;"	f
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/kern/kernel.asm	/^int	user_mem_check(struct Env *env, const void *va, size_t len, int perm);$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/breakpoint.asm	/^int$/;"	l
int	obj/user/buggyhello.asm	/^int$/;"	l
int	obj/user/buggyhello2.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/dumbfork.asm	/^int$/;"	l
int	obj/user/evilhello.asm	/^int$/;"	l
int	obj/user/fairness.asm	/^int$/;"	l
int	obj/user/faultalloc.asm	/^int$/;"	l
int	obj/user/faultallocbad.asm	/^int$/;"	l
int	obj/user/faultbadhandler.asm	/^int$/;"	l
int	obj/user/faultdie.asm	/^int$/;"	l
int	obj/user/faultevilhandler.asm	/^int$/;"	l
int	obj/user/faultnostack.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/faultregs.asm	/^int$/;"	l
int	obj/user/faultwrite.asm	/^int$/;"	l
int	obj/user/faultwritekernel.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/pingpongs.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/sendpage.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/stresssched.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/kern/kernel.asm	/^int32_t$/;"	l
int32_t	obj/user/fairness.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpongs.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/sendpage.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
kern_pgdir	kern/pmap.c	/^pde_t *kern_pgdir;		\/\/ Kernel's initial page directory$/;"	v
kern_pgdir	obj/kern/kernel.asm	/^	kern_pgdir = (pde_t *) boot_alloc(PGSIZE);$/;"	d
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
kill	gradelib.py	/^    def kill(self):$/;"	f
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	physaddr_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
lcr0	inc/x86.h	/^lcr0(uint32_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint32_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint32_t val)$/;"	f
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/breakpoint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/buggyhello2.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/dumbfork.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/evilhello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/fairness.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultalloc.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultallocbad.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultbadhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultdie.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultevilhandler.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultnostack.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultregs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwrite.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/faultwritekernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpongs.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/sendpage.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/stresssched.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^		lflag = 0;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary)$/;"	f	file:
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
locked	kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/breakpoint.asm	/^long$/;"	l
long	obj/user/buggyhello.asm	/^long$/;"	l
long	obj/user/buggyhello2.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/dumbfork.asm	/^long$/;"	l
long	obj/user/evilhello.asm	/^long$/;"	l
long	obj/user/fairness.asm	/^long$/;"	l
long	obj/user/faultalloc.asm	/^long$/;"	l
long	obj/user/faultallocbad.asm	/^long$/;"	l
long	obj/user/faultbadhandler.asm	/^long$/;"	l
long	obj/user/faultdie.asm	/^long$/;"	l
long	obj/user/faultevilhandler.asm	/^long$/;"	l
long	obj/user/faultnostack.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/faultregs.asm	/^long$/;"	l
long	obj/user/faultwrite.asm	/^long$/;"	l
long	obj/user/faultwritekernel.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/pingpongs.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/sendpage.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/stresssched.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem_init	kern/pmap.c	/^mem_init(void)$/;"	f
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mismatch	obj/user/faultregs.asm	/^			mismatch = 1;					\\$/;"	d
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_chperm	kern/monitor.c	/^mon_chperm(int argc, char ** argv, struct Trapframe * tf)$/;"	f
mon_chperm_arg_error	obj/kern/kernel.asm	/^mon_chperm_arg_error:$/;"	l
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_showmappings	kern/monitor.c	/^mon_showmappings(int argc, char ** argv, struct Trapframe *tf)$/;"	f
mon_showmappings_arg_error	obj/kern/kernel.asm	/^mon_showmappings_arg_error:$/;"	l
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct PageInfo), PGSIZE);$/;"	d
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^	nextfree = ROUNDUP(nextfree+n, PGSIZE);$/;"	d
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^	npages = totalmem \/ (PGSIZE \/ 1024);$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = basemem \/ (PGSIZE \/ 1024);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/badsegment.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/badsegment.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/breakpoint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/breakpoint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/breakpoint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/buggyhello2.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/buggyhello2.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/divzero.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/divzero.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/dumbfork.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/dumbfork.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/dumbfork.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/evilhello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/evilhello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/evilhello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/fairness.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/fairness.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/fairness.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultalloc.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultalloc.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultalloc.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultallocbad.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultallocbad.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultbadhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultdie.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultdie.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultdie.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultevilhandler.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultnostack.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultnostack.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultnostack.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultread.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultread.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultregs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultregs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultregs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwrite.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwrite.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwrite.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/faultwritekernel.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpongs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpongs.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/pingpongs.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/sendpage.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/sendpage.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/sendpage.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/softint.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/softint.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/spin.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/spin.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/stresssched.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/stresssched.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/stresssched.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testbss.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testbss.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^			num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/yield.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/yield.asm	/^			num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^			num = getuint(&ap, lflag);$/;"	d
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/user/badsegment.asm	/^		number:$/;"	l
number	obj/user/breakpoint.asm	/^		number:$/;"	l
number	obj/user/buggyhello.asm	/^		number:$/;"	l
number	obj/user/buggyhello2.asm	/^		number:$/;"	l
number	obj/user/divzero.asm	/^		number:$/;"	l
number	obj/user/dumbfork.asm	/^		number:$/;"	l
number	obj/user/evilhello.asm	/^		number:$/;"	l
number	obj/user/fairness.asm	/^		number:$/;"	l
number	obj/user/faultalloc.asm	/^		number:$/;"	l
number	obj/user/faultallocbad.asm	/^		number:$/;"	l
number	obj/user/faultbadhandler.asm	/^		number:$/;"	l
number	obj/user/faultdie.asm	/^		number:$/;"	l
number	obj/user/faultevilhandler.asm	/^		number:$/;"	l
number	obj/user/faultnostack.asm	/^		number:$/;"	l
number	obj/user/faultread.asm	/^		number:$/;"	l
number	obj/user/faultreadkernel.asm	/^		number:$/;"	l
number	obj/user/faultregs.asm	/^		number:$/;"	l
number	obj/user/faultwrite.asm	/^		number:$/;"	l
number	obj/user/faultwritekernel.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/pingpongs.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/sendpage.asm	/^		number:$/;"	l
number	obj/user/softint.asm	/^		number:$/;"	l
number	obj/user/spin.asm	/^		number:$/;"	l
number	obj/user/stresssched.asm	/^		number:$/;"	l
number	obj/user/testbss.asm	/^		number:$/;"	l
number	obj/user/yield.asm	/^		number:$/;"	l
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	physaddr_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offset	obj/boot/boot.asm	/^	offset = (offset \/ SECTSIZE) + 1;$/;"	d
offsetof	inc/types.h	73;"	d
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/kern/kernel.asm	/^	p = (pte_t*) KADDR(PTE_ADDR(*pgdir));$/;"	d
p	obj/user/badsegment.asm	/^				p = "(null)";$/;"	d
p	obj/user/breakpoint.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/buggyhello2.asm	/^				p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^				p = "(null)";$/;"	d
p	obj/user/dumbfork.asm	/^				p = "(null)";$/;"	d
p	obj/user/evilhello.asm	/^				p = "(null)";$/;"	d
p	obj/user/fairness.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultalloc.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultallocbad.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultbadhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultdie.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultevilhandler.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultnostack.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultregs.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwrite.asm	/^				p = "(null)";$/;"	d
p	obj/user/faultwritekernel.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpongs.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/sendpage.asm	/^				p = "(null)";$/;"	d
p	obj/user/softint.asm	/^				p = "(null)";$/;"	d
p	obj/user/spin.asm	/^				p = "(null)";$/;"	d
p	obj/user/stresssched.asm	/^				p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^				p = "(null)";$/;"	d
p	obj/user/yield.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr
p_filesz	inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr
p_memsz	inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr
p_pa	inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(e->env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = PADDR(e->env_pgdir);$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^		padc = ' ';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^			padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^		padc = ' ';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '-';$/;"	d
padc	obj/user/breakpoint.asm	/^			padc = '0';$/;"	d
padc	obj/user/breakpoint.asm	/^		padc = ' ';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello.asm	/^		padc = ' ';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '-';$/;"	d
padc	obj/user/buggyhello2.asm	/^			padc = '0';$/;"	d
padc	obj/user/buggyhello2.asm	/^		padc = ' ';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^			padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^		padc = ' ';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '-';$/;"	d
padc	obj/user/dumbfork.asm	/^			padc = '0';$/;"	d
padc	obj/user/dumbfork.asm	/^		padc = ' ';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '-';$/;"	d
padc	obj/user/evilhello.asm	/^			padc = '0';$/;"	d
padc	obj/user/evilhello.asm	/^		padc = ' ';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '-';$/;"	d
padc	obj/user/fairness.asm	/^			padc = '0';$/;"	d
padc	obj/user/fairness.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultalloc.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultalloc.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultallocbad.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultallocbad.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultbadhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultbadhandler.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultdie.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultdie.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultevilhandler.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultevilhandler.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultnostack.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultnostack.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultregs.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultregs.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwrite.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwrite.asm	/^		padc = ' ';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '-';$/;"	d
padc	obj/user/faultwritekernel.asm	/^			padc = '0';$/;"	d
padc	obj/user/faultwritekernel.asm	/^		padc = ' ';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^		padc = ' ';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^		padc = ' ';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^		padc = ' ';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^		padc = ' ';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpongs.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpongs.asm	/^		padc = ' ';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^		padc = ' ';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '-';$/;"	d
padc	obj/user/sendpage.asm	/^			padc = '0';$/;"	d
padc	obj/user/sendpage.asm	/^		padc = ' ';$/;"	d
padc	obj/user/softint.asm	/^			padc = '-';$/;"	d
padc	obj/user/softint.asm	/^			padc = '0';$/;"	d
padc	obj/user/softint.asm	/^		padc = ' ';$/;"	d
padc	obj/user/spin.asm	/^			padc = '-';$/;"	d
padc	obj/user/spin.asm	/^			padc = '0';$/;"	d
padc	obj/user/spin.asm	/^		padc = ' ';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '-';$/;"	d
padc	obj/user/stresssched.asm	/^			padc = '0';$/;"	d
padc	obj/user/stresssched.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^			padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^		padc = ' ';$/;"	d
padc	obj/user/yield.asm	/^			padc = '-';$/;"	d
padc	obj/user/yield.asm	/^			padc = '0';$/;"	d
padc	obj/user/yield.asm	/^		padc = ' ';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_decref	kern/pmap.c	/^page_decref(struct PageInfo* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct PageInfo *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct PageInfo *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:PageInfo	file:
page_free_list	obj/kern/kernel.asm	/^			page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = NULL;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = page_free_list->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_insert	kern/pmap.c	/^page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pde_t *pgdir, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pde_t *pgdir, void *va)$/;"	f
pages	kern/pmap.c	/^struct PageInfo *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:PageInfo
pages	obj/kern/kernel.asm	/^	pages = (struct PageInfo *) boot_alloc(npages * sizeof(struct PageInfo));$/;"	d
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pcs	kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pd_base	inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde_t	inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
pgdir	obj/kern/kernel.asm	/^	pgdir = &pgdir[PDX(va)];$/;"	d
pgdir	obj/kern/kernel.asm	/^	pgdir = kern_pgdir;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
ph	obj/boot/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	physaddr_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mpconfig.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp1	obj/kern/kernel.asm	/^	pp1 = pp2 = 0;$/;"	d
pp_link	inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo
ppn_t	inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/badsegment.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^		precision = -1;$/;"	d
precision	obj/user/breakpoint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/breakpoint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/breakpoint.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/buggyhello2.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/buggyhello2.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/buggyhello2.asm	/^		precision = -1;$/;"	d
precision	obj/user/divzero.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^		precision = -1;$/;"	d
precision	obj/user/dumbfork.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/dumbfork.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/dumbfork.asm	/^		precision = -1;$/;"	d
precision	obj/user/evilhello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/evilhello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/evilhello.asm	/^		precision = -1;$/;"	d
precision	obj/user/fairness.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/fairness.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/fairness.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultalloc.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultalloc.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultalloc.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultallocbad.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultallocbad.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultallocbad.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultbadhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultbadhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultbadhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultdie.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultdie.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultdie.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultevilhandler.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultevilhandler.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultevilhandler.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultnostack.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultnostack.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultnostack.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultread.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultreadkernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultregs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultregs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultregs.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwrite.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwrite.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwrite.asm	/^		precision = -1;$/;"	d
precision	obj/user/faultwritekernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultwritekernel.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultwritekernel.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpongs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpongs.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/pingpongs.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/sendpage.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sendpage.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/sendpage.asm	/^		precision = -1;$/;"	d
precision	obj/user/softint.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^		precision = -1;$/;"	d
precision	obj/user/spin.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^		precision = -1;$/;"	d
precision	obj/user/stresssched.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/stresssched.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/stresssched.asm	/^		precision = -1;$/;"	d
precision	obj/user/testbss.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^		precision = -1;$/;"	d
precision	obj/user/yield.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^			precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^		precision = -1;$/;"	d
primeproc	user/primes.c	/^primeproc(void)$/;"	f
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^		process_precision:$/;"	l
process_precision	obj/user/breakpoint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/buggyhello2.asm	/^		process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^		process_precision:$/;"	l
process_precision	obj/user/dumbfork.asm	/^		process_precision:$/;"	l
process_precision	obj/user/evilhello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/fairness.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultalloc.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultallocbad.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultbadhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultdie.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultevilhandler.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultnostack.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultregs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwrite.asm	/^		process_precision:$/;"	l
process_precision	obj/user/faultwritekernel.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpongs.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/sendpage.asm	/^		process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^		process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^		process_precision:$/;"	l
process_precision	obj/user/stresssched.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^		process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^		process_precision:$/;"	l
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot/boot.asm	/^protcseg:$/;"	l
pt	obj/kern/kernel.asm	/^		pt = (pte_t*) KADDR(pa);$/;"	d
pte_t	inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = (pte_t *) page2kva(pp0);$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pgdir_walk(kern_pgdir, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = (pte_t *) KADDR(PTE_ADDR(kern_pgdir[PDX(va)]));$/;"	d
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/badsegment.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/breakpoint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/buggyhello2.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/divzero.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/dumbfork.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/evilhello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/fairness.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultalloc.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultallocbad.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultbadhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultdie.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultevilhandler.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultnostack.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultread.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultreadkernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultregs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwrite.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/faultwritekernel.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/pingpongs.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/sendpage.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/softint.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/spin.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/stresssched.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/testbss.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rc	obj/user/yield.asm	/^	rc = vsnprintf(buf, n, fmt, ap);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
read_ebp	inc/x86.h	/^read_ebp(void)$/;"	f
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_esp	inc/x86.h	/^read_esp(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
reg_eax	inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs
reg_ebp	inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs
reg_ebx	inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs
reg_ecx	inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs
reg_edi	inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs
reg_edx	inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs
reg_esi	inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs
reg_oesp	inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
result	obj/kern/kernel.asm	/^	result = nextfree; \/\/ no need to round, cuz this is not the first time$/;"	d
resume	obj/kern/kernel.asm	/^resume execution$/;"	l
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^	reswitch:$/;"	l
reswitch	obj/user/breakpoint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/buggyhello2.asm	/^	reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^	reswitch:$/;"	l
reswitch	obj/user/dumbfork.asm	/^	reswitch:$/;"	l
reswitch	obj/user/evilhello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/fairness.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultalloc.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultallocbad.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultbadhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultdie.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultevilhandler.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultnostack.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultregs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwrite.asm	/^	reswitch:$/;"	l
reswitch	obj/user/faultwritekernel.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpongs.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/sendpage.asm	/^	reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^	reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^	reswitch:$/;"	l
reswitch	obj/user/stresssched.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^	reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^	reswitch:$/;"	l
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/badsegment.asm	/^	ret = dst;$/;"	d
ret	obj/user/breakpoint.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/buggyhello2.asm	/^	ret = dst;$/;"	d
ret	obj/user/divzero.asm	/^	ret = dst;$/;"	d
ret	obj/user/dumbfork.asm	/^	ret = dst;$/;"	d
ret	obj/user/evilhello.asm	/^	ret = dst;$/;"	d
ret	obj/user/fairness.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultalloc.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultallocbad.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultbadhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultdie.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultevilhandler.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultnostack.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultread.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultreadkernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultregs.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwrite.asm	/^	ret = dst;$/;"	d
ret	obj/user/faultwritekernel.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpongs.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/sendpage.asm	/^	ret = dst;$/;"	d
ret	obj/user/softint.asm	/^	ret = dst;$/;"	d
ret	obj/user/spin.asm	/^	ret = dst;$/;"	d
ret	obj/user/stresssched.asm	/^	ret = dst;$/;"	d
ret	obj/user/testbss.asm	/^	ret = dst;$/;"	d
ret	obj/user/yield.asm	/^	ret = dst;$/;"	d
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon7	file:
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/user/badsegment.asm	/^	s = src;$/;"	d
s	obj/user/breakpoint.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello.asm	/^	s = src;$/;"	d
s	obj/user/buggyhello2.asm	/^	s = src;$/;"	d
s	obj/user/divzero.asm	/^	s = src;$/;"	d
s	obj/user/dumbfork.asm	/^	s = src;$/;"	d
s	obj/user/evilhello.asm	/^	s = src;$/;"	d
s	obj/user/fairness.asm	/^	s = src;$/;"	d
s	obj/user/faultalloc.asm	/^	s = src;$/;"	d
s	obj/user/faultallocbad.asm	/^	s = src;$/;"	d
s	obj/user/faultbadhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultdie.asm	/^	s = src;$/;"	d
s	obj/user/faultevilhandler.asm	/^	s = src;$/;"	d
s	obj/user/faultnostack.asm	/^	s = src;$/;"	d
s	obj/user/faultread.asm	/^	s = src;$/;"	d
s	obj/user/faultreadkernel.asm	/^	s = src;$/;"	d
s	obj/user/faultregs.asm	/^	s = src;$/;"	d
s	obj/user/faultwrite.asm	/^	s = src;$/;"	d
s	obj/user/faultwritekernel.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/pingpongs.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/sendpage.asm	/^	s = src;$/;"	d
s	obj/user/softint.asm	/^	s = src;$/;"	d
s	obj/user/spin.asm	/^	s = src;$/;"	d
s	obj/user/stresssched.asm	/^	s = src;$/;"	d
s	obj/user/testbss.asm	/^	s = src;$/;"	d
s	obj/user/yield.asm	/^	s = src;$/;"	d
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
sched_halt	kern/sched.c	/^sched_halt(void)$/;"	f
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
sfork	lib/fork.c	/^sfork(void)$/;"	f
sh_addr	inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
size	obj/kern/kernel.asm	/^	size = ROUNDUP(size, PGSIZE);$/;"	d
size_t	inc/types.h	/^typedef uint32_t size_t;$/;"	t
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/breakpoint.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello.asm	/^size_t$/;"	l
size_t	obj/user/buggyhello2.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/dumbfork.asm	/^size_t$/;"	l
size_t	obj/user/evilhello.asm	/^size_t$/;"	l
size_t	obj/user/fairness.asm	/^size_t$/;"	l
size_t	obj/user/faultalloc.asm	/^size_t$/;"	l
size_t	obj/user/faultallocbad.asm	/^size_t$/;"	l
size_t	obj/user/faultbadhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultdie.asm	/^size_t$/;"	l
size_t	obj/user/faultevilhandler.asm	/^size_t$/;"	l
size_t	obj/user/faultnostack.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/faultregs.asm	/^size_t$/;"	l
size_t	obj/user/faultwrite.asm	/^size_t$/;"	l
size_t	obj/user/faultwritekernel.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/pingpongs.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/sendpage.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/stresssched.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	obj/boot/boot.asm	/^start:$/;"	l
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
stat	obj/kern/kernel.asm	/^	stat = inb(KBSTATP);$/;"	d
static	obj/boot/boot.asm	/^static inline uint8_t$/;"	l
static	obj/boot/boot.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static const char *trapname(int trapno)$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct PageInfo*$/;"	l
static	obj/kern/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static struct mpconf *$/;"	t
static	obj/kern/kernel.asm	/^static uint16_t *crt_buf;$/;"	l
static	obj/kern/kernel.asm	/^static uint16_t crt_pos;$/;"	l
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void cons_putc(int c);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static inline int32_t$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/breakpoint.asm	/^static inline int32_t$/;"	l
static	obj/user/breakpoint.asm	/^static long long$/;"	l
static	obj/user/breakpoint.asm	/^static unsigned long long$/;"	l
static	obj/user/breakpoint.asm	/^static void$/;"	l
static	obj/user/buggyhello.asm	/^static inline int32_t$/;"	l
static	obj/user/buggyhello.asm	/^static long long$/;"	l
static	obj/user/buggyhello.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello.asm	/^static void$/;"	l
static	obj/user/buggyhello2.asm	/^static inline int32_t$/;"	l
static	obj/user/buggyhello2.asm	/^static long long$/;"	l
static	obj/user/buggyhello2.asm	/^static unsigned long long$/;"	l
static	obj/user/buggyhello2.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static inline int32_t$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/dumbfork.asm	/^static inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/dumbfork.asm	/^static inline int32_t$/;"	l
static	obj/user/dumbfork.asm	/^static long long$/;"	l
static	obj/user/dumbfork.asm	/^static unsigned long long$/;"	l
static	obj/user/dumbfork.asm	/^static void$/;"	l
static	obj/user/evilhello.asm	/^static inline int32_t$/;"	l
static	obj/user/evilhello.asm	/^static long long$/;"	l
static	obj/user/evilhello.asm	/^static unsigned long long$/;"	l
static	obj/user/evilhello.asm	/^static void$/;"	l
static	obj/user/fairness.asm	/^static inline int32_t$/;"	l
static	obj/user/fairness.asm	/^static long long$/;"	l
static	obj/user/fairness.asm	/^static unsigned long long$/;"	l
static	obj/user/fairness.asm	/^static void$/;"	l
static	obj/user/faultalloc.asm	/^static inline int32_t$/;"	l
static	obj/user/faultalloc.asm	/^static long long$/;"	l
static	obj/user/faultalloc.asm	/^static unsigned long long$/;"	l
static	obj/user/faultalloc.asm	/^static void$/;"	l
static	obj/user/faultallocbad.asm	/^static inline int32_t$/;"	l
static	obj/user/faultallocbad.asm	/^static long long$/;"	l
static	obj/user/faultallocbad.asm	/^static unsigned long long$/;"	l
static	obj/user/faultallocbad.asm	/^static void$/;"	l
static	obj/user/faultbadhandler.asm	/^static inline int32_t$/;"	l
static	obj/user/faultbadhandler.asm	/^static long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultbadhandler.asm	/^static void$/;"	l
static	obj/user/faultdie.asm	/^static inline int32_t$/;"	l
static	obj/user/faultdie.asm	/^static long long$/;"	l
static	obj/user/faultdie.asm	/^static unsigned long long$/;"	l
static	obj/user/faultdie.asm	/^static void$/;"	l
static	obj/user/faultevilhandler.asm	/^static inline int32_t$/;"	l
static	obj/user/faultevilhandler.asm	/^static long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static unsigned long long$/;"	l
static	obj/user/faultevilhandler.asm	/^static void$/;"	l
static	obj/user/faultnostack.asm	/^static inline int32_t$/;"	l
static	obj/user/faultnostack.asm	/^static long long$/;"	l
static	obj/user/faultnostack.asm	/^static unsigned long long$/;"	l
static	obj/user/faultnostack.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static inline int32_t$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline int32_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/faultregs.asm	/^static inline int32_t$/;"	l
static	obj/user/faultregs.asm	/^static long long$/;"	l
static	obj/user/faultregs.asm	/^static struct regs before, during, after;$/;"	t
static	obj/user/faultregs.asm	/^static unsigned long long$/;"	l
static	obj/user/faultregs.asm	/^static void$/;"	l
static	obj/user/faultwrite.asm	/^static inline int32_t$/;"	l
static	obj/user/faultwrite.asm	/^static long long$/;"	l
static	obj/user/faultwrite.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwrite.asm	/^static void$/;"	l
static	obj/user/faultwritekernel.asm	/^static inline int32_t$/;"	l
static	obj/user/faultwritekernel.asm	/^static long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultwritekernel.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static inline int32_t$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static inline int32_t$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static inline int32_t$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static inline int32_t$/;"	l
static	obj/user/pingpong.asm	/^static int$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/pingpongs.asm	/^static inline int32_t$/;"	l
static	obj/user/pingpongs.asm	/^static int$/;"	l
static	obj/user/pingpongs.asm	/^static long long$/;"	l
static	obj/user/pingpongs.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpongs.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static inline int32_t$/;"	l
static	obj/user/primes.asm	/^static int$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/sendpage.asm	/^static inline int32_t$/;"	l
static	obj/user/sendpage.asm	/^static int$/;"	l
static	obj/user/sendpage.asm	/^static long long$/;"	l
static	obj/user/sendpage.asm	/^static unsigned long long$/;"	l
static	obj/user/sendpage.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static inline int32_t$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static inline int32_t$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/stresssched.asm	/^static inline int32_t$/;"	l
static	obj/user/stresssched.asm	/^static int$/;"	l
static	obj/user/stresssched.asm	/^static long long$/;"	l
static	obj/user/stresssched.asm	/^static unsigned long long$/;"	l
static	obj/user/stresssched.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static inline int32_t$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static inline int32_t$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
str1	user/sendpage.c	/^const char *str1 = "hello child environment! how are you?";$/;"	v
str2	user/sendpage.c	/^const char *str2 = "hello parent environment! I'm good.";$/;"	v
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, int perm)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint32_t syscallno, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)$/;"	f	file:
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe
tf_eip	inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_esp	inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe
thiscpu	kern/cpu.h	38;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/user/badsegment.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/breakpoint.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/buggyhello2.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/divzero.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^		thisenv = &envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/dumbfork.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/evilhello.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/fairness.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultalloc.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultallocbad.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultbadhandler.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultdie.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultevilhandler.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultnostack.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultread.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultreadkernel.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultregs.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwrite.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/faultwritekernel.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/pingpongs.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/sendpage.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/softint.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/spin.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/stresssched.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/testbss.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
thisenv	obj/user/yield.asm	/^	thisenv = & envs[ENVX(sys_getenvid())];$/;"	d
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pde_t *pgdir, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
totalmem	obj/kern/kernel.asm	/^		totalmem = 1 * 1024 + extmem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = 16 * 1024 + ext16mem;$/;"	d
totalmem	obj/kern/kernel.asm	/^		totalmem = basemem;$/;"	d
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon1
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts_cr3	inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate
ts_cs	inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate
ts_ds	inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate
ts_eax	inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate
ts_ebp	inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate
ts_ebx	inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate
ts_ecx	inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate
ts_edi	inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate
ts_edx	inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate
ts_eflags	inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate
ts_eip	inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate
ts_es	inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate
ts_esi	inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate
ts_esp	inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_fs	inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate
ts_gs	inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ldt	inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate
ts_link	inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate
ts_padding1	inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate
ts_padding10	inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate
ts_padding2	inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate
ts_padding3	inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate
ts_padding4	inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate
ts_padding5	inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate
ts_padding6	inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate
ts_padding7	inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate
ts_padding8	inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate
ts_padding9	inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate
ts_ss	inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate
ts_ss0	inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate
ts_ss1	inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate
ts_ss2	inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate
ts_t	inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/user/pingpongs.asm	/^uint32_t val;$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/sendpage.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = (va_cur<va_beg) ? va_beg : va_cur;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf_eflags	inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe
utf_eip	inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe
utf_esp	inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * NPDENTRIES + PGSIZE);$/;"	d
va	obj/kern/kernel.asm	/^	va = ROUNDDOWN(va, PGSIZE);$/;"	d
va_arg	inc/stdarg.h	10;"	d
va_end	inc/stdarg.h	12;"	d
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	8;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
void	obj/boot/boot.asm	/^void readsect(void*, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void readseg(uint32_t, uint32_t, uint32_t);$/;"	l
void	obj/boot/boot.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void *mpentry_kstack;$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void sched_halt(void);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/breakpoint.asm	/^void *$/;"	l
void	obj/user/breakpoint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/breakpoint.asm	/^void$/;"	l
void	obj/user/buggyhello.asm	/^void *$/;"	l
void	obj/user/buggyhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello.asm	/^void$/;"	l
void	obj/user/buggyhello2.asm	/^void *$/;"	l
void	obj/user/buggyhello2.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/buggyhello2.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/dumbfork.asm	/^void *$/;"	l
void	obj/user/dumbfork.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/dumbfork.asm	/^void$/;"	l
void	obj/user/evilhello.asm	/^void *$/;"	l
void	obj/user/evilhello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/evilhello.asm	/^void$/;"	l
void	obj/user/fairness.asm	/^void *$/;"	l
void	obj/user/fairness.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/fairness.asm	/^void$/;"	l
void	obj/user/faultalloc.asm	/^void *$/;"	l
void	obj/user/faultalloc.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultalloc.asm	/^void$/;"	l
void	obj/user/faultallocbad.asm	/^void *$/;"	l
void	obj/user/faultallocbad.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultallocbad.asm	/^void$/;"	l
void	obj/user/faultbadhandler.asm	/^void *$/;"	l
void	obj/user/faultbadhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultbadhandler.asm	/^void$/;"	l
void	obj/user/faultdie.asm	/^void *$/;"	l
void	obj/user/faultdie.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultdie.asm	/^void$/;"	l
void	obj/user/faultevilhandler.asm	/^void *$/;"	l
void	obj/user/faultevilhandler.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultevilhandler.asm	/^void$/;"	l
void	obj/user/faultnostack.asm	/^void *$/;"	l
void	obj/user/faultnostack.asm	/^void _pgfault_upcall();$/;"	l
void	obj/user/faultnostack.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultnostack.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/faultregs.asm	/^void *$/;"	l
void	obj/user/faultregs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultregs.asm	/^void$/;"	l
void	obj/user/faultwrite.asm	/^void *$/;"	l
void	obj/user/faultwrite.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwrite.asm	/^void$/;"	l
void	obj/user/faultwritekernel.asm	/^void *$/;"	l
void	obj/user/faultwritekernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/faultwritekernel.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/pingpongs.asm	/^void *$/;"	l
void	obj/user/pingpongs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpongs.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/sendpage.asm	/^void *$/;"	l
void	obj/user/sendpage.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/sendpage.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/stresssched.asm	/^void *$/;"	l
void	obj/user/stresssched.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/stresssched.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
volatile	obj/user/stresssched.asm	/^volatile int counter;$/;"	l
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
wait	gradelib.py	/^    def wait(self):$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
who	obj/user/dumbfork.asm	/^	who = dumbfork();$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/user/badsegment.asm	/^				width = 0;$/;"	d
width	obj/user/badsegment.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^		width = -1;$/;"	d
width	obj/user/breakpoint.asm	/^				width = 0;$/;"	d
width	obj/user/breakpoint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/breakpoint.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello.asm	/^		width = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = 0;$/;"	d
width	obj/user/buggyhello2.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/buggyhello2.asm	/^		width = -1;$/;"	d
width	obj/user/divzero.asm	/^				width = 0;$/;"	d
width	obj/user/divzero.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^		width = -1;$/;"	d
width	obj/user/dumbfork.asm	/^				width = 0;$/;"	d
width	obj/user/dumbfork.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/dumbfork.asm	/^		width = -1;$/;"	d
width	obj/user/evilhello.asm	/^				width = 0;$/;"	d
width	obj/user/evilhello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/evilhello.asm	/^		width = -1;$/;"	d
width	obj/user/fairness.asm	/^				width = 0;$/;"	d
width	obj/user/fairness.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/fairness.asm	/^		width = -1;$/;"	d
width	obj/user/faultalloc.asm	/^				width = 0;$/;"	d
width	obj/user/faultalloc.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultalloc.asm	/^		width = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = 0;$/;"	d
width	obj/user/faultallocbad.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultallocbad.asm	/^		width = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultbadhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultbadhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultdie.asm	/^				width = 0;$/;"	d
width	obj/user/faultdie.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultdie.asm	/^		width = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = 0;$/;"	d
width	obj/user/faultevilhandler.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultevilhandler.asm	/^		width = -1;$/;"	d
width	obj/user/faultnostack.asm	/^				width = 0;$/;"	d
width	obj/user/faultnostack.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultnostack.asm	/^		width = -1;$/;"	d
width	obj/user/faultread.asm	/^				width = 0;$/;"	d
width	obj/user/faultread.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^		width = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^		width = -1;$/;"	d
width	obj/user/faultregs.asm	/^				width = 0;$/;"	d
width	obj/user/faultregs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultregs.asm	/^		width = -1;$/;"	d
width	obj/user/faultwrite.asm	/^				width = 0;$/;"	d
width	obj/user/faultwrite.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwrite.asm	/^		width = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = 0;$/;"	d
width	obj/user/faultwritekernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/faultwritekernel.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/pingpongs.asm	/^				width = 0;$/;"	d
width	obj/user/pingpongs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpongs.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/sendpage.asm	/^				width = 0;$/;"	d
width	obj/user/sendpage.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/sendpage.asm	/^		width = -1;$/;"	d
width	obj/user/softint.asm	/^				width = 0;$/;"	d
width	obj/user/softint.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^		width = -1;$/;"	d
width	obj/user/spin.asm	/^				width = 0;$/;"	d
width	obj/user/spin.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^		width = -1;$/;"	d
width	obj/user/stresssched.asm	/^				width = 0;$/;"	d
width	obj/user/stresssched.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/stresssched.asm	/^		width = -1;$/;"	d
width	obj/user/testbss.asm	/^				width = 0;$/;"	d
width	obj/user/testbss.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^		width = -1;$/;"	d
width	obj/user/yield.asm	/^				width = 0;$/;"	d
width	obj/user/yield.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^		width = -1;$/;"	d
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon7	file:
write_eflags	inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
zero	obj/user/divzero.asm	/^	zero = 0;$/;"	d
zero	user/divzero.c	/^int zero;$/;"	v
